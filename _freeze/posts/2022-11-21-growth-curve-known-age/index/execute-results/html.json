{
  "hash": "ed0a96be7a419020b45c35d98b9b22fa",
  "result": {
    "markdown": "---\ntitle: \"Simple nonlinear growth\"\nauthor: \"Andrew MacDonald\"\ndescription: |\n  How to model the growth of an individual of known age.\ndate: 21 Nov 2022\ncategories: [UdeS, stan]\nexecute: \n  freeze: auto\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(targets)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(tidybayes)\nsuppressPackageStartupMessages(library(brms))\n```\n:::\n\n\n## Growth when you know the age\n\nWe're doing a lot of work with growth equations these days! This is how to use `brms` to fit the growth of an animal when we know:\n\n-   the birth year\n\n-   size at each year (measured as the length of a leg)\n\n-   time\n\nWe'll start with the classic VB growth equation that has been in several other posts:\n\n$$\nL_t = L_0e^{-rt} + L_\\infty(1 - e^{-rt})\n$$ {#eq-vb}\n\nThe model we use will resemble the others as well:\n\n$$\n\\begin{align}\n\\text{Measurements} &\\sim \\text{Normal}(L_t, \\sigma_{meas})\\\\\nL_t &= L_0e^{-rt} + L_\\infty(1 - e^{-rt}) \\\\\nL_0 &\\sim ...\\\\\nL_\\infty &\\sim ...\\\\\nr &\\sim ...\n\\end{align}\n$$\n\n### Simulating data\n\nI'm starting off with a function to simulate data; this will make it easy to repeat experiments with this model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulate_one_growth_known_age <- function(age, r,\n                                          Lmax,\n                                          size_at_first,\n                                          sd_obs){\n  tibble(age = 0:age,\n         size = size_at_first * exp(-r * age) + Lmax * (1 - exp(-r * age)),\n         obs_size = rnorm(n = length(age), mean = size, sd = sd_obs))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\none_animal <- simulate_one_growth_known_age(9, Lmax = 550, size_at_first = 277, r = .7, sd_obs = 6)\n\none_animal |> \n  ggplot(aes(x = age, y = obs_size)) + \n  geom_point() + \n  theme_bw() + \n  geom_line(aes(y = size)) + \n  labs(x = \"Age\", y = \"Size\") \n```\n\n::: {.cell-output-display}\n![Growth curve for a single individual. The curved line is the true size, and the dots are observations around it. The observations are taken in the field while the semi-tranquilized animal is struggling, so they show some slight variation.](index_files/figure-html/one_animal_plot-1.png){width=672}\n:::\n:::\n\n\n## Nonlinear modelling with BRMS\n\nThere are three steps to defining and elementary model with `brms`:\n\n1.  write the model\n2.  write down some priors\n3.  condition the model on data\n\nIn practice there are many more steps, including prior predictive checks to make sure our priors make sense. In this post I'm going to focus on the mechanistic how-to of fitting a nonlinear model in `brms` and I'll come back to Prior Predictive checks, which I love, in another post.\n\nFirst we define the model, here we need to indicate what are parameters by doing a `~1` after each. Yes it is a formula with multiple little formulae inside it! Feel the power flow through you.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvb_form <- bf(obs_size ~ startsize * exp(-growthrate * age) + maxsize * (1 - exp(-growthrate * age)),\n              startsize ~ 1, \n              growthrate ~ 1,\n              maxsize ~ 1,\n              nl = TRUE,\n              family = gaussian())\n\nget_prior(vb_form, data = one_animal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 prior class      coef group resp dpar      nlpar lb ub\n student_t(3, 0, 17.1) sigma                                       0   \n                (flat)     b                           growthrate      \n                (flat)     b Intercept                 growthrate      \n                (flat)     b                              maxsize      \n                (flat)     b Intercept                    maxsize      \n                (flat)     b                            startsize      \n                (flat)     b Intercept                  startsize      \n       source\n      default\n      default\n (vectorized)\n      default\n (vectorized)\n      default\n (vectorized)\n```\n:::\n\n```{.r .cell-code}\nvb_prior <- c(\n  prior(exponential(1), class = \"sigma\"),\n  prior(normal(0,1), nlpar = \"growthrate\", lb = 0),\n  prior(normal(550, 20), nlpar = \"maxsize\", lb = 0),\n  prior(normal(200, 50), nlpar = \"startsize\", lb = 0)\n)\n\nvb_model <- brm(formula = vb_form,\n                prior = vb_prior, \n                data = one_animal, \n                chains = 2, \n                file = here::here(\"posts/2022-11-21-growth-curve-known-age/vb_model.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\none_animal |> \n  tidybayes::add_predicted_rvars(vb_model) |> \n  ggplot(aes(x = age, dist = .prediction)) + \n  stat_dist_lineribbon() + \n  geom_point(aes(x = age, y = obs_size), inherit.aes = FALSE) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(vb_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Family: gaussian \n  Links: mu = identity; sigma = identity \nFormula: obs_size ~ startsize * exp(-growthrate * age) + maxsize * (1 - exp(-growthrate * age)) \n         startsize ~ 1\n         growthrate ~ 1\n         maxsize ~ 1\n   Data: one_animal (Number of observations: 10) \n  Draws: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 2000\n\nPopulation-Level Effects: \n                     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS\nstartsize_Intercept    275.83      4.47   266.81   284.49 1.00     1050\ngrowthrate_Intercept     0.66      0.03     0.61     0.72 1.00      918\nmaxsize_Intercept      551.62      2.43   546.94   556.62 1.00      814\n                     Tail_ESS\nstartsize_Intercept       866\ngrowthrate_Intercept      796\nmaxsize_Intercept         765\n\nFamily Specific Parameters: \n      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS\nsigma     4.51      0.96     3.05     6.76 1.00      899      951\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}