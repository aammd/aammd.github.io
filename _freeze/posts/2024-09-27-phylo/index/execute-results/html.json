{
  "hash": "03080317c6bb0135b5d7ff657b1b561a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Phylogeny\"\nauthor: \"Andrew MacDonald\"\ndescription: |\n  it is that (evolutionary) time.\ndate: 27 Sept 2024\neditor: source\ncategories: [UdeS, stan]\ndraft: false\neditor_options: \n  chunk_output_type: console\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(targets)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(tidybayes)\n```\n:::\n\n\n\nI've always wanted to understand how to do phylogenetic regressions, and thanks to my colleauge Alex Fuster I finally had the opportunity to sit down and work on them. The literature on the topic is *confusing*, large, and not always clear about what model is being fit. I relied heavily on two resources:\n\n-   one book, a free online resource from Tony Ives [@ives]\n-   a preprint, an excellent review of the use and misuse of Pagel's Lambda by @pearse\n\n## Why a phylogenetic regression?\n\nSuppose you have two traits, measured across many different species – say, social group size (Trait X) and brain size (Trait Y). You want to test the hypothesis that bigger social groups mean a bigger brain. However there's a catch: some of the species are closely related, and others are not. Its entirely possible that any apparent correlation between Trait X and Trait Y comes from random chance: both traits change randomly along evolutionary time. That means that distantly related species have more time to become different to each other, and close relatives have less \"time apart\" and are therefore less likely to be different in their two traits.\n\nBecause every kind of cross-species comparison involves a group of species with a phylogenetic structure, \"controlling for phylogeny\" has become very common in these kinds of studies. Also, because we are usually missing traits for at least some species in our studies, people often use phylogeny as a guide for guessing what trait values are present in the animals that we haven't measured.\n\n## Recipe for phylogeny\n\nI love the large and flexible toolbox of Bayesian methods because it can be adapted to fit such a huge array of models – virtually all the models that ecologists want to fit! However, there's a catch: to fit a model using Stan (or something similar) you have to know *exactly* what model you're fitting. However, because these regressions are usually fit using custom software, it can be a challenge to dig to find the exact equations being fit!\n\nUsing the two resources mentioned above, I was able to write down (I hope!) the equation for the model like this:\n\n$$\n\\begin{align}\ny_i &\\sim \\text{Normal}(\\bar{y} + \\beta_1 x_i + a_{s[i]}, \\sigma_y) \\\\\na_{s} &\\sim \\text{MVNormal}(0, \\Sigma_a)\\\\\n\\Sigma_a &= \\begin{bmatrix}\n\\sigma_a^2 & \\lambda_a \\cdot \\sigma_{12} & \\cdots & \\lambda_a \\cdot \\sigma_{1,s} \\\\\n\\lambda_a \\cdot \\sigma_{21} & \\sigma_a^2 & \\cdots & \\lambda_a \\cdot \\sigma_{2,s} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n\\lambda_a \\cdot \\sigma_{s,1} & \\lambda_a \\cdot \\sigma_{s,2} & \\cdots & \\sigma_a^2\n\\end{bmatrix} \\\\\n\nx_i &\\sim \\text{Normal}(\\bar{x} + b_{s[i]}, \\sigma_x) \\\\\nb_{s} &\\sim \\text{MVNormal}(0, \\Sigma_b)\\\\\n\\Sigma_b &= \\begin{bmatrix}\n\\sigma_b^2 & \\lambda_b \\cdot \\sigma_{12} & \\cdots & \\lambda_b \\cdot \\sigma_{1,s} \\\\\n\\lambda_b \\cdot \\sigma_{21} & \\sigma_b^2 & \\cdots & \\lambda_b \\cdot \\sigma_{2,s} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n\\lambda_b \\cdot \\sigma_{s,1} & \\lambda_b \\cdot \\sigma_{s,2} & \\cdots & \\sigma_b^2\n\\end{bmatrix}\n\n\n\n\\end{align}\n$$ {#eq-phyloreg}\n\n\nYou can see that there are two big variance-covariance matrices here, for the effects of phylogeny on $y$ and $x$. \nThese covariance matrices have three ingredients that are all put together: \n\n1. _the base_ How far apart are species on the phylogeny? Many ecologists work with trees where all the tips end at the present day -- so all species have the same amount of time going back to their last common ancestor. For trees like this, the diagonal is 1 (i.e., 100% of the evolutionary time). The off-diagonals are the proportion of this total time which is shared between species.\n2. _the flavour_ This is a model of species averages. If there were no effect of phylogeny at all, we would still expect species to be a little different. But how different are species from each other? That is controlled by a standard deviation, $\\sigma$, which we multiply the whole matrix by to scale it. \n3. _the secret sauce_ The off-diagnal elements of $\\Sigma$ are multiplied by **another** number between 0 and 1: this is \"Pagel's Lambda\". It acts like a tuning knob, adjusting the amount of phylogenetic flavour that makes it into the model. When $\\lambda$ is 1, we have the maximum amount of covariance coming from the phylogeny. When $\\lambda$ is 0, we are back to an identity matrix and the species are independent. \n\nThere's another way to write this equation that makes these three parts more clear to see. First we have to make $V_{phy}$, which is the _phylogenetic variance-covariance matrix_. This has variances and covariances for each species on our tree. For example, for 3 species the phylogenetic variance covariance matrix is:\n\n$$\nV_{phy} = \\begin{bmatrix}\n\\sigma_1^2 & \\sigma_{12} & \\sigma_{1,3} \\\\\n\\sigma_{2,1} & \\sigma_2^2 & \\sigma_{2,3} \\\\\n\\sigma_{3,1} & \\sigma_{3,2} & \\sigma_3^2\n\\end{bmatrix}\n$$\nThe covariances are equal to the proportion of the tree that is shared between two species. The diagonal is the amount of time between the tree's start and each species. This is just a fancy way to say that, for a tree where all the tips end at the present day, the diagonal is 1 and the off-diagonal is between 0 and 1.\n\nThen, we can write the expression for $\\Sigma$ like this:\n\n$$\n\\Sigma = \\sigma^2 \\lambda V_{phy} + \\sigma^2 (1 - \\lambda) \\mathbf{I}\n$$\nThis is equation 4 in @pearse. \n\n\nI can rewrite @eq-phyloreg in this style:\n\n$$ \n\\begin{align}\n\ny_i &\\sim \\text{Normal}(\\bar{y} + \\beta_1 x_i + a_{s[i]}, \\sigma_y) \\\\\na_{s} &\\sim \\text{MVNormal}(0, \\Sigma_a)\\\\\n\\Sigma_a &= \\sigma_a^2 \\lambda_a V_{phy} + \\sigma_a^2 (1 - \\lambda_a) \\mathbf{I} \\\\\nx_i &\\sim \\text{Normal}(\\bar{x} + b_{s[i]}, \\sigma_x) \\\\\nb_{s} &\\sim \\text{MVNormal}(0, \\Sigma_b)\\\\\n\\Sigma_b &= \\sigma_b^2 \\lambda_b V_{phy} + \\sigma_b^2 (1 - \\lambda_b) \\mathbf{I} \\\\\n\\end{align}\n\n$$\nYou can see I'm using two different trait variances and two different $\\lambda$s, because the two traits might have a different amount of variance among species, and within that might have a different amount of phylogenetic signal.\n\n\n## Data simulation\n\nHere is simulation code from @ives , which generates a dataset where there is a signal for phylogeny and also a relationship between two traits of interest. I'll use this code to generate a dataset and then estimate the known parameters with a Stan model:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## simulate data\nset.seed(1618)\nn <- 20\nb0 <- 0\nb1 <- -.1\nlam.x <- .98\nlam.e <- .8\nsigma_y <- .6\nsigma_x <- 1\n\nphy <- ape::compute.brlen(\n  ape::rtree(n=n),\n  method = \"Grafen\",\n  power = 1)\n\nplot(phy)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nphy.x <- phylolm::transf.branch.lengths(\n  phy=phy, model=\"lambda\",\n  parameters=list(lambda = lam.x))$tree\n\nphy.e <- phylolm::transf.branch.lengths(\n  phy=phy, model=\"lambda\",\n  parameters=list(lambda = lam.e))$tree\n\nx <- ape::rTraitCont(phy.x, model = \"BM\", sigma = sigma_x)\ne <- ape::rTraitCont(phy.e, model = \"BM\", sigma = sigma_y)\nx <- x[match(names(e), names(x))]\nY <- b0 + b1 * x + e\nY <- array(Y)\nrownames(Y) <- phy$tip.label\n\nplot(x, Y)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo <- cmdstanr::cmdstan_model(here::here(\"posts/2024-09-27-phylo/phylo.stan\"))\n\nphylo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` stan\ndata {\n  int n;\n  int s;\n  vector[n] x;\n  vector[n] y;\n  matrix[s, s] phyvcv;\n}\nparameters {\n  real b0;\n  real b1;\n  real sigma_x;\n  real sigma_y;\n  real logit_lambda_x;\n  real logit_lambda_y;\n}\ntransformed parameters {\n  real<lower=0,upper=1> lambda_x;\n  lambda_x = inv_logit(logit_lambda_x);\n  // y\n  real<lower=0,upper=1> lambda_y;\n  lambda_y = inv_logit(logit_lambda_y);\n}\nmodel {\n  b0 ~ std_normal();\n  b1 ~ normal(.5, .5);\n  sigma_x ~ exponential(1);\n  sigma_y ~ exponential(1);\n  logit_lambda_x ~ normal(3, .2);\n  logit_lambda_y ~ normal(0, .2);\n\n  matrix[s, s] vcv_x;\n  vcv_x = add_diag(sigma_x^2*lambda_x*phyvcv, sigma_x^2*(1 - lambda_x));\n\n\n  matrix[s, s] vcv_y;\n  vcv_y = add_diag(sigma_y^2*lambda_y*phyvcv, sigma_y^2*(1 - lambda_y));\n\n\n  x ~ multi_normal(rep_vector(0, n), vcv_x);\n  y ~ multi_normal(b0 + b1*x, vcv_y);\n}\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo_sample <- phylo$sample(data = list(\n  n = n,\n  s = n,\n  x = x,\n  y = Y,\n  phyvcv = ape::vcv(phy)\n),parallel_chains = 4, refresh = 1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning MCMC with 4 parallel chains...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 1 finished in 0.3 seconds.\nChain 2 finished in 0.3 seconds.\nChain 4 finished in 0.3 seconds.\nChain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 3 finished in 0.3 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 0.3 seconds.\nTotal execution time: 0.5 seconds.\n```\n\n\n:::\n\n```{.r .cell-code}\nphylo_sample\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       variable  mean median   sd  mad    q5  q95 rhat ess_bulk ess_tail\n lp__            7.03   7.35 1.88 1.71  3.44 9.42 1.00     1691     2050\n b0              0.25   0.25 0.21 0.20 -0.09 0.59 1.00     3999     2561\n b1             -0.07  -0.07 0.15 0.15 -0.30 0.18 1.00     4884     2904\n sigma_x         0.99   0.97 0.16 0.16  0.75 1.27 1.00     4878     2405\n sigma_y         0.47   0.46 0.09 0.08  0.35 0.63 1.00     3711     2546\n logit_lambda_x  2.99   2.99 0.20 0.20  2.66 3.31 1.00     5765     3000\n logit_lambda_y  0.03   0.03 0.20 0.20 -0.31 0.36 1.00     4084     3063\n lambda_x        0.95   0.95 0.01 0.01  0.93 0.96 1.00     5765     3000\n lambda_y        0.51   0.51 0.05 0.05  0.42 0.59 1.00     4084     3063\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n## Tips from the forum\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo_forum <- cmdstanr::cmdstan_model(here::here(\"posts/2024-09-27-phylo/phylo_forum.stan\"))\n\nphylo_forum\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` stan\ndata {\n  int<lower=0> n;\n  int<lower=0> s;\n  vector[n] x;\n  vector[n] y;\n  matrix[s, s] phyvcv;\n}\ntransformed data {\n  vector[n] zero_vec = rep_vector(0, n);\n}\nparameters {\n  real b0;\n  real<offset=0.5, multiplier=0.5> b1;\n  real sigma_x;\n  real sigma_y;\n  real<offset=3, multiplier=0.2> logit_lambda_x;\n  real<multiplier=0.2> logit_lambda_y;\n}\ntransformed parameters {\n  real<lower=0, upper=1> lambda_x = inv_logit(logit_lambda_x);\n  real<lower=0, upper=1> lambda_y = inv_logit(logit_lambda_y);\n}\nmodel {\n  matrix[s, s] vcv_x\n    = sigma_x^2 * add_diag(lambda_x * phyvcv, 1 - lambda_x);\n  matrix[s, s] vcv_y\n    = sigma_y^2 * add_diag(lambda_y * phyvcv, 1 - lambda_y);\n\n  b0 ~ std_normal();\n  b1 ~ std_normal();\n  sigma_x ~ exponential(1);\n  sigma_y ~ exponential(1);\n  logit_lambda_x ~ std_normal();\n  logit_lambda_y ~ std_normal();\n  x ~ multi_normal(zero_vec, vcv_x);\n  y ~ multi_normal(b0 + b1 * x, vcv_y);\n}\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo_forum_sample <- phylo_forum$sample(data = list(\n  n = n,\n  s = n,\n  x = x,\n  y = Y,\n  phyvcv = ape::vcv(phy)\n),parallel_chains = 4, refresh = 1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning MCMC with 4 parallel chains...\n\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -0.51895, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -0.700908, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -0.770928, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Rejecting initial value:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2   Error evaluating the log probability at the initial value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -0.164996, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\nChain 2 Exception: exponential_lpdf: Random variable is -0.164996, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -239.939, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -30.0871, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -0.0239313, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Rejecting initial value:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3   Error evaluating the log probability at the initial value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -0.582241, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\nChain 3 Exception: exponential_lpdf: Random variable is -0.582241, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -6.77531, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -7.75933, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -0.949866, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -1.94406, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -1.11172, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Rejecting initial value:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4   Error evaluating the log probability at the initial value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -1.23407, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\nChain 4 Exception: exponential_lpdf: Random variable is -1.23407, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Rejecting initial value:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4   Error evaluating the log probability at the initial value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -0.812231, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\nChain 4 Exception: exponential_lpdf: Random variable is -0.812231, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Rejecting initial value:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4   Error evaluating the log probability at the initial value.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -1.2108, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\nChain 4 Exception: exponential_lpdf: Random variable is -1.2108, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -2.11394, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -2.99518, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -381.664, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -9.75761, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -0.234259, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -0.0104136, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -4.03245, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -1.28496, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -0.548797, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: exponential_lpdf: Random variable is -0.694561, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -0.757703, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -4.31528, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -4.30625, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -0.550271, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -0.209166, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: exponential_lpdf: Random variable is -1.53058, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: exponential_lpdf: Random variable is -1.18267, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: exponential_lpdf: Random variable is -0.420203, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 3 finished in 0.5 seconds.\nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 1 finished in 0.6 seconds.\nChain 2 finished in 0.6 seconds.\nChain 4 finished in 0.6 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 0.6 seconds.\nTotal execution time: 0.7 seconds.\n```\n\n\n:::\n\n```{.r .cell-code}\nphylo_forum_sample\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       variable  mean median   sd  mad    q5  q95 rhat ess_bulk ess_tail\n lp__            2.49   2.83 1.91 1.77 -1.12 4.92 1.01     1237     2536\n b0              0.26   0.26 0.22 0.20 -0.11 0.61 1.00     4362     2621\n b1             -0.13  -0.13 0.15 0.15 -0.39 0.11 1.00     4000     2755\n sigma_x         0.81   0.79 0.14 0.13  0.60 1.06 1.00     4085     2605\n sigma_y         0.50   0.48 0.11 0.10  0.36 0.70 1.00     2789     2314\n logit_lambda_x  1.30   1.30 0.69 0.69  0.18 2.41 1.00     4212     2810\n logit_lambda_y  0.27   0.29 0.79 0.77 -1.06 1.56 1.00     2771     2301\n lambda_x        0.77   0.79 0.12 0.11  0.54 0.92 1.00     4212     2810\n lambda_y        0.56   0.57 0.17 0.18  0.26 0.83 1.00     2771     2301\n```\n\n\n:::\n:::\n\n\n\nand an even simpler strategy, replacing the lambda parameter on the logit scale with a beta:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo_beta <- cmdstanr::cmdstan_model(here::here(\"posts/2024-09-27-phylo/phylo_beta.stan\"))\n\nphylo_beta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` stan\ndata {\n  int<lower=0> n;\n  int<lower=0> s;\n  vector[n] x;\n  vector[n] y;\n  matrix[s, s] phyvcv;\n}\ntransformed data {\n  vector[n] zero_vec = rep_vector(0, n);\n}\nparameters {\n  real b0;\n  real<offset=0.5, multiplier=0.5> b1;\n  real<lower=0> sigma_x;\n  real<lower=0> sigma_y;\n  real<lower=0, upper=1> lambda_x;\n  real<lower=0, upper=1> lambda_y;\n}\nmodel {\n  matrix[s, s] vcv_x\n    = sigma_x^2 * add_diag(lambda_x * phyvcv, 1 - lambda_x);\n  matrix[s, s] vcv_y\n    = sigma_y^2 * add_diag(lambda_y * phyvcv, 1 - lambda_y);\n\n  b0 ~ std_normal();\n  b1 ~ std_normal();\n  sigma_x ~ exponential(1);\n  sigma_y ~ exponential(1);\n  lambda_x ~ beta(9, 1);\n  lambda_y ~ beta(5, 5);\n  x ~ multi_normal(zero_vec, vcv_x);\n  y ~ multi_normal(b0 + b1 * x, vcv_y);\n}\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo_beta_sample <- phylo_beta$sample(data = list(\n  n = n,\n  s = n,\n  x = x,\n  y = Y,\n  phyvcv = ape::vcv(phy)\n),parallel_chains = 4, refresh = 1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning MCMC with 4 parallel chains...\n\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: multi_normal_lpdf: LDLT_Factor of covariance parameter is not positive definite.  last conditional variance is 0. (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 31, column 2 to column 36)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 31, column 2 to column 36)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 31, column 2 to column 36)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 3 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 1 finished in 0.4 seconds.\nChain 2 finished in 0.4 seconds.\nChain 3 finished in 0.4 seconds.\nChain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 finished in 0.5 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 0.4 seconds.\nTotal execution time: 0.6 seconds.\n```\n\n\n:::\n\n```{.r .cell-code}\nphylo_beta_sample\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n variable  mean median   sd  mad    q5   q95 rhat ess_bulk ess_tail\n lp__     -3.91  -3.58 1.84 1.71 -7.43 -1.58 1.00     1606     2401\n b0        0.26   0.26 0.21 0.19 -0.09  0.60 1.00     4301     2944\n b1       -0.12  -0.12 0.15 0.14 -0.37  0.12 1.00     4157     2916\n sigma_x   0.95   0.92 0.19 0.18  0.69  1.29 1.00     3548     3016\n sigma_y   0.49   0.47 0.10 0.09  0.36  0.67 1.00     3653     2876\n lambda_x  0.92   0.93 0.06 0.06  0.80  0.99 1.00     2672     1411\n lambda_y  0.54   0.54 0.13 0.14  0.31  0.75 1.00     4050     2728\n```\n\n\n:::\n:::\n\n\n\n## Repeated sampling of these traits\n\nThe simulation above is giving species *means*. However in our study we have more than one measurement per species. Measurements of \"Trait X\" and \"Trait Y\" are measured on different individuals.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nrequire(ape)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: ape\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'ape'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    where\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1618)\n\n# set true parameter values\nn <- 20\nb0_y <- .5\nb1 <- .5\nlam.x <- .98\nlam.e <- .5\nsigma_x <- 1\nsigma_y <- .3\n\n# simulate phylogeny\nphy <- ape::compute.brlen(\n  ape::rtree(n=n),\n  method = \"Grafen\",\n  power = 1)\n\nplot(phy)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# get names from this matrix! needs to line up perfectly\nphyvcv <- ape::vcv(phy)\n\ndistmat_names <- dimnames(phyvcv)[[1]]\n\n# observations per species\nn_obs <- 15\n\n\nphy.x <- phylolm::transf.branch.lengths(\n  phy=phy, model=\"lambda\",\n  parameters=list(lambda = lam.x))$tree\n\nphy.e <- phylolm::transf.branch.lengths(\n  phy=phy, model=\"lambda\",\n  parameters=list(lambda = lam.e))$tree\n\nx <- ape::rTraitCont(phy.x, model = \"BM\", sigma = sigma_x)\ne <- ape::rTraitCont(phy.e, model = \"BM\", sigma = sigma_y)\nx <- x[match(names(e), names(x))]\n\n## calculate Y\nY <- b0_y + b1 * x + e\n\n# Y <- array(Y)\nnames(Y) <- phy$tip.label\n\nplot(x, Y)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\nobs_xy_df <- tibble(x, Y, sp_name = names(x)) |> \n  mutate(\n    sp_id = as.numeric(\n      factor(sp_name, \n             levels = distmat_names))) |> \n  rowwise() |> \n  mutate(obs_x = list(\n    rnorm(n_obs, mean = x, sd = .3)),\n    obs_y = list(rnorm(n_obs, mean = Y, sd = .3)))\n\n\nx_obs_df <- obs_xy_df |> \n  select(sp_id, obs_x) |> unnest(obs_x)\n\ny_obs_df <- obs_xy_df |> \n  select(sp_id, obs_y) |> unnest(obs_y)\n```\n:::\n\n\n\nfit a model that is ready for replication per species:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo_obs <- cmdstanr::cmdstan_model(here::here(\"posts/2024-09-27-phylo/phylo_obs.stan\"))\n\nphylo_obs\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` stan\ndata {\n  int<lower=0> s;\n  // x trait\n  int<lower=0> n_x;\n  vector[n_x] x_obs;\n  array[n_x] int<lower=1,upper=s> sp_id_x;\n  // y trait\n  int<lower=0> n_y;\n  vector[n_y] y_obs;\n  array[n_y] int<lower=1,upper=s> sp_id_y;\n  cov_matrix[s] phyvcv;\n}\ntransformed data {\n  vector[s] zero_vec = rep_vector(0, s);\n}\nparameters {\n  real<offset=.5,multiplier=.8> b0_y;\n  real<offset=0.5, multiplier=0.5> b1;\n  real<lower=0> sigma_x;\n  real<lower=0> sigma_y;\n  real<lower=0, upper=1> lambda_x;\n  real<lower=0, upper=1> lambda_y;\n  vector[s] x_avg;\n  vector[s] y_avg;\n  real<lower=0> sigma_x_obs;\n  real<lower=0> sigma_y_obs;\n}\nmodel {\n  matrix[s, s] vcv_x\n    = sigma_x^2 * add_diag(lambda_x * phyvcv, 1 - lambda_x);\n  matrix[s, s] vcv_y\n    = sigma_y^2 * add_diag(lambda_y * phyvcv, 1 - lambda_y);\n\n  b0_y ~ std_normal();\n  b1 ~ std_normal();\n  sigma_x ~ exponential(1);\n  sigma_y ~ exponential(1);\n  lambda_x ~ beta(9, 1);\n  lambda_y ~ beta(5, 5);\n  sigma_x_obs ~ exponential(1);\n  sigma_y_obs ~ exponential(1);\n  // species averages\n  x_avg ~ multi_normal(zero_vec, vcv_x);\n  y_avg ~ multi_normal(b0_y + b1 * x_avg, vcv_y);\n  // observations of these\n  x_obs ~ normal(x_avg[sp_id_x], sigma_x_obs);\n  y_obs ~ normal(y_avg[sp_id_y], sigma_y_obs);\n\n}\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nphylo_obs_sample <- phylo_obs$sample(data = list(\n  s = n,\n  # trait x\n  n_x = nrow(x_obs_df),\n  x_obs = x_obs_df$obs_x,\n  sp_id_x = x_obs_df$sp_id,\n  # trait y\n  n_y = nrow(y_obs_df),\n  y_obs = y_obs_df$obs_y,\n  sp_id_y = y_obs_df$sp_id,\n  # phylogeny\n  phyvcv = phyvcv\n),parallel_chains = 4, refresh = 1000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning MCMC with 4 parallel chains...\n\nChain 1 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 Exception: multi_normal_lpdf: LDLT_Factor of covariance parameter is not positive definite.  last conditional variance is 0. (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 44, column 2 to column 49)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 1 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 2 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: multi_normal_lpdf: LDLT_Factor of covariance parameter is not positive definite.  last conditional variance is 0. (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 46, column 2 to column 46)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 2 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 3 Iteration:    1 / 2000 [  0%]  (Warmup) \nChain 4 Iteration:    1 / 2000 [  0%]  (Warmup) \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = -nan, but Covariance matrix[2,1] = -nan (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nChain 4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nChain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) \nChain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) \nChain 2 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 3 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 2 finished in 0.6 seconds.\nChain 3 finished in 0.6 seconds.\nChain 1 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 1 finished in 0.7 seconds.\nChain 4 Iteration: 2000 / 2000 [100%]  (Sampling) \nChain 4 finished in 0.8 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 0.7 seconds.\nTotal execution time: 0.9 seconds.\n```\n\n\n:::\n\n```{.r .cell-code}\nphylo_obs_sample$summary(variables = c(\n  \"b0_y\", \"b1\", \"sigma_x\", \"sigma_y\", \"lambda_x\", \"lambda_y\", \"sigma_x_obs\", \"sigma_y_obs\"\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 10\n  variable     mean median     sd    mad    q5   q95  rhat ess_bulk ess_tail\n  <chr>       <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>\n1 b0_y        0.610  0.616 0.131  0.118  0.394 0.813  1.00    3950.    2381.\n2 b1          0.476  0.478 0.102  0.0968 0.309 0.643  1.00    4823.    2686.\n3 sigma_x     0.898  0.876 0.173  0.162  0.656 1.22   1.00    3848.    2722.\n4 sigma_y     0.300  0.289 0.0688 0.0617 0.208 0.426  1.00    2806.    2659.\n5 lambda_x    0.935  0.947 0.0531 0.0474 0.832 0.995  1.00    3298.    1629.\n6 lambda_y    0.476  0.477 0.141  0.146  0.243 0.706  1.00    3867.    2999.\n7 sigma_x_obs 0.290  0.290 0.0126 0.0124 0.270 0.312  1.00    4977.    3515.\n8 sigma_y_obs 0.313  0.312 0.0132 0.0134 0.292 0.335  1.00    5201.    2987.\n```\n\n\n:::\n:::\n\n\n\nI guess I thought it would be better to sample `lambda` on the normal scale as well, but is that misguided? I guess using the unconstrained scale also sets us up for hierarchical effects later.\n\nIn the real-world work that this is focussed on, the traits X and Y are going to be observed on different individuals. Sample size will be different across species with some species missing entirely from one or the other (or both) X and Y.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}