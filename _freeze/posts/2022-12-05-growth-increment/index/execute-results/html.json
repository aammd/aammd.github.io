{
  "hash": "f0c076fb82d0b0c7283cdd2602973d81",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Uncertainty in growth increments\"\nauthor: \"Will Vieira, Andrew MacDonald\"\ndescription: |\n  Process and Measurement error in a simple growth process.\ndate: 11 Nov 2022\ncategories: [UdeS, stan]\n---\n\n\nThe following is a simulation by Will Vieira which explores how process uncertainty and measurement error combine when we measure trees.\n\nThe model imagines a simple linear growth scenario: every year, individuals grow by a random amount $g_i$. This growth increment is random and varies each year according to a normal distribution\n\n$$\n\\begin{align}\nL_{\\text{year}[i]} \\sim N \\\\\n\\end{align}\n$$\n\n$$\nL = lo\n$$\n\nHere is Will's very clean and concise simulation code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyverse)\n\nset.seed(0.0)\n\nnbInd <- 2000\ndeltaYear = 14\nobsError = 5\n\n# Generate individual trees with random size in mm\nsizeGrowth_dt <- tibble(\n    tree_id = 1:nbInd,\n    size_real0 = rgamma(nbInd, 190^2/1e4, 190/1e4)\n    ) |>\n    # each indv increment every year with a N(2.3, 2.2) (values from dataset);\n    # here from size_t to size_t+1 is the sum of X years growth\n    mutate(\n        size_real1 = size_real0 + replicate(n(), sum(rnorm(deltaYear, 2.3, 2.2))),\n        size_real2 = size_real1 + replicate(n(), sum(rnorm(deltaYear, 2.3, 2.2))),\n        size_real3 = size_real2 + replicate(n(), sum(rnorm(deltaYear, 2.3, 2.2))),\n        size_real4 = size_real3 + replicate(n(), sum(rnorm(deltaYear, 2.3, 2.2)))\n    ) |>\n    pivot_longer(\n        cols = contains('size'),\n        names_to = 'timeStep',\n        values_to = 'size_real'\n    ) |>\n    # each observation has an error of measurement\n    mutate(\n        size_random = rnorm(n(), mean = size_real, sd = obsError)\n    ) |>\n    # calculate growth from real and random (observed) values\n    group_by(tree_id) |>\n    mutate(\n        growth_real = (size_real - lag(size_real, 1))/deltaYear,\n        growth_random = (size_random - lag(size_random, 1))/deltaYear\n    ) |>\n    ungroup() |>\n    pivot_longer(\n        cols = contains(c('real', 'random')),\n        names_to = c('var', 'type'),\n        names_sep = '_'\n    ) |>\n    # remove NA for first time step\n    filter(!is.na(value))\n\np1 <- sizeGrowth_dt |>\n  pivot_wider(\n    names_from = type,\n    values_from = value\n  ) |>\n  ggplot(aes(x = real, y = random)) +\n  geom_point(size = .5) +\n  facet_wrap(~var, scales = 'free') +\n  geom_abline(intercept = 0, slope = 1)\n\np2 <- sizeGrowth_dt |>\n  ggplot(aes(value, color = type)) +\n  geom_density() +\n  facet_wrap(~var, scales = 'free')\n\nlibrary(patchwork)\np1  + p2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/setup-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsizeGrowth_dt |> \n  filter(var == \"growth\") |> \n  ggplot(aes(x = value, colour = type)) + \n  geom_density() + \n  stat_function(fun = function(x) dnorm(x, mean = 2.3, sd = 2.2),\n                colour = \"black\") + \n  stat_function(fun = function(x) dnorm(x, mean = 2.3, sd = sqrt(deltaYear)/2.2),\n                colour = \"black\", lty = 2) + \n  stat_function(fun = function(x) dnorm(x, mean = 2.3, \n                                        sd = sqrt(deltaYear)/sqrt(2.2^2 + obsError^2)),\n                colour = \"black\", lty = 3)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd_g <- 2.2\n\nsizeGrowth_dt |> \n  filter(var == \"growth\") |> \n  ggplot(aes(x = value, colour = type)) + \n  geom_density(lwd = 2) + \n  stat_function(fun = function(x) dnorm(x, mean = 2.3, sd = 2.2),\n                colour = \"black\", lty = 3) + \n  stat_function(fun = function(x) dnorm(x, mean = 2.3, sd = 2.2/sqrt(deltaYear)),\n                colour = \"black\", lty = 2) + \n  stat_function(fun = function(x) dnorm(x, mean = 2.3, \n                                        sd = sqrt(\n                                          (sd_g^2 * deltaYear + 2*obsError^2)/deltaYear^2\n                                          )\n                                        ),\n                colour = \"black\", lty = 1) + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nbut why are these correlated?\n\n## Distribution of a difference\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu1 <- 8\nu2 <- 15\nsdx <- 1.5\nn <- 1e5\nx1 <- rnorm(n, mean = u1, sd = sdx)\nx2 <- rnorm(n, mean = u2, sd = sdx)\ntibble(diff = x2 - x1) |> \n  ggplot(aes(x = diff)) + \n  stat_function(fun = \\(x) dnorm(x, mean = u2 - u1, sd = sqrt(2) * sdx),\n                size = 3, col = \"darkgreen\") + \n  geom_density(size = 1, col = \"orange\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nThis is what happens when you have two constant values which are measured with error and then contrasted.\n\nif another process adds to the variation, then the two variances add -- THEN get scaled but `sqrt(2)`\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}