{
  "hash": "70dd784fcf56954d8075ce45d2fffbc7",
  "result": {
    "markdown": "---\ntitle: How many groups is enough?\nauthor: Andrew MacDonald\ndescription: Simulations to see how many groups to use for a random effect\ndate: \"3 June 2023\"\neditor: source\ncategories: [UdeS, stan]\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(targets)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(tidybayes)\nlibrary(cmdstanr)\n```\n:::\n\n\nHow many groups do you need for a random effect? \n\nlet's prepare a data simulation where we are looking at just a few groups. \nWe'll assume we're working with a classic ANOVA:\n\n$$\n\\begin{align}\n\\text{measurement}_i &\\sim \\text{normal}(\\mu_{\\text{treatment}[i]}, \\sigma) \\\\\n\\mu_{\\text{treatment}} &\\sim \\text{normal}(\\mu_{\\text{overall}}, \\sigma_{\\text{treatment}}) \\\\\n\\mu_{\\text{overall}} &\\sim \\text{normal}(14, 1) \\\\\n\\sigma_{\\text{treatment}} &\\sim \\text{exponential}(1) \\\\\n\\sigma_{\\text{treatment}} &\\sim \\text{exponential}(1) \\\\\n\\end{align}\n$$\n\ntest the model\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_ngroup <- 3\ntest_sgroup <- 1.3\ntest_groupmeans <- rnorm(n = test_ngroup, mean = 0, sd = .01)\ntest_groupIDs <- rep(1:test_ngroup, each = 42)\nmeas <- rnorm(n = length(test_groupIDs),\n              mean = test_groupmeans[test_groupIDs],\n              sd = 1.5)\n\nplot(as.factor(test_groupIDs), meas)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\nlook at the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhier_intercept <- cmdstan_model(here::here(\"posts/2023-04-26-how-many-groups-is-enough/hier_intercept.stan\"))\n\nhier_intercept\n```\n\n::: {.cell-output .cell-output-stdout}\n```{.stan}\ndata {\n  int N;\n  int Ngroup;\n  vector[N] measurements;\n  array[N] int<lower=0,upper=Ngroup> group_id;\n}\nparameters {\n  real<lower=0> sigma_group;\n  real<lower=0> sigma_obs;\n  real grand_mean;\n  vector[Ngroup] z;\n}\ntransformed parameters {\n  vector[Ngroup] mean_group;\n  mean_group = grand_mean + z*sigma_group;\n}\nmodel {\n  measurements ~ normal(mean_group[group_id], sigma_obs);\n  z ~ std_normal();\n  sigma_obs ~ exponential(1);\n  sigma_group ~ exponential(10);\n}\n```\n:::\n:::\n\n\nfit it to this sample:\n\n::: {.cell}\n\n```{.r .cell-code}\nhier_intercept_samples <- hier_intercept$sample(\n  data = list(\n    N = length(meas),\n    Ngroup = test_ngroup,\n    measurements = meas,\n    group_id = test_groupIDs),\n  refresh = 0\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRunning MCMC with 4 sequential chains...\n\nChain 1 finished in 0.1 seconds.\nChain 2 finished in 0.1 seconds.\nChain 3 finished in 0.1 seconds.\nChain 4 finished in 0.1 seconds.\n\nAll 4 chains finished successfully.\nMean chain execution time: 0.1 seconds.\nTotal execution time: 0.7 seconds.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: 3 of 4000 (0.0%) transitions ended with a divergence.\nSee https://mc-stan.org/misc/warnings for details.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhier_intercept_samples\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      variable    mean  median   sd  mad      q5     q95 rhat ess_bulk ess_tail\n lp__          -110.59 -110.28 1.90 1.78 -114.23 -108.13 1.00     1427     2015\n sigma_group      0.14    0.11 0.11 0.11    0.01    0.36 1.00     1193     1216\n sigma_obs        1.38    1.38 0.09 0.08    1.25    1.53 1.00     2648     2197\n grand_mean       0.23    0.24 0.16 0.15   -0.01    0.49 1.00     1947     1747\n z[1]             0.36    0.37 0.92 0.89   -1.16    1.86 1.00     2335     2598\n z[2]            -0.73   -0.75 0.94 0.92   -2.23    0.87 1.00     1957     2625\n z[3]             0.33    0.34 0.93 0.92   -1.25    1.85 1.00     2264     2311\n mean_group[1]    0.30    0.29 0.16 0.15    0.04    0.58 1.00     3143     2904\n mean_group[2]    0.11    0.13 0.19 0.18   -0.22    0.39 1.00     2389     2981\n mean_group[3]    0.29    0.28 0.17 0.16    0.03    0.57 1.00     3241     3112\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nnrep <- 5\ngroup_sizes <- c(3, 13, 30, 300)\ntibble(Ngroup = group_sizes,\n       rep = 1:nrep\n```\n:::\n\n\nWhen groups are not different actually\n\n# using a different parameterization\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk <- .8\nq <- 200\n\ncurve(q/k*(1 - exp(-k*x)), xlim = c(0,20))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}