{
  "hash": "152d43fb728fd1562ab9b061b4260a01",
  "result": {
    "markdown": "---\ntitle: Discrete growth with variation\nauthor: Andrew MacDonald\ndescription: \"getting bigger but not in the same way\"\neditor: source\nfreeze: true\ncategories: [UdeS, stan]\nexecute: \n  eval: false\ndraft: true\n---\n\n\n\n## vb growth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n\n\none_roo <- tibble(age = 0:12,\n       has_baby = as.numeric(age > 3),\n       size = 0\n) \none_roo$size[1] <- .01\n\nvb_discrete <- function(L_prev, L_max, r, deltat){\n  L_now <- L_prev*exp(-r * deltat) + L_max * (1 - exp(-r * deltat))\n  return(L_now)\n}\n\nloop_down_vb_discrete <- function(size_vec, Lmax, r, deltaT) {\n  new_size <- size_vec\n  \n  for(j in 2:length(new_size)){\n    new_size[j] <- vb_discrete(L_prev = new_size[j-1], \n                               L_max = Lmax,\n                               r = r, \n                               deltat = deltaT)\n  }\n  return(new_size)\n}\n\n\n\none_roo_obs <- one_roo |> \n  mutate(size = loop_down_vb_discrete(size,\n                                      Lmax = 270,\n                                      r = .8, deltaT = 1),\n         obs = rnorm(n = length(size), mean = size, sd = 1.5))\n\none_roo_obs |> \n  ggplot(aes(x = age, y = obs)) + \n  geom_point() + \n  geom_line(aes(y = size))\n\n## now to add a cost of reproduction on a log scale.\nlog(.8)\n\n\nloop_down_vb_rvec <- function(size_vec, Lmax, rvec, deltaT) {\n  new_size <- size_vec\n  \n  for(j in 2:length(new_size)){\n    new_size[j] <- vb_discrete(L_prev = new_size[j-1], \n                               L_max = Lmax, \n                               r = rvec[j], \n                               deltat = deltaT)\n  }\n  return(new_size)\n}\n\neffect_baby <- -.7\n\none_roo_baby <- one_roo_obs |> \n  mutate(has_baby = as.numeric(age == 4)) |> \n  mutate(log_r = log(.8) + effect_baby * has_baby) |> \n  # rowwise() |> \n  mutate(size = loop_down_vb_rvec(size,\n                                  Lmax = 270, \n                                  r = exp(log_r), \n                                  deltaT = 1),\n         obs = rnorm(n = length(size), mean = size, sd = 1.5))\n\none_roo_baby |> \n  ggplot(aes(x = age, y = size)) + \n  geom_line() + \n  geom_point() + \n  geom_vline(xintercept = 3.5)\n\n# also daydreaming about how to include measurement error in this model.. it would be difficult, I think. \n## can you factor out the error from observations somehow? \n## or easier just to have unobserved parameters there\n# I guess i'm thinking about marginalization.\n\n# seasonal variation\none_roo_baby_yr <- rerun(.n = 42, {\n  one_roo_obs |> \n    mutate(log_r = log(.8) + \n             effect_baby * has_baby + \n             rnorm(n = length(age),\n                   mean = 0,\n                   sd = .4)) |> \n    mutate(size = loop_down_vb_rvec(size,\n                                    Lmax = 270, \n                                    r = exp(log_r), \n                                    deltaT = 1),\n           obs = rnorm(n = length(size), mean = size, sd = 1.5))\n})\n  \none_roo_baby_yr |> bind_rows(.id = \"sim\") |> glimpse() |> \n  ggplot(aes(x = age, y = size, group = sim)) + \n  geom_line() + \n  geom_vline(xintercept = 3.5)\n\n\n## can we do it for more than one individual?\n\n# simple scenario: 11 individuals a year, each year for say 12 years\n\n## start with individuals and their birth years\nbirth_years <- expand_grid(year = 2001:2012,\n                           indiv = paste0(\"_\", 1:11)) |> \n  mutate(indiv = paste0(year, indiv)) \n\n\n## let each individual age\nindiv_ages <- birth_years |> \n  rowwise() |> \n  mutate(age = list(0:11)) |> \n  unnest(age) |> \n  arrange(indiv) |> \n  mutate(year = year + age) \n\nindiv_ages |> \n  ggplot(aes(x = year, y = age, group = indiv)) + \n  geom_point() + \n  geom_line()\n\n## Two things contribute to variation in growth rates: \n## * year variation\n## * individual variation\n\nyear_effects <- indiv_ages$year |> \n  n_distinct() |> \n  rnorm(mean= 0, sd = .7) |> \n  set_names(indiv_ages$year |> unique())\n\nindiv_effects <- indiv_ages$indiv |> \n  n_distinct() |> \n  rnorm(mean= 0, sd = .2) |> \n  set_names(indiv_ages$indiv |> unique())\n\ngrowth_time_id <- indiv_ages |> \n  mutate(r_yr = year_effects[as.character(year)],\n         r_id = indiv_effects[indiv],\n         r_ln = log(.5) + r_id + r_yr) |> \n  # start the size column for each individual\n  mutate(size = 0) |> \n  group_by(indiv) |> \n  mutate(size = if_else(age == 0, 1.1, 0)) |> \n  # let them grow  \n  mutate(size = loop_down_vb_rvec(size,\n                                  Lmax = 270, \n                                  r = exp(r_ln), \n                                  deltaT = 1)\n  ) |> \n  ungroup()\n\ngrowth_time_id |> \n  ggplot(aes(x = year, y = size, group = indiv)) + \n  geom_line(alpha = .5)\n```\n:::\n\n\n\n\n\nmodel the start size as unobserved data, as essentially just \"missing data\" \nshould it be hierarchical? what would that mean? that all individuals have a similar difference, variation in early life? begin by modeling it as uncorrelated with other individual effects.\n\ntreat missing data the same way:\nuse a for-loop to find all the impossible (-999 leg lengths or something)\nthat or write a program that takes as input the location of the NAs\nbut really struggling with knowing how to get age into this model. \nlike we don't know the age of animals, just their age relative to our first measurement of them\n\nreally seems like the easiest thing to work with would be those measurements directly -- treat age of first measurement as t = 0, and ask by what it should be offset to fit with the rest of the animals. could model t as exp (mu + N(0, sigma_to))\n\nThen you can fill in the missing observations as well -- times when we don't observe L -- as a vector of missing observations\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve(200 * (1 - exp(-0.6*(x - (-.3)))),\n      xlim = c(0, 9), ylim = c(0,200))\n```\n:::\n\n\nIt has to be negative -- or, rearrage (combine -) and make always positive\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve(200 * (1 - exp(-0.6*(x + 1))),\n      xlim = c(0, 9), ylim = c(0,200))\n```\n:::\n\n\nBecause the roo is alwasy born BEFORE you see it for the first time! \n\n### parameter recovery\n\nCan we recover parameters from this dataset, with perhaps just some measurement error\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cmdstanr)\n\ndiscrete_vb_constant <- cmdstan_model(stan_file = here::here(\"posts/2023-04-24-discrete-varying-growth/discrete_vb_constant.stan\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\none_roo_list <- one_roo_obs |> \n  filter(age != 0) |> \n  with(list(measure = obs, \n            N = length(obs)))\n\ndiscrete_vb_constant$sample(data = one_roo_list)\n```\n:::\n\n\n\n## in brms\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrow_data_lagged <- growth_time_id |> \n  # add measurment error\n  mutate(obs = rnorm(length(size), mean = size, sd = 1.3)) |> \n  select(year, indiv, age, obs) |> \n  filter(age != 0) |> \n  mutate(last_obs = lag(obs)) |> \n  # drop first measurement because we can't use it\n  filter(!is.na(last_obs))\n\nlibrary(brms)\n\nbf_discr <- bf(obs ~ last_obs * exp(-exp(r)) + Lmax * (1 - exp(-exp(r))),\n    r ~ 1 + (1|year) + (1|indiv),\n    Lmax ~ 1,\n    nl = TRUE)\n\nget_prior(bf_discr, data = grow_data_lagged)\n\n\n\ntest <- brm(bf_discr, data = grow_data_lagged,\n            prior = c(\n  prior(exponential(1), class = \"sigma\"),\n  prior(normal(250, 20), nlpar = \"Lmax\"),\n  prior(normal(0,1), nlpar = \"r\", class = \"b\"),\n  prior(exponential(10), class = \"sd\", nlpar = \"r\", group = \"indiv\"),\n  prior(exponential(10), class = \"sd\", nlpar = \"r\", group = \"year\")\n))\n```\n:::\n\n\n### Stan for the varying effect model\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}