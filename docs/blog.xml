<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Andrew MacDonald</title>
<link>https://aammd.github.io/blog.html</link>
<atom:link href="https://aammd.github.io/blog.xml" rel="self" type="application/rss+xml"/>
<description>Demonstrating ecological concepts and statistical models using simulation</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Fri, 27 Sep 2024 04:00:00 GMT</lastBuildDate>
<item>
  <title>Phylogeny</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2024-09-27-phylo/</link>
  <description><![CDATA[ 





<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span></code></pre></div>
</div>
<p>I’ve always wanted to understand how to do phylogenetic regressions, and thanks to my colleauge Alex Fuster I finally had the opportunity to sit down and work on them. The literature on the topic is <em>confusing</em>, large, and not always clear about what model is being fit. I relied heavily on two resources:</p>
<ul>
<li>one book, a free online resource from Tony Ives <span class="citation" data-cites="ives">(Ives, n.d.)</span></li>
<li>a preprint, an excellent review of the use and misuse of Pagel’s Lambda by <span class="citation" data-cites="pearse">Pearse, Davies, and Wolkovich (n.d.)</span></li>
</ul>
<section id="why-a-phylogenetic-regression" class="level2">
<h2 class="anchored" data-anchor-id="why-a-phylogenetic-regression">Why a phylogenetic regression?</h2>
<p>Suppose you have two traits, measured across many different species – say, social group size (Trait X) and brain size (Trait Y). You want to test the hypothesis that bigger social groups mean a bigger brain. However there’s a catch: some of the species are closely related, and others are not. Its entirely possible that any apparent correlation between Trait X and Trait Y comes from random chance: both traits change randomly along evolutionary time. That means that distantly related species have more time to become different to each other, and close relatives have less “time apart” and are therefore less likely to be different in their two traits.</p>
<p>Because every kind of cross-species comparison involves a group of species with a phylogenetic structure, “controlling for phylogeny” has become very common in these kinds of studies. Also, because we are usually missing traits for at least some species in our studies, people often use phylogeny as a guide for guessing what trait values are present in the animals that we haven’t measured.</p>
</section>
<section id="recipe-for-phylogeny" class="level2">
<h2 class="anchored" data-anchor-id="recipe-for-phylogeny">Recipe for phylogeny</h2>
<p>I love the large and flexible toolbox of Bayesian methods because it can be adapted to fit such a huge array of models – virtually all the models that ecologists want to fit! However, there’s a catch: to fit a model using Stan (or something similar) you have to know <em>exactly</em> what model you’re fitting. However, because these regressions are usually fit using custom software, it can be a challenge to dig to find the exact equations being fit!</p>
<p>Using the two resources mentioned above, I was able to write down (I hope!) the equation for the model like this:</p>
<p>$$ <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0Ay_i%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cbar%7By%7D%20+%20%5Cbeta_1%20x_i%20+%20a_%7Bs%5Bi%5D%7D,%20%5Csigma_y)%20%5C%5C%0Aa_%7Bs%7D%20&amp;%5Csim%20%5Ctext%7BMVNormal%7D(0,%20%5CSigma_a)%5C%5C%0A%5CSigma_a%20&amp;=%20%5Cbegin%7Bbmatrix%7D%0A%5Csigma_a%5E2%20&amp;%20%5Clambda_a%20%5Ccdot%20%5Csigma_%7B12%7D%20&amp;%20%5Ccdots%20&amp;%20%5Clambda_a%20%5Ccdot%20%5Csigma_%7B1,s%7D%20%5C%5C%0A%5Clambda_a%20%5Ccdot%20%5Csigma_%7B21%7D%20&amp;%20%5Csigma_a%5E2%20&amp;%20%5Ccdots%20&amp;%20%5Clambda_a%20%5Ccdot%20%5Csigma_%7B2,s%7D%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A%5Clambda_a%20%5Ccdot%20%5Csigma_%7Bs,1%7D%20&amp;%20%5Clambda_a%20%5Ccdot%20%5Csigma_%7Bs,2%7D%20&amp;%20%5Ccdots%20&amp;%20%5Csigma_a%5E2%0A%5Cend%7Bbmatrix%7D%20%5C%5C%0A%0Ax_i%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cbar%7Bx%7D%20+%20b_%7Bs%5Bi%5D%7D,%20%5Csigma_x)%20%5C%5C%0Ab_%7Bs%7D%20&amp;%5Csim%20%5Ctext%7BMVNormal%7D(0,%20%5CSigma_b)%5C%5C%0A%5CSigma_b%20&amp;=%20%5Cbegin%7Bbmatrix%7D%0A%5Csigma_b%5E2%20&amp;%20%5Clambda_b%20%5Ccdot%20%5Csigma_%7B12%7D%20&amp;%20%5Ccdots%20&amp;%20%5Clambda_b%20%5Ccdot%20%5Csigma_%7B1,s%7D%20%5C%5C%0A%5Clambda_b%20%5Ccdot%20%5Csigma_%7B21%7D%20&amp;%20%5Csigma_b%5E2%20&amp;%20%5Ccdots%20&amp;%20%5Clambda_b%20%5Ccdot%20%5Csigma_%7B2,s%7D%20%5C%5C%0A%5Cvdots%20&amp;%20%5Cvdots%20&amp;%20%5Cddots%20&amp;%20%5Cvdots%20%5C%5C%0A%5Clambda_b%20%5Ccdot%20%5Csigma_%7Bs,1%7D%20&amp;%20%5Clambda_b%20%5Ccdot%20%5Csigma_%7Bs,2%7D%20&amp;%20%5Ccdots%20&amp;%20%5Csigma_b%5E2%0A%5Cend%7Bbmatrix%7D%0A%0A%0A%0A%5Cend%7Balign%7D"> $$ {#eq-phyloreg}</p>
<p>You can see that there are two big variance-covariance matrices here, for the effects of phylogeny on <img src="https://latex.codecogs.com/png.latex?y"> and <img src="https://latex.codecogs.com/png.latex?x">. These covariance matrices have three ingredients that are all put together:</p>
<ol type="1">
<li><em>the base</em> How far apart are species on the phylogeny? Many ecologists work with trees where all the tips end at the present day – so all species have the same amount of time going back to their last common ancestor. For trees like this, the diagonal is 1 (i.e., 100% of the evolutionary time). The off-diagonals are the proportion of this total time which is shared between species.</li>
<li><em>the flavour</em> This is a model of species averages. If there were no effect of phylogeny at all, we would still expect species to be a little different. But how different are species from each other? That is controlled by a standard deviation, <img src="https://latex.codecogs.com/png.latex?%5Csigma">, which we multiply the whole matrix by to scale it.</li>
<li><em>the secret sauce</em> The off-diagnal elements of <img src="https://latex.codecogs.com/png.latex?%5CSigma"> are multiplied by <strong>another</strong> number between 0 and 1: this is “Pagel’s Lambda”. It acts like a tuning knob, adjusting the amount of phylogenetic flavour that makes it into the model. When <img src="https://latex.codecogs.com/png.latex?%5Clambda"> is 1, we have the maximum amount of covariance coming from the phylogeny. When <img src="https://latex.codecogs.com/png.latex?%5Clambda"> is 0, we are back to an identity matrix and the species are independent.</li>
</ol>
<p>There’s another way to write this equation that makes these three parts more clear to see. First we have to make <img src="https://latex.codecogs.com/png.latex?V_%7Bphy%7D">, which is the <em>phylogenetic variance-covariance matrix</em>. This has variances and covariances for each species on our tree. For example, for 3 species the phylogenetic variance covariance matrix is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AV_%7Bphy%7D%20=%20%5Cbegin%7Bbmatrix%7D%0A%5Csigma_1%5E2%20&amp;%20%5Csigma_%7B12%7D%20&amp;%20%5Csigma_%7B1,3%7D%20%5C%5C%0A%5Csigma_%7B2,1%7D%20&amp;%20%5Csigma_2%5E2%20&amp;%20%5Csigma_%7B2,3%7D%20%5C%5C%0A%5Csigma_%7B3,1%7D%20&amp;%20%5Csigma_%7B3,2%7D%20&amp;%20%5Csigma_3%5E2%0A%5Cend%7Bbmatrix%7D%0A"> The covariances are equal to the proportion of the tree that is shared between two species. The diagonal is the amount of time between the tree’s start and each species. This is just a fancy way to say that, for a tree where all the tips end at the present day, the diagonal is 1 and the off-diagonal is between 0 and 1.</p>
<p>Then, we can write the expression for <img src="https://latex.codecogs.com/png.latex?%5CSigma"> like this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5CSigma%20=%20%5Csigma%5E2%20%5Clambda%20V_%7Bphy%7D%20+%20%5Csigma%5E2%20(1%20-%20%5Clambda)%20%5Cmathbf%7BI%7D%0A"> This is equation 4 in <span class="citation" data-cites="pearse">Pearse, Davies, and Wolkovich (n.d.)</span>.</p>
<p>I can rewrite <strong>?@eq-phyloreg</strong> in this style:</p>
<p>$$ <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0A%0Ay_i%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cbar%7By%7D%20+%20%5Cbeta_1%20x_i%20+%20a_%7Bs%5Bi%5D%7D,%20%5Csigma_y)%20%5C%5C%0Aa_%7Bs%7D%20&amp;%5Csim%20%5Ctext%7BMVNormal%7D(0,%20%5CSigma_a)%5C%5C%0A%5CSigma_a%20&amp;=%20%5Csigma_a%5E2%20%5Clambda_a%20V_%7Bphy%7D%20+%20%5Csigma_a%5E2%20(1%20-%20%5Clambda_a)%20%5Cmathbf%7BI%7D%20%5C%5C%0Ax_i%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cbar%7Bx%7D%20+%20b_%7Bs%5Bi%5D%7D,%20%5Csigma_x)%20%5C%5C%0Ab_%7Bs%7D%20&amp;%5Csim%20%5Ctext%7BMVNormal%7D(0,%20%5CSigma_b)%5C%5C%0A%5CSigma_b%20&amp;=%20%5Csigma_b%5E2%20%5Clambda_b%20V_%7Bphy%7D%20+%20%5Csigma_b%5E2%20(1%20-%20%5Clambda_b)%20%5Cmathbf%7BI%7D%20%5C%5C%0A%5Cend%7Balign%7D"></p>
<p>$$ You can see I’m using two different trait variances and two different <img src="https://latex.codecogs.com/png.latex?%5Clambda">s, because the two traits might have a different amount of variance among species, and within that might have a different amount of phylogenetic signal.</p>
</section>
<section id="data-simulation" class="level2">
<h2 class="anchored" data-anchor-id="data-simulation">Data simulation</h2>
<p>Here is simulation code from <span class="citation" data-cites="ives">Ives (n.d.)</span> , which generates a dataset where there is a signal for phylogeny and also a relationship between two traits of interest. I’ll use this code to generate a dataset and then estimate the known parameters with a Stan model:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## simulate data</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1618</span>)</span>
<span id="cb2-3">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb2-4">b0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-5">b1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-6">lam.x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span></span>
<span id="cb2-7">lam.e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb2-8">sigma_y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb2-9">sigma_x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">phy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compute.brlen</span>(</span>
<span id="cb2-12">  ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rtree</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span>n),</span>
<span id="cb2-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grafen"</span>,</span>
<span id="cb2-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">power =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(phy)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-27-phylo/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">phy.x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylolm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transf.branch.lengths</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phy=</span>phy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lambda"</span>,</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parameters=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> lam.x))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tree</span>
<span id="cb3-4"></span>
<span id="cb3-5">phy.e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylolm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transf.branch.lengths</span>(</span>
<span id="cb3-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phy=</span>phy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lambda"</span>,</span>
<span id="cb3-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parameters=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> lam.e))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tree</span>
<span id="cb3-8"></span>
<span id="cb3-9">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rTraitCont</span>(phy.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BM"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma_x)</span>
<span id="cb3-10">e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rTraitCont</span>(phy.e, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BM"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma_y)</span>
<span id="cb3-11">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">match</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(e), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(x))]</span>
<span id="cb3-12">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> b0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> e</span>
<span id="cb3-13">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">array</span>(Y)</span>
<span id="cb3-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(Y) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tip.label</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, Y)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-27-phylo/index_files/figure-html/unnamed-chunk-1-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">phylo <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2024-09-27-phylo/phylo.stan"</span>))</span>
<span id="cb4-2"></span>
<span id="cb4-3">phylo</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb5-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb5-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> s;</span>
<span id="cb5-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb5-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] y;</span>
<span id="cb5-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] phyvcv;</span>
<span id="cb5-7">}</span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb5-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> b0;</span>
<span id="cb5-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> b1;</span>
<span id="cb5-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma_x;</span>
<span id="cb5-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma_y;</span>
<span id="cb5-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> logit_lambda_x;</span>
<span id="cb5-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> logit_lambda_y;</span>
<span id="cb5-15">}</span>
<span id="cb5-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb5-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_x;</span>
<span id="cb5-18">  lambda_x = inv_logit(logit_lambda_x);</span>
<span id="cb5-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// y</span></span>
<span id="cb5-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_y;</span>
<span id="cb5-21">  lambda_y = inv_logit(logit_lambda_y);</span>
<span id="cb5-22">}</span>
<span id="cb5-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb5-24">  b0 ~ std_normal();</span>
<span id="cb5-25">  b1 ~ normal(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb5-26">  sigma_x ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb5-27">  sigma_y ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb5-28">  logit_lambda_x ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb5-29">  logit_lambda_y ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb5-30"></span>
<span id="cb5-31">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_x;</span>
<span id="cb5-32">  vcv_x = add_diag(sigma_x^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>*lambda_x*phyvcv, sigma_x^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>*(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_x));</span>
<span id="cb5-33"></span>
<span id="cb5-34"></span>
<span id="cb5-35">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_y;</span>
<span id="cb5-36">  vcv_y = add_diag(sigma_y^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>*lambda_y*phyvcv, sigma_y^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>*(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_y));</span>
<span id="cb5-37"></span>
<span id="cb5-38"></span>
<span id="cb5-39">  x ~ multi_normal(rep_vector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n), vcv_x);</span>
<span id="cb5-40">  y ~ multi_normal(b0 + b1*x, vcv_y);</span>
<span id="cb5-41">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">phylo_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylo<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n,</span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> n,</span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Y,</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phyvcv =</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vcv</span>(phy)</span>
<span id="cb6-7">),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.3 seconds.
Chain 2 finished in 0.3 seconds.
Chain 4 finished in 0.3 seconds.
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 0.3 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.3 seconds.
Total execution time: 0.5 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">phylo_sample</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       variable  mean median   sd  mad    q5  q95 rhat ess_bulk ess_tail
 lp__            7.03   7.35 1.88 1.71  3.44 9.42 1.00     1691     2050
 b0              0.25   0.25 0.21 0.20 -0.09 0.59 1.00     3999     2561
 b1             -0.07  -0.07 0.15 0.15 -0.30 0.18 1.00     4884     2904
 sigma_x         0.99   0.97 0.16 0.16  0.75 1.27 1.00     4878     2405
 sigma_y         0.47   0.46 0.09 0.08  0.35 0.63 1.00     3711     2546
 logit_lambda_x  2.99   2.99 0.20 0.20  2.66 3.31 1.00     5765     3000
 logit_lambda_y  0.03   0.03 0.20 0.20 -0.31 0.36 1.00     4084     3063
 lambda_x        0.95   0.95 0.01 0.01  0.93 0.96 1.00     5765     3000
 lambda_y        0.51   0.51 0.05 0.05  0.42 0.59 1.00     4084     3063</code></pre>
</div>
</div>
</section>
<section id="tips-from-the-forum" class="level2">
<h2 class="anchored" data-anchor-id="tips-from-the-forum">Tips from the forum</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">phylo_forum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2024-09-27-phylo/phylo_forum.stan"</span>))</span>
<span id="cb15-2"></span>
<span id="cb15-3">phylo_forum</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb16-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; n;</span>
<span id="cb16-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; s;</span>
<span id="cb16-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb16-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] y;</span>
<span id="cb16-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] phyvcv;</span>
<span id="cb16-7">}</span>
<span id="cb16-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span> {</span>
<span id="cb16-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] zero_vec = rep_vector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n);</span>
<span id="cb16-10">}</span>
<span id="cb16-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb16-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> b0;</span>
<span id="cb16-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">offset</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiplier</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>&gt; b1;</span>
<span id="cb16-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma_x;</span>
<span id="cb16-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma_y;</span>
<span id="cb16-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">offset</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiplier</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>&gt; logit_lambda_x;</span>
<span id="cb16-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiplier</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>&gt; logit_lambda_y;</span>
<span id="cb16-18">}</span>
<span id="cb16-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb16-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_x = inv_logit(logit_lambda_x);</span>
<span id="cb16-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_y = inv_logit(logit_lambda_y);</span>
<span id="cb16-22">}</span>
<span id="cb16-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb16-24">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_x</span>
<span id="cb16-25">    = sigma_x^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * add_diag(lambda_x * phyvcv, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_x);</span>
<span id="cb16-26">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_y</span>
<span id="cb16-27">    = sigma_y^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * add_diag(lambda_y * phyvcv, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_y);</span>
<span id="cb16-28"></span>
<span id="cb16-29">  b0 ~ std_normal();</span>
<span id="cb16-30">  b1 ~ std_normal();</span>
<span id="cb16-31">  sigma_x ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb16-32">  sigma_y ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb16-33">  logit_lambda_x ~ std_normal();</span>
<span id="cb16-34">  logit_lambda_y ~ std_normal();</span>
<span id="cb16-35">  x ~ multi_normal(zero_vec, vcv_x);</span>
<span id="cb16-36">  y ~ multi_normal(b0 + b1 * x, vcv_y);</span>
<span id="cb16-37">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">phylo_forum_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylo_forum<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb17-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n,</span>
<span id="cb17-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> n,</span>
<span id="cb17-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb17-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Y,</span>
<span id="cb17-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phyvcv =</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vcv</span>(phy)</span>
<span id="cb17-7">),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -0.51895, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -0.700908, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -0.770928, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Rejecting initial value:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2   Error evaluating the log probability at the initial value.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -0.164996, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)
Chain 2 Exception: exponential_lpdf: Random variable is -0.164996, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -239.939, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -30.0871, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -0.0239313, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Rejecting initial value:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3   Error evaluating the log probability at the initial value.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -0.582241, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)
Chain 3 Exception: exponential_lpdf: Random variable is -0.582241, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -6.77531, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -7.75933, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -0.949866, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -1.94406, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -1.11172, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Rejecting initial value:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4   Error evaluating the log probability at the initial value.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -1.23407, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)
Chain 4 Exception: exponential_lpdf: Random variable is -1.23407, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Rejecting initial value:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4   Error evaluating the log probability at the initial value.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -0.812231, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)
Chain 4 Exception: exponential_lpdf: Random variable is -0.812231, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Rejecting initial value:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4   Error evaluating the log probability at the initial value.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -1.2108, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)
Chain 4 Exception: exponential_lpdf: Random variable is -1.2108, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -2.11394, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -2.99518, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -381.664, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -9.75761, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -0.234259, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -0.0104136, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -4.03245, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -1.28496, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -0.548797, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: exponential_lpdf: Random variable is -0.694561, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -0.757703, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -4.31528, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -4.30625, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -0.550271, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -0.209166, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: exponential_lpdf: Random variable is -1.53058, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: exponential_lpdf: Random variable is -1.18267, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 31, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: exponential_lpdf: Random variable is -0.420203, but must be nonnegative! (in '/tmp/Rtmpkr95XI/model-431f5eaab01d.stan', line 32, column 2 to column 27)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 0.5 seconds.
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.6 seconds.
Chain 2 finished in 0.6 seconds.
Chain 4 finished in 0.6 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.6 seconds.
Total execution time: 0.7 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb185" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb185-1">phylo_forum_sample</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       variable  mean median   sd  mad    q5  q95 rhat ess_bulk ess_tail
 lp__            2.49   2.83 1.91 1.77 -1.12 4.92 1.01     1237     2536
 b0              0.26   0.26 0.22 0.20 -0.11 0.61 1.00     4362     2621
 b1             -0.13  -0.13 0.15 0.15 -0.39 0.11 1.00     4000     2755
 sigma_x         0.81   0.79 0.14 0.13  0.60 1.06 1.00     4085     2605
 sigma_y         0.50   0.48 0.11 0.10  0.36 0.70 1.00     2789     2314
 logit_lambda_x  1.30   1.30 0.69 0.69  0.18 2.41 1.00     4212     2810
 logit_lambda_y  0.27   0.29 0.79 0.77 -1.06 1.56 1.00     2771     2301
 lambda_x        0.77   0.79 0.12 0.11  0.54 0.92 1.00     4212     2810
 lambda_y        0.56   0.57 0.17 0.18  0.26 0.83 1.00     2771     2301</code></pre>
</div>
</div>
<p>and an even simpler strategy, replacing the lambda parameter on the logit scale with a beta:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb187" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb187-1">phylo_beta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2024-09-27-phylo/phylo_beta.stan"</span>))</span>
<span id="cb187-2"></span>
<span id="cb187-3">phylo_beta</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb188" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb188-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb188-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; n;</span>
<span id="cb188-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; s;</span>
<span id="cb188-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb188-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] y;</span>
<span id="cb188-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] phyvcv;</span>
<span id="cb188-7">}</span>
<span id="cb188-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span> {</span>
<span id="cb188-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] zero_vec = rep_vector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, n);</span>
<span id="cb188-10">}</span>
<span id="cb188-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb188-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> b0;</span>
<span id="cb188-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">offset</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiplier</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>&gt; b1;</span>
<span id="cb188-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma_x;</span>
<span id="cb188-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma_y;</span>
<span id="cb188-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_x;</span>
<span id="cb188-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_y;</span>
<span id="cb188-18">}</span>
<span id="cb188-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb188-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_x</span>
<span id="cb188-21">    = sigma_x^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * add_diag(lambda_x * phyvcv, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_x);</span>
<span id="cb188-22">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_y</span>
<span id="cb188-23">    = sigma_y^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * add_diag(lambda_y * phyvcv, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_y);</span>
<span id="cb188-24"></span>
<span id="cb188-25">  b0 ~ std_normal();</span>
<span id="cb188-26">  b1 ~ std_normal();</span>
<span id="cb188-27">  sigma_x ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb188-28">  sigma_y ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb188-29">  lambda_x ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb188-30">  lambda_y ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb188-31">  x ~ multi_normal(zero_vec, vcv_x);</span>
<span id="cb188-32">  y ~ multi_normal(b0 + b1 * x, vcv_y);</span>
<span id="cb188-33">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb189" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb189-1">phylo_beta_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylo_beta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb189-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> n,</span>
<span id="cb189-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> n,</span>
<span id="cb189-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x,</span>
<span id="cb189-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Y,</span>
<span id="cb189-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phyvcv =</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vcv</span>(phy)</span>
<span id="cb189-7">),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: multi_normal_lpdf: LDLT_Factor of covariance parameter is not positive definite.  last conditional variance is 0. (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 31, column 2 to column 36)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 31, column 2 to column 36)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 31, column 2 to column 36)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/RtmpxIHnAa/model-170e11e0a599.stan', line 32, column 2 to column 39)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.4 seconds.
Chain 2 finished in 0.4 seconds.
Chain 3 finished in 0.4 seconds.
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 0.5 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.4 seconds.
Total execution time: 0.6 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb230" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb230-1">phylo_beta_sample</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> variable  mean median   sd  mad    q5   q95 rhat ess_bulk ess_tail
 lp__     -3.91  -3.58 1.84 1.71 -7.43 -1.58 1.00     1606     2401
 b0        0.26   0.26 0.21 0.19 -0.09  0.60 1.00     4301     2944
 b1       -0.12  -0.12 0.15 0.14 -0.37  0.12 1.00     4157     2916
 sigma_x   0.95   0.92 0.19 0.18  0.69  1.29 1.00     3548     3016
 sigma_y   0.49   0.47 0.10 0.09  0.36  0.67 1.00     3653     2876
 lambda_x  0.92   0.93 0.06 0.06  0.80  0.99 1.00     2672     1411
 lambda_y  0.54   0.54 0.13 0.14  0.31  0.75 1.00     4050     2728</code></pre>
</div>
</div>
</section>
<section id="repeated-sampling-of-these-traits" class="level2">
<h2 class="anchored" data-anchor-id="repeated-sampling-of-these-traits">Repeated sampling of these traits</h2>
<p>The simulation above is giving species <em>means</em>. However in our study we have more than one measurement per species. Measurements of “Trait X” and “Trait Y” are measured on different individuals.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb232" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb232-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb232-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(ape)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Loading required package: ape</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>
Attaching package: 'ape'</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>The following object is masked from 'package:dplyr':

    where</code></pre>
</div>
<div class="sourceCode cell-code" id="cb236" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb236-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1618</span>)</span>
<span id="cb236-2"></span>
<span id="cb236-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># set true parameter values</span></span>
<span id="cb236-4">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb236-5">b0_y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb236-6">b1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb236-7">lam.x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">98</span></span>
<span id="cb236-8">lam.e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb236-9">sigma_x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb236-10">sigma_y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb236-11"></span>
<span id="cb236-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate phylogeny</span></span>
<span id="cb236-13">phy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compute.brlen</span>(</span>
<span id="cb236-14">  ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rtree</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span>n),</span>
<span id="cb236-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grafen"</span>,</span>
<span id="cb236-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">power =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb236-17"></span>
<span id="cb236-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(phy)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-27-phylo/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb237" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb237-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get names from this matrix! needs to line up perfectly</span></span>
<span id="cb237-2">phyvcv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vcv</span>(phy)</span>
<span id="cb237-3"></span>
<span id="cb237-4">distmat_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(phyvcv)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb237-5"></span>
<span id="cb237-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># observations per species</span></span>
<span id="cb237-7">n_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span>
<span id="cb237-8"></span>
<span id="cb237-9"></span>
<span id="cb237-10">phy.x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylolm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transf.branch.lengths</span>(</span>
<span id="cb237-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phy=</span>phy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lambda"</span>,</span>
<span id="cb237-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parameters=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> lam.x))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tree</span>
<span id="cb237-13"></span>
<span id="cb237-14">phy.e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylolm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transf.branch.lengths</span>(</span>
<span id="cb237-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phy=</span>phy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lambda"</span>,</span>
<span id="cb237-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parameters=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> lam.e))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tree</span>
<span id="cb237-17"></span>
<span id="cb237-18">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rTraitCont</span>(phy.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BM"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma_x)</span>
<span id="cb237-19">e <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rTraitCont</span>(phy.e, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BM"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma_y)</span>
<span id="cb237-20">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">match</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(e), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(x))]</span>
<span id="cb237-21"></span>
<span id="cb237-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## calculate Y</span></span>
<span id="cb237-23">Y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> b0_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> e</span>
<span id="cb237-24"></span>
<span id="cb237-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Y &lt;- array(Y)</span></span>
<span id="cb237-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(Y) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tip.label</span>
<span id="cb237-27"></span>
<span id="cb237-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, Y)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-27-phylo/index_files/figure-html/unnamed-chunk-8-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb238" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb238-1">obs_xy_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(x, Y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sp_name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(x)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb238-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(</span>
<span id="cb238-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sp_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(</span>
<span id="cb238-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(sp_name, </span>
<span id="cb238-5">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> distmat_names))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb238-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowwise</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb238-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb238-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n_obs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),</span>
<span id="cb238-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n_obs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> Y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)))</span>
<span id="cb238-10"></span>
<span id="cb238-11"></span>
<span id="cb238-12">x_obs_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obs_xy_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb238-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(sp_id, obs_x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(obs_x)</span>
<span id="cb238-14"></span>
<span id="cb238-15">y_obs_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> obs_xy_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb238-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(sp_id, obs_y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(obs_y)</span></code></pre></div>
</div>
<p>fit a model that is ready for replication per species:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb239" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb239-1">phylo_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2024-09-27-phylo/phylo_obs.stan"</span>))</span>
<span id="cb239-2"></span>
<span id="cb239-3">phylo_obs</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb240" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb240-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb240-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; s;</span>
<span id="cb240-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// x trait</span></span>
<span id="cb240-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; n_x;</span>
<span id="cb240-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n_x] x_obs;</span>
<span id="cb240-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n_x] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=s&gt; sp_id_x;</span>
<span id="cb240-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// y trait</span></span>
<span id="cb240-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; n_y;</span>
<span id="cb240-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n_y] y_obs;</span>
<span id="cb240-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n_y] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=s&gt; sp_id_y;</span>
<span id="cb240-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">cov_matrix</span>[s] phyvcv;</span>
<span id="cb240-12">}</span>
<span id="cb240-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span> {</span>
<span id="cb240-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[s] zero_vec = rep_vector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, s);</span>
<span id="cb240-15">}</span>
<span id="cb240-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb240-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">offset</span>=.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiplier</span>=.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>&gt; b0_y;</span>
<span id="cb240-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">offset</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">multiplier</span>=<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>&gt; b1;</span>
<span id="cb240-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma_x;</span>
<span id="cb240-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma_y;</span>
<span id="cb240-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_x;</span>
<span id="cb240-22">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; lambda_y;</span>
<span id="cb240-23">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[s] x_avg;</span>
<span id="cb240-24">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[s] y_avg;</span>
<span id="cb240-25">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma_x_obs;</span>
<span id="cb240-26">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma_y_obs;</span>
<span id="cb240-27">}</span>
<span id="cb240-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb240-29">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_x</span>
<span id="cb240-30">    = sigma_x^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * add_diag(lambda_x * phyvcv, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_x);</span>
<span id="cb240-31">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[s, s] vcv_y</span>
<span id="cb240-32">    = sigma_y^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * add_diag(lambda_y * phyvcv, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - lambda_y);</span>
<span id="cb240-33"></span>
<span id="cb240-34">  b0_y ~ std_normal();</span>
<span id="cb240-35">  b1 ~ std_normal();</span>
<span id="cb240-36">  sigma_x ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb240-37">  sigma_y ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb240-38">  lambda_x ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb240-39">  lambda_y ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb240-40">  sigma_x_obs ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb240-41">  sigma_y_obs ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb240-42">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// species averages</span></span>
<span id="cb240-43">  x_avg ~ multi_normal(zero_vec, vcv_x);</span>
<span id="cb240-44">  y_avg ~ multi_normal(b0_y + b1 * x_avg, vcv_y);</span>
<span id="cb240-45">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// observations of these</span></span>
<span id="cb240-46">  x_obs ~ normal(x_avg[sp_id_x], sigma_x_obs);</span>
<span id="cb240-47">  y_obs ~ normal(y_avg[sp_id_y], sigma_y_obs);</span>
<span id="cb240-48"></span>
<span id="cb240-49">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb241" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb241-1">phylo_obs_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> phylo_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb241-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> n,</span>
<span id="cb241-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># trait x</span></span>
<span id="cb241-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(x_obs_df),</span>
<span id="cb241-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_obs =</span> x_obs_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>obs_x,</span>
<span id="cb241-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sp_id_x =</span> x_obs_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sp_id,</span>
<span id="cb241-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># trait y</span></span>
<span id="cb241-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(y_obs_df),</span>
<span id="cb241-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_obs =</span> y_obs_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>obs_y,</span>
<span id="cb241-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sp_id_y =</span> y_obs_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sp_id,</span>
<span id="cb241-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># phylogeny</span></span>
<span id="cb241-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">phyvcv =</span> phyvcv</span>
<span id="cb241-13">),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: multi_normal_lpdf: LDLT_Factor of covariance parameter is not positive definite.  last conditional variance is 0. (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 44, column 2 to column 49)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: multi_normal_lpdf: LDLT_Factor of covariance parameter is not positive definite.  last conditional variance is 0. (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 46, column 2 to column 46)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = -nan, but Covariance matrix[2,1] = -nan (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: multi_normal_lpdf: Covariance matrix is not symmetric. Covariance matrix[1,2] = inf, but Covariance matrix[2,1] = inf (in '/tmp/Rtmp0GbgnE/model-94836fb75195.stan', line 43, column 2 to column 40)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 0.6 seconds.
Chain 3 finished in 0.6 seconds.
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.7 seconds.
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 0.8 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.7 seconds.
Total execution time: 0.9 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb281" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb281-1">phylo_obs_sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb281-2">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b0_y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lambda_x"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lambda_y"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_x_obs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_y_obs"</span></span>
<span id="cb281-3">))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 8 × 10
  variable     mean median     sd    mad    q5   q95  rhat ess_bulk ess_tail
  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;
1 b0_y        0.610  0.616 0.131  0.118  0.394 0.813  1.00    3950.    2381.
2 b1          0.476  0.478 0.102  0.0968 0.309 0.643  1.00    4823.    2686.
3 sigma_x     0.898  0.876 0.173  0.162  0.656 1.22   1.00    3848.    2722.
4 sigma_y     0.300  0.289 0.0688 0.0617 0.208 0.426  1.00    2806.    2659.
5 lambda_x    0.935  0.947 0.0531 0.0474 0.832 0.995  1.00    3298.    1629.
6 lambda_y    0.476  0.477 0.141  0.146  0.243 0.706  1.00    3867.    2999.
7 sigma_x_obs 0.290  0.290 0.0126 0.0124 0.270 0.312  1.00    4977.    3515.
8 sigma_y_obs 0.313  0.312 0.0132 0.0134 0.292 0.335  1.00    5201.    2987.</code></pre>
</div>
</div>
<p>I guess I thought it would be better to sample <code>lambda</code> on the normal scale as well, but is that misguided? I guess using the unconstrained scale also sets us up for hierarchical effects later.</p>
<p>In the real-world work that this is focussed on, the traits X and Y are going to be observed on different individuals. Sample size will be different across species with some species missing entirely from one or the other (or both) X and Y.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-ives" class="csl-entry">
Ives, Anthony R. n.d. <span>“Mixed and Phylogenetic Models: A Conceptual Introduction to Correlated Data.”</span>
</div>
<div id="ref-pearse" class="csl-entry">
Pearse, William D., T. Jonathan Davies, and E. M. Wolkovich. n.d. <span>“How to Define, Use, and Interpret Pagel<span>’</span>s λ (Lambda) in Ecology and Evolution.”</span> <a href="https://doi.org/10.1101/2023.10.10.561651">https://doi.org/10.1101/2023.10.10.561651</a>.
</div>
</div></section></div> ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2024-09-27-phylo/</guid>
  <pubDate>Fri, 27 Sep 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Ricker Model with Allee effects</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/</link>
  <description><![CDATA[ 





<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span></code></pre></div>
</div>
<p>The <a href="https://en.wikipedia.org/wiki/Ricker_model">Ricker model</a> is a discrete model of population growth. Let’s get to know this model with a few extensions, and fit a demo of it in Stan.</p>
<section id="simulating-the-ricker-model" class="level2">
<h2 class="anchored" data-anchor-id="simulating-the-ricker-model">Simulating the Ricker model</h2>
<p>The model in its simplest form looks like this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AN_%7Bt+1%7D%20=%20N_te%5E%7Br%5Cleft(1%20-%20%5Cfrac%7BN_t%7D%7BK%7D%5Cright)%7D%0A"> You can see that there is density dependence: when <img src="https://latex.codecogs.com/png.latex?N_t%20%3C%3C%20K">, the population grows by a factor of <img src="https://latex.codecogs.com/png.latex?e%5Er"> every time step. When <img src="https://latex.codecogs.com/png.latex?N_t%20=%20K">, the population hits carrying capacity and the population grows by a factor of 1 : e.g.&nbsp;no change.</p>
<p>To start to draw this function I’ll assign values to the parameters and simulate a curve:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb2-2">c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb2-3">N0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-4">K <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">time <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span></span>
<span id="cb2-7"></span>
<span id="cb2-8">N <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(time)</span>
<span id="cb2-9"></span>
<span id="cb2-10">N[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> N0</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (t <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>time){</span>
<span id="cb2-13">  ri <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(ri)</span></span>
<span id="cb2-15">  N[t] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> N[t<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> N[t<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>K))</span>
<span id="cb2-16">}</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="extending-it-uncertainty-and-allee-effects" class="level2">
<h2 class="anchored" data-anchor-id="extending-it-uncertainty-and-allee-effects">Extending it: uncertainty and Allee effects</h2>
<p>Now let’s add some uncertainty every time step! This is a kind of process error: growth rates bounce around randomly from one year to the next, perhaps because of unmodelled processes that affect the average growth rate in the population:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AN_%7Bt+1%7D%20&amp;=%20N_te%5E%7Br_t%5Cleft(1%20-%20%5Cfrac%7BN_t%7D%7BK%7D%5Cright)%7D%20%5C%5C%0A%5Clog(r_t)%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cmu,%5Csigma)%0A%5Cend%7Balign%7D%0A"> Here I’m using a log link on <img src="https://latex.codecogs.com/png.latex?r_t"> because I want to be able to give <img src="https://latex.codecogs.com/png.latex?r_t"> a mean and a variance without worrying about the growth rate flipping sign and suddenly becoming negative.</p>
<p>The second modification I want to make is to add Allee effects to the model. This is another kind of density dependence, but at the other extreme of density: instead of the population getting so <em>large</em> that it grows ever more slowly, it is also possible for the density to be so <em>small</em> that it grows slowly. Its the same kind of thing, and we add it in the same kind of way:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AN_%7Bt+1%7D%20&amp;=%20N_te%5E%7Br_t%5Cleft(1%20-%20%5Cfrac%7BN_t%7D%7BK%7D%5Cright)%5Cleft(1%20-%20%5Cfrac%7BC%7D%7BN_t%7D%5Cright)%7D%20%5C%5C%0A%5Clog(r_t)%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cmu,%5Csigma)%0A%5Cend%7Balign%7D%0A"></p>
<p>Now we’re ready to simulate it all again, and this time I want to wrap it in a function for easy repetition later:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sim_ricker_allee <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(</span>
<span id="cb3-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb3-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>,<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#44</span></span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">K =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>,</span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_process =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>){</span>
<span id="cb3-8">  </span>
<span id="cb3-9">  N <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(time)</span>
<span id="cb3-10">  </span>
<span id="cb3-11">  N[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> N0</span>
<span id="cb3-12">  </span>
<span id="cb3-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (t <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>time){</span>
<span id="cb3-14">    ri <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sd_process)</span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(ri)</span></span>
<span id="cb3-16">    N[t] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> N[t<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(r) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ri) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> N[t<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>K) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> C<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>N[t<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]))</span>
<span id="cb3-17">  }</span>
<span id="cb3-18">  </span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(N)</span>
<span id="cb3-20">}</span></code></pre></div>
</div>
<p>We can repeat it many times using a sprinkle of syntatic sugar thanks to the <code>purrr</code> package<sup>1</sup>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">allee_sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_ricker_allee</span>(</span>
<span id="cb4-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb4-5">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb4-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allee"</span>)</span>
<span id="cb4-8"></span>
<span id="cb4-9"></span>
<span id="cb4-10">no_allee_sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb4-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_ricker_allee</span>(</span>
<span id="cb4-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb4-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb4-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb4-16">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb4-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no allee"</span>)</span>
<span id="cb4-19"></span>
<span id="cb4-20"></span>
<span id="cb4-21"></span>
<span id="cb4-22">two_sims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(allee_sim, no_allee_sim)</span>
<span id="cb4-23"></span>
<span id="cb4-24">two_sims <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>type)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption>Two sets of simulations showing population growth</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">two_sims <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>type) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>and if we look at these another way we can see the difference:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">deltaN_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> two_sims <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"no allee"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(sim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">deltaN =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(N<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(N))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(deltaN)</span>
<span id="cb6-6"></span>
<span id="cb6-7">deltaN_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> deltaN)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">deltaN_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> deltaN)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This really doesn’t seem right! The y intercept is supposed to be <img src="https://latex.codecogs.com/png.latex?r">, and the X intercept is supposed to be <img src="https://latex.codecogs.com/png.latex?K">! Is the cause the variation in growth rate? that is, the parameter <code>sd_process</code> above?</p>
<p>Let’s make a new simulation where this is set to a very low value: :swea</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb8-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_ricker_allee</span>(</span>
<span id="cb8-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb8-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb8-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb8-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_process =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>),</span>
<span id="cb8-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>,</span>
<span id="cb8-8">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb8-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(sim) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">deltaN =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(N<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(N))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>(deltaN) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> deltaN)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>Much better! so the process error makes this pretty traditional plot go kind of haywire.</p>
<p>Interestingly, looking back at the previous figures, you can see that the error is not <em>around</em> the “correct” line at all but mostly below it. That suggests that trying to model error based on lagged growth is probably not going to give a useful answer for the parameters</p>
</section>
<section id="observation-error" class="level2">
<h2 class="anchored" data-anchor-id="observation-error">Observation error</h2>
<p>So far all of this has been in a perfect, imaginary world where we have perfect information on the population density. In reality, we’ll always have a <strong>sample</strong> of the population density. A simple model for this variation is that it follows a Poisson distribution:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AY_t%20&amp;%5Csim%20%5Ctext%7BPoisson%7D(N_t)%5C%5C%0AN_%7Bt+1%7D%20&amp;=%20N_t%20e%5E%7Br%5Cleft(1%20-%20%5Cfrac%7BN_t%7D%7BK%7D%5Cright)%7D%20%5C%5C%0A%5Cend%7Balign%7D%0A"></p>
<p>Lets do a simulation of several observations of <em>one single</em> time series:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1618</span>)</span>
<span id="cb9-2">avg_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_ricker_allee</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>)</span>
<span id="cb9-3"></span>
<span id="cb9-4">obs_dens <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> avg_dens <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">imap</span>(</span>
<span id="cb9-6">    <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb9-7">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(.y),</span>
<span id="cb9-8">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> .x),</span>
<span id="cb9-9">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(obs)</span>
<span id="cb9-10">    )</span>
<span id="cb9-11">    </span>
<span id="cb9-12">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>()</span>
<span id="cb9-14"></span>
<span id="cb9-15"></span>
<span id="cb9-16">obs_dens <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> obs_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> avg), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, </span>
<span id="cb9-20">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb9-21">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb9-22">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(avg_dens),</span>
<span id="cb9-23">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg =</span> avg_dens))</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<p>This shows a few things of interest: the wiggling red line, which shows variation in growth rate at each timestep. This is process error. We can also see variation around this; these is variation coming from a Poisson distribution centered on the true mean population size.</p>
</section>
<section id="coding-and-validating-a-model" class="level2">
<h2 class="anchored" data-anchor-id="coding-and-validating-a-model">Coding and validating a model</h2>
<p>We’re going to torture the math a little bit, to make it more convenient to write it Stan:</p>
<p>Take the expression for the average and log both sides:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AN_%7Bt+1%7D%20&amp;=%20N_te%5E%7Br%5Cleft(1%20-%20%5Cfrac%7BN_t%7D%7BK%7D%5Cright)%7D%20%5C%5C%0A%5Cln(N_%7Bt+1%7D)%20&amp;=%20%5Cln%7BN_t%7D%20+%20r(1%20-%20%5Cfrac%7BN_t%7D%7BK%7D)%20%20%5C%5C%0AL_%7Bt+1%7D%20&amp;=%20L_t%20+%20e%5E%7B%5Cln%7Br%7D%20+%20%5Cln(1%20-%20e%5E%7BL_t%20-%20%5Cln%7BK%7D%7D)%7D%20%5C%5C%0AL_%7Bt+1%7D%20&amp;=%20L_t%20+%20e%5E%7Bs%20+%20%5Cln(1%20-%20e%5E%7BL_t%20-%20J%7D)%7D%20%5C%5C%0A%5Cend%7Balign%7D%0A"> Here to keep notation simple I’m just writing</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?s%20=%20%5Cln%7Br%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?J%20=%20%5Cln%7BK%7D"></li>
<li><img src="https://latex.codecogs.com/png.latex?Lt%20=%20%5Cln%7BN_t%7D"></li>
</ul>
<p>I know what you’re thinking: get help, Andrew!</p>
<p>There’s a couple reasons for this violence:</p>
<ul>
<li>Working on the log scale is easier for parameter estimation. it keeps values on similar scales, even though, for example <img src="https://latex.codecogs.com/png.latex?r"> and <img src="https://latex.codecogs.com/png.latex?K"> have very different magnitudes.</li>
<li>We can take advantage of Stan’s built-in <a href="https://mc-stan.org/docs/functions-reference/real-valued_basic_functions.html#composed-functions">composed functions</a></li>
<li>it will be easier to add hierarchical effects if (when :P ) we want to do that!</li>
</ul>
<p>Here’s a more complete rendering of the model, which will set us up for writing Stan code in the next section:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AY_i%20&amp;%5Csim%20%5Ctext%7BPoisson%5C_log%7D(L_%7Bt%5Bi%5D%7D)%20%5C%5C%0AL_%7Bt+1%7D%20&amp;=%20L_t%20+%20e%5E%7B%5Cleft(s%20+%20%5Cln%5Cleft(1%20-%20e%5E%7BL_t%20-%20J%7D%5Cright)%5Cright)%7D%20%5C%5C%0AL_0%20&amp;%5Csim%20%5Ctext%7BNormal%7D(2,1)%20%5C%5C%0As%20&amp;%5Csim%20%5Ctext%7BNormal%7D(-3,%200.5)%20%5C%5C%0AJ%20&amp;%5Csim%20%5Ctext%7BNormal%7D(6,%201)%0A%5Cend%7Balign%7D%0A"></p>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>I’m old enough to remember when we did everything with for loops and the *apply family and I just hope the youth are grateful for the advances they have now!↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2024-09-23-discrete-growth-latent/</guid>
  <pubDate>Wed, 25 Sep 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Difference of normals is normal</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2024-05-03-difference_of_two_normals/</link>
  <description><![CDATA[ 





<section id="motivating-example" class="level3">
<h3 class="anchored" data-anchor-id="motivating-example">Motivating example</h3>
<p>Suppose you were calculating the growth rate of a fish! The true size of the fish increases from one year to the next. Each year is measured by a different person, such that measurement error is not the same number in each year.</p>
<p>We might calculate growth rate using the traditional calculation for relative growth rate, as the log ratio of size at time <img src="https://latex.codecogs.com/png.latex?t"> and size at time <img src="https://latex.codecogs.com/png.latex?t-1">. that is:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A&amp;%5Clog%20%5Cleft(%5Cfrac%7B%5Ctext%7Bthis%20year%20size%7D%7D%7B%5Ctext%7Blast%20year%20size%7D%7D%5Cright)%20%5C%5C%0A&amp;%5Clog%20(%5Ctext%7Bthis%20year%20size%7D)-%20%5Clog(%5Ctext%7Blast%20year%20size%7D)%0A%5Cend%7Balign%7D%0A"></p>
<p>The difference between two normal distributions is another normal distribution!</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5BX_1%5D%20&amp;%5Csim%20%5Ctext%7BN%7D(%5Cmu_1,%20%5Csigma_1)%20%5C%5C%0A%5BX_2%5D%20&amp;%5Csim%20%5Ctext%7BN%7D(%5Cmu_2,%20%5Csigma_2)%20%5C%5C%0AZ%20&amp;=%20X_1%20-%20X_2%20%5C%5C%0A%5C%5C%0A%5BZ%5D%20&amp;%5Csim%20%5Ctext%7BN%7D%5Cleft(%5Cmu_1%20-%20%5Cmu_2,%20%5Csqrt%7B%5Csigma_1%5E2%20-%20%5Csigma_2%5E2%7D%5Cright)%0A%5Cend%7Balign%7D%0A"></p>
<p>The mean of the new distribution is the differences of the two means: not surprising!</p>
<p>The standard deviation might look like a fancy formula, but it follows directly from what a variance is. A variance is a sum of squares, so when you add or subtract two normal distributions you add or subtract their sums of squares.</p>
<p>Here’s a quick demonstration via simulation.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse))</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3.8 is about log(45), seems like a good fish size.</span></span>
<span id="cb1-4">true_size_last_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.8</span></span>
<span id="cb1-5">true_size_this_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.92</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## observation error</span></span>
<span id="cb1-8">sigma_last_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb1-9">sigma_this_year <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">growth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dbl</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e3</span>,   </span>
<span id="cb1-12">            \(x) {</span>
<span id="cb1-13">              last_year_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, true_size_last_year, sigma_last_year)</span>
<span id="cb1-14">              this_year_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, true_size_this_year, sigma_this_year)</span>
<span id="cb1-15">              </span>
<span id="cb1-16">              this_year_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> last_year_obs}</span>
<span id="cb1-17">) </span>
<span id="cb1-18"></span>
<span id="cb1-19"></span>
<span id="cb1-20"></span>
<span id="cb1-21">growth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enframe</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"growth"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb1-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> growth)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> ..density..), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">binwidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">005</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb1-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stat_density() +</span></span>
<span id="cb1-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun =</span> dnorm, </span>
<span id="cb1-27">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">args =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> true_size_this_year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> true_size_last_year,</span>
<span id="cb1-28">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(sigma_this_year<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> sigma_last_year<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb1-29"><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2024-05-03-difference_of_two_normals/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>probability</category>
  <category>likelihood</category>
  <guid>https://aammd.github.io/posts/2024-05-03-difference_of_two_normals/</guid>
  <pubDate>Fri, 03 May 2024 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Contrasts</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-12-14-contrasts/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3">neach <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb2-4">ys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> neach<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(means, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb2-5">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach)</span>
<span id="cb2-6"></span>
<span id="cb2-7">mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(ys <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> xs)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(xs)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(xs) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contr.helmert</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(xs) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sweep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contr.helmert</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MARGIN =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">STATS =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sweep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MARGIN =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">STATS =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]      [,3]
[1,]    1  0.5 0.3333333
[2,]    1  0.5 0.3333333
[3,]    1  0.5 0.3333333
[4,]    1  0.5 0.3333333</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">mod_helm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(ys <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> xs)</span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(mod_helm)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = ys ~ xs)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.56666 -0.18801 -0.03627  0.17782  0.62273 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  5.29433    0.03218  164.50   &lt;2e-16 ***
xs1          1.13516    0.07883   14.40   &lt;2e-16 ***
xs2          5.48811    0.06827   80.39   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.2787 on 72 degrees of freedom
Multiple R-squared:  0.9893,    Adjusted R-squared:  0.989 
F-statistic:  3335 on 2 and 72 DF,  p-value: &lt; 2.2e-16</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(ys)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5.294333</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5.5</code></pre>
</div>
</div>
<section id="helmert-contrasts" class="level2">
<h2 class="anchored" data-anchor-id="helmert-contrasts">Helmert contrasts</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse))</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot the means</span></span>
<span id="cb13-4"></span>
<span id="cb13-5">hh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(mod_helm)</span>
<span id="cb13-6"></span>
<span id="cb13-7">cc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> RColorBrewer<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set2"</span>)</span>
<span id="cb13-8"></span>
<span id="cb13-9"></span>
<span id="cb13-10">helmert <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(xs, ys) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span> ys)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> mean_cl_normal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb13-15">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,</span>
<span id="cb13-16">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb13-17">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> hh[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]),</span>
<span id="cb13-18">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>, </span>
<span id="cb13-20">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> hh[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb13-21">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> hh[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb13-23">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]),</span>
<span id="cb13-24">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>,</span>
<span id="cb13-26">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), </span>
<span id="cb13-27">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(means[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> hh[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]),</span>
<span id="cb13-28">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb13-29"></span>
<span id="cb13-30">helmert</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Computation failed in `stat_summary()`
Caused by error in `fun.data()`:
! The package "Hmisc" is required.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-12-14-contrasts/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>build a group of 3 this way:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">contr.helmert.unscaled <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(n){</span>
<span id="cb15-2">   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sweep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contr.helmert</span>(n), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">MARGIN =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">STATS =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb15-3">}</span>
<span id="cb15-4"></span>
<span id="cb15-5">cmat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contr.helmert.unscaled</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb15-6"></span>
<span id="cb15-7"></span>
<span id="cb15-8">grand_mean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb15-9">diff_parents <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb15-10">nonadd_hybrid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb15-11"></span>
<span id="cb15-12">geno_simulation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geno_name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"H"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HN"</span>),</span>
<span id="cb15-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geno_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb15-14">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb15-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uncount</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb15-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb15-17">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b1 =</span> cmat[geno_id, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb15-18">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b2 =</span> cmat[geno_id, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb15-19">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg =</span> b0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> grand_mean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> diff_parents <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>nonadd_hybrid,</span>
<span id="cb15-20">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(avg), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> avg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb15-21">  </span>
<span id="cb15-22">geno_simulation <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb15-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> geno_name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb15-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-12-14-contrasts/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="default-contrasts" class="level2">
<h2 class="anchored" data-anchor-id="default-contrasts">default contrasts</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb16-2"></span>
<span id="cb16-3">neach <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb16-4">ys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> neach<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(means, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb16-5">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach)</span>
<span id="cb16-6"></span>
<span id="cb16-7">mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(ys <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> xs)</span>
<span id="cb16-8"></span>
<span id="cb16-9">coefs_trt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(mod)</span>
<span id="cb16-10"></span>
<span id="cb16-11">treatment <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(xs, ys) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span> ys)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> mean_cl_normal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>, </span>
<span id="cb16-16">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb16-17">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1</span>,</span>
<span id="cb16-19">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1</span>,</span>
<span id="cb16-20">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb16-21">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb16-22">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>, </span>
<span id="cb16-24">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>,</span>
<span id="cb16-25">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb16-26">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> coefs_trt[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb16-27">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb16-28"></span>
<span id="cb16-29">treatment</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Computation failed in `stat_summary()`
Caused by error in `fun.data()`:
! The package "Hmisc" is required.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-12-14-contrasts/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="polynomial-contrasts" class="level2">
<h2 class="anchored" data-anchor-id="polynomial-contrasts">Polynomial contrasts</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb18-2"></span>
<span id="cb18-3">neach <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb18-4">ys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> neach<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(means, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb18-5">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ordered</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach))</span>
<span id="cb18-6"></span>
<span id="cb18-7">mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(ys <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> xs)</span>
<span id="cb18-8"></span>
<span id="cb18-9">contr_vals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(xs)</span>
<span id="cb18-10"></span>
<span id="cb18-11">coefs_lin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(mod)</span>
<span id="cb18-12"></span>
<span id="cb18-13">polyfig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(xs, ys) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span> ys)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> mean_cl_normal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> coefs_lin[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> coefs_lin[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y), </span>
<span id="cb18-19">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb18-20">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> contr_vals[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>coefs_lin[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> coefs_lin[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb18-21">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y), </span>
<span id="cb18-23">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb18-24">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> contr_vals[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>coefs_lin[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> coefs_lin[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]),</span>
<span id="cb18-25">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb18-26"></span>
<span id="cb18-27">polyfig</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Computation failed in `stat_summary()`
Caused by error in `fun.data()`:
! The package "Hmisc" is required.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-12-14-contrasts/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<section id="sum-contrasts" class="level3">
<h3 class="anchored" data-anchor-id="sum-contrasts">sum contrasts</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">means <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb20-2"></span>
<span id="cb20-3">neach <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb20-4">ys <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> neach<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(means, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb20-5">xs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(means)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> neach))</span>
<span id="cb20-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contrasts</span>(xs) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contr.sum</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb20-7">mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(ys <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> xs)</span>
<span id="cb20-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(mod)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
lm(formula = ys ~ xs)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.54245 -0.18690  0.02279  0.18022  0.88346 

Coefficients:
            Estimate Std. Error t value Pr(&gt;|t|)    
(Intercept)  5.32356    0.03108  171.31   &lt;2e-16 ***
xs1         -2.34976    0.04395  -53.47   &lt;2e-16 ***
xs2         -1.28808    0.04395  -29.31   &lt;2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.2691 on 72 degrees of freedom
Multiple R-squared:  0.9899,    Adjusted R-squared:  0.9896 
F-statistic:  3523 on 2 and 72 DF,  p-value: &lt; 2.2e-16</code></pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">coefs_sum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(mod)</span>
<span id="cb22-2"></span>
<span id="cb22-3">contrsum <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(xs, ys) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span> ys)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.data =</span> mean_cl_normal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb22-8">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  </span>
<span id="cb22-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>,</span>
<span id="cb22-10">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>,</span>
<span id="cb22-11">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb22-12">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb22-13">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1</span>, </span>
<span id="cb22-15">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.1</span>,</span>
<span id="cb22-16">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], </span>
<span id="cb22-17">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> coefs_sum[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>],</span>
<span id="cb22-18">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> cc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb22-19">contrsum</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Computation failed in `stat_summary()`
Caused by error in `fun.data()`:
! The package "Hmisc" is required.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-12-14-contrasts/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span>
<span id="cb24-2"></span>
<span id="cb24-3"></span>
<span id="cb24-4">(</span>
<span id="cb24-5">  (treatment <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb24-6">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treatment"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb24-7">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb24-8">   ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> contrsum <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-9">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb24-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span>
<span id="cb24-11">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (</span>
<span id="cb24-12">  (helmert <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-13">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Helmert"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb24-14">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-15">    (polyfig <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-16">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Polynomial"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb24-17">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()))</span>
<span id="cb24-18">)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Computation failed in `stat_summary()`
Computation failed in `stat_summary()`
Computation failed in `stat_summary()`
Computation failed in `stat_summary()`
Caused by error in `fun.data()`:
! The package "Hmisc" is required.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-12-14-contrasts/index_files/figure-html/final-figure-1.png" class="img-fluid" width="864"></p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2023-12-14-contrasts/</guid>
  <pubDate>Thu, 14 Dec 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>How to model discrete growth</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-11-24-how-to-model-growth/</link>
  <description><![CDATA[ 





<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_load</span>(one_time)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(one_time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-24-how-to-model-growth/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<section id="controversy" class="level2">
<h2 class="anchored" data-anchor-id="controversy">Controversy!</h2>
</section>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section"></h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the model in stan</span></span>
<span id="cb3-2">transition <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-24-how-to-model-growth/ar1.stan"</span>))</span>
<span id="cb3-3"></span>
<span id="cb3-4">transition</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb4-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb4-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] time;</span>
<span id="cb4-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb4-5">}</span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// transformed data {</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   vector[n] x = log(pop);</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// }</span></span>
<span id="cb4-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb4-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; a;</span>
<span id="cb4-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; b;</span>
<span id="cb4-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb4-13">}</span>
<span id="cb4-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb4-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu_max = a / (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - b);</span>
<span id="cb4-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma_max = sigma /sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb4-17">}</span>
<span id="cb4-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb4-19">  a ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb4-20">  b ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb4-21">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb4-22">  x ~ normal(</span>
<span id="cb4-23">    mu_max .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b, time)),</span>
<span id="cb4-24">    sigma_max .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, time))</span>
<span id="cb4-25">    );</span>
<span id="cb4-26">}</span>
<span id="cb4-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb4-28">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>] x_pred;</span>
<span id="cb4-29">  x_pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>;</span>
<span id="cb4-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) {</span>
<span id="cb4-31">    x_pred[j+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = normal_rng(</span>
<span id="cb4-32">      mu_max * (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b, j)),</span>
<span id="cb4-33">      sigma_max * sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, j))</span>
<span id="cb4-34">      );</span>
<span id="cb4-35">  }</span>
<span id="cb4-36">}</span></code></pre></div>
</div>
</div>
<p>Here is another approach, using a lagged population growth model</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the model in stan</span></span>
<span id="cb5-2">lagged_growth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-24-how-to-model-growth/multiple_spp_ar1.stan"</span>))</span>
<span id="cb5-3"></span>
<span id="cb5-4">lagged_growth</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>data {
  int n;
  int nclone;
  vector[n] x;
  array[n] int&lt;lower=1, upper=nclone&gt; clone_id;
  // for predictions
  int&lt;lower=0, upper=1&gt; fit;
  int nyear;
}
transformed data {
  array[n - nclone] int time;
  array[n - nclone] int time_m1;
  for (i in 2:n) {
    if (clone_id[i] == clone_id[i-1]) {
      time[i - clone_id[i]] = i;
      time_m1[i - clone_id[i]] = i - 1;
    }
  }
}
parameters {
  real&lt;lower=0&gt; a;
  real&lt;lower=0,upper=1&gt; b;
  real&lt;lower=0&gt; sigma;
}
model {

  a ~ normal(2, .5);
  b ~ beta(5,2);
  sigma ~ exponential(5);

  if (fit == 1) {

    x[time] ~ normal(
      a + b * x[time_m1],
      sigma);
  }
}
generated quantities {
  vector[nyear] x_pred;

  x_pred[1] = 0;

  for (j in 2:nyear){
    x_pred[j] =  a + b * x_pred[j-1] + normal_rng(0, sigma);
  }
}</code></pre>
</div>
</div>
</section>
<section id="simulations" class="level2">
<h2 class="anchored" data-anchor-id="simulations">Simulations</h2>
<p>Here are simulations from a one-species AR-1 model that imitate Ives et al.&nbsp;figure 1.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">simulate_pop_growth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(</span>
<span id="cb7-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb7-3">    b, </span>
<span id="cb7-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb7-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, </span>
<span id="cb7-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) {</span>
<span id="cb7-7">  </span>
<span id="cb7-8">  xvec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(tmax)</span>
<span id="cb7-9">  </span>
<span id="cb7-10">  xvec[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x0</span>
<span id="cb7-11">  </span>
<span id="cb7-12">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## process error</span></span>
<span id="cb7-13">  eta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(tmax, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sigma)</span>
<span id="cb7-14">  </span>
<span id="cb7-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(time <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>tmax){</span>
<span id="cb7-16">    xvec[time] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xvec[time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eta[time]</span>
<span id="cb7-17">  }</span>
<span id="cb7-18">  </span>
<span id="cb7-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(xvec)</span>
<span id="cb7-20">}</span></code></pre></div>
</div>
<p>I’m going to simulate a modest number of time series, and choose parameters to make the time series slightly resemble the aphid experiment.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">a_fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-2">b_fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb8-3">sigma_fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb8-4"></span>
<span id="cb8-5">ts_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, </span>
<span id="cb8-6">        <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb8-7">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_pop_growth</span>(</span>
<span id="cb8-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> a_fig, </span>
<span id="cb8-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> b_fig,</span>
<span id="cb8-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, </span>
<span id="cb8-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma_fig, </span>
<span id="cb8-12">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb8-13">            ),</span>
<span id="cb8-14">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pop)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-15">        ),</span>
<span id="cb8-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span></span>
<span id="cb8-17">)</span>
<span id="cb8-18"></span>
<span id="cb8-19">ts_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span>time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-24-how-to-model-growth/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(ts_data))</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<thead>
<tr class="header">
<th style="text-align: left;">sim</th>
<th style="text-align: right;">pop</th>
<th style="text-align: right;">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">0.0000000</td>
<td style="text-align: right;">0</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">0.9548568</td>
<td style="text-align: right;">1</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">2.8629644</td>
<td style="text-align: right;">2</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">2.8740721</td>
<td style="text-align: right;">3</td>
</tr>
<tr class="odd">
<td style="text-align: left;">1</td>
<td style="text-align: right;">2.5695696</td>
<td style="text-align: right;">4</td>
</tr>
<tr class="even">
<td style="text-align: left;">1</td>
<td style="text-align: right;">3.2455612</td>
<td style="text-align: right;">5</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="transition-distribution" class="level2">
<h2 class="anchored" data-anchor-id="transition-distribution">Transition distribution</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">ts_data_nozero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(ts_data, time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3"></span>
<span id="cb10-4">transition_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> transition<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb10-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ts_data_nozero),</span>
<span id="cb10-6">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> ts_data_nozero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pop,</span>
<span id="cb10-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> ts_data_nozero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time),</span>
<span id="cb10-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 1.7 seconds.
Chain 3 finished in 1.7 seconds.
Chain 2 finished in 1.8 seconds.
Chain 4 finished in 1.7 seconds.

All 4 chains finished successfully.
Mean chain execution time: 1.7 seconds.
Total execution time: 2.0 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">transition_sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_rvars</span>(x_pred[time]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> x_pred)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim),</span>
<span id="cb12-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ts_data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log population size"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-24-how-to-model-growth/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">transition_sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(a, b, sigma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_halfeye</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb13-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .variable,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .value),</span>
<span id="cb13-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb13-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb13-9">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .variable, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.value,</span>
<span id="cb13-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, a_fig, </span>
<span id="cb13-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, b_fig,</span>
<span id="cb13-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>, sigma_fig), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) </span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-24-how-to-model-growth/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="lagged-model" class="level2">
<h2 class="anchored" data-anchor-id="lagged-model">Lagged model</h2>
<p>This time there is no need to drop 0s</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">ts_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ts_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sim =</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(sim))</span>
<span id="cb14-3"></span>
<span id="cb14-4">lagged_growth_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lagged_growth<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb14-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ts_data),</span>
<span id="cb14-6">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nclone =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(ts_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim),</span>
<span id="cb14-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> ts_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pop,</span>
<span id="cb14-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> ts_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb14-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clone_id =</span> ts_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sim,</span>
<span id="cb14-10">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb14-11">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nyear =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb14-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 0.3 seconds.
Chain 2 finished in 0.3 seconds.
Chain 3 finished in 0.3 seconds.
Chain 4 finished in 0.3 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.3 seconds.
Total execution time: 0.5 seconds.</code></pre>
</div>
</div>
<section id="predictions" class="level3">
<h3 class="anchored" data-anchor-id="predictions">predictions</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">lagged_growth_sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_rvars</span>(x_pred[time]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> x_pred)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim),</span>
<span id="cb16-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ts_data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb16-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log population size"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-24-how-to-model-growth/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="parameters" class="level3">
<h3 class="anchored" data-anchor-id="parameters">parameters</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">lagged_growth_sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(a, b, sigma) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_halfeye</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb17-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .variable,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .value),</span>
<span id="cb17-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb17-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb17-9">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .variable, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.value,</span>
<span id="cb17-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, a_fig, </span>
<span id="cb17-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, b_fig,</span>
<span id="cb17-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>, sigma_fig), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) </span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-24-how-to-model-growth/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <category>reproduction</category>
  <category>MAR</category>
  <guid>https://aammd.github.io/posts/2023-11-24-how-to-model-growth/</guid>
  <pubDate>Fri, 24 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Discrete-time population growth in Stan</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-11-15-ives03-ts/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span></code></pre></div>
</div>
<section id="background" class="level2">
<h2 class="anchored" data-anchor-id="background">Background</h2>
<p>How do species populations change over time?</p>
<p>How much of that change is caused by interactions with their community?</p>
<p>20 years ago a very influential paper was written by Ives, Dennis, Cottingham and Carpenter <span class="citation" data-cites="ives2003">(Ives et al. 2003)</span>. Ives et al.&nbsp;present a method called a first-order Multivariate AutoRegressive model, also known as MAR(1). The core idea is that species are growing in a density-dependent way, but at a rate that is influenced by the per-capita effects of every other interacting population. A transition matrix captures the effects of each species on every other, and lets us predict how the vector species abundances changes over time.</p>
<p>Ives et al.&nbsp;advance this argument by beginning with univariate (single-species) approach, and that is what this post is about. Perhaps a future post will cover all the models.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0An_t%20&amp;=%20n_%7Bt%20-%201%7De%5E%7Ba%20+%20(b%20-%201)ln(n_%7Bt-1%7D)%7D%20%5C%5C%0Aln(n_t)%20=%20x_t%20&amp;=%20a%20+%20bx_%7Bt%20-%201%7D%0A%5Cend%7Balign%7D%0A"> We can predict the curve at any time <img src="https://latex.codecogs.com/png.latex?t"> with this expression, from finite series:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax_t%20=%20x_%5Cinfty%20+%20b%5Et(x_0%20-%20x_%5Cinfty)%0A"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Curve of a Gompertz growth model.</figcaption>
</figure>
</div>
</div>
</div>
<p>However there might be variation every time step because growth rate differences are caused by lots of unmeasured things.</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AX_t%20&amp;=%20a%20+%20bX_%7Bt-1%7D%20+%20%5Cepsilon_t%20%5C%5C%0A%5Cepsilon%20&amp;%5Csim%20%5Ctext%7BNormal%7D(0,%20%5Csigma)%0A%5Cend%7Balign%7D%0A"></p>
<p>This leads to a mean and variance at time <img src="https://latex.codecogs.com/png.latex?t%20=%20%5Cinfty"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cmu_%5Cinfty%20&amp;=%20%5Cfrac%7Ba%7D%7B1%20-%20b%7D%20%5C%5C%0Av_%5Cinfty%20&amp;=%20%5Cfrac%7B%5Csigma%5E2%7D%7B1%20-%20b%5E2%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>and the mean and variance at time <img src="https://latex.codecogs.com/png.latex?t"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cmu_t%20&amp;=%20%5Cmu_%5Cinfty%20+%20b%5Et(x_0%20-%20%5Cmu_%5Cinfty)%20%5C%5C%0Av_t%20&amp;=%20%5Csigma%5E2%5Cfrac%7B1%20-%20(b%5E2)%5Et%7D%7B1%20-%20b%5E2%7D%20=%20v_%5Cinfty(1%20-%20b%5E%7B2t%7D)%0A%5Cend%7Balign%7D%0A"> Everything here is on the log scale. The result is something that we can work with in a model for the likelihood – the mean and variance of a normal distribution.</p>
</section>
<section id="simulations" class="level2">
<h2 class="anchored" data-anchor-id="simulations">Simulations</h2>
<p>Here are simulations from a one-species AR-1 model that imitate Ives et al.&nbsp;figure 1.</p>
<div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">simulate_pop_growth <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(</span>
<span id="cb3-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb3-3">    b, </span>
<span id="cb3-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb3-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, </span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x0 =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) {</span>
<span id="cb3-7">  </span>
<span id="cb3-8">  xvec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(tmax)</span>
<span id="cb3-9">  </span>
<span id="cb3-10">  xvec[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x0</span>
<span id="cb3-11">  </span>
<span id="cb3-12">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## process error</span></span>
<span id="cb3-13">  eta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(tmax, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sigma)</span>
<span id="cb3-14">  </span>
<span id="cb3-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(time <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>tmax){</span>
<span id="cb3-16">    xvec[time] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xvec[time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> eta[time]</span>
<span id="cb3-17">  }</span>
<span id="cb3-18">  </span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(xvec)</span>
<span id="cb3-20">}</span>
<span id="cb3-21"></span>
<span id="cb3-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_pop_growth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb3-23">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pop)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span>
<span id="cb3-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_pop_growth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb3-29">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pop)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pop, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span></code></pre></div>
<div class="cell quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Growth with a = 0, b = .6, sigma = 1</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-2-2.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Growth with a = 0, b = .95, sigma = 1</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
<p>It’s fun to take a look at this curve after exponentiating it, so as to see the real population sizes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb4-2">        <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_pop_growth</span>(</span>
<span id="cb4-3">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span>),</span>
<span id="cb4-4">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pop)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(pop), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_hline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<section id="functions-for-the-mean-and-variance" class="level3">
<h3 class="anchored" data-anchor-id="functions-for-the-mean-and-variance">Functions for the mean and variance</h3>
<p>We can also get a plot of the changing mean and variance over time. Just from playing with these, we can see what the simulations earlier showed: that variance depends on both the process error <img src="https://latex.codecogs.com/png.latex?%5Csigma"> and on the parameter that controls the amount of density dependence, <img src="https://latex.codecogs.com/png.latex?b">.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">calc_mean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(a, b, time, n_start){</span>
<span id="cb5-2">  mu_max <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b)</span>
<span id="cb5-3">  </span>
<span id="cb5-4">  mu_max <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (n_start <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mu_max)</span>
<span id="cb5-5">}</span>
<span id="cb5-6"></span>
<span id="cb5-7">calc_var <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(b, time, sigma){</span>
<span id="cb5-8">  bsq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-9">  </span>
<span id="cb5-10">  var_max <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> sigma<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> bsq)</span>
<span id="cb5-11">  </span>
<span id="cb5-12">  var_max <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> bsq<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>time)</span>
<span id="cb5-13">}</span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_mean</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_start =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_var</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb6-2">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_var</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-4-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Do these numbers reflect the distribution we see in the simulations?</p>
<div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5002</span>)</span>
<span id="cb7-2">some_sims <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_pop_growth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>),</span>
<span id="cb7-3">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pop)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5">sim_meanvar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_sims <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sim_mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(pop),</span>
<span id="cb7-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sim_var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(pop))</span>
<span id="cb7-9"></span>
<span id="cb7-10">some_sims <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pluck</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pop"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">probability =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"population size (log)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Simulated and predicted population size distribution"</span>)</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnorm</span>(x, </span>
<span id="cb7-16">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_mean</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_start =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>),</span>
<span id="cb7-17">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_var</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">22</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))), </span>
<span id="cb7-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-19">a_fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb7-20">b_fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb7-21">nstart_fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span></span>
<span id="cb7-22">sigma_fig <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-23"></span>
<span id="cb7-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb7-25">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb7-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_mean</span>(</span>
<span id="cb7-27">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> a_fig, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> b_fig, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> time,</span>
<span id="cb7-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_start =</span> nstart_fig),</span>
<span id="cb7-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calc_var</span>(</span>
<span id="cb7-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> b_fig, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma_fig))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time,</span>
<span id="cb7-32">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> mean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> sd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb7-33">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> mean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sd<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb7-34">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> mean)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-35">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(</span>
<span id="cb7-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time,</span>
<span id="cb7-39">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pop, </span>
<span id="cb7-40">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim),</span>
<span id="cb7-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb7-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_dfr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb7-43">                   <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb7-44">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_pop_growth</span>(</span>
<span id="cb7-45">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> a_fig, </span>
<span id="cb7-46">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> b_fig,</span>
<span id="cb7-47">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, </span>
<span id="cb7-48">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sigma =</span> sigma_fig),</span>
<span id="cb7-49">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(pop)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-50">                     ),</span>
<span id="cb7-51">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim"</span></span>
<span id="cb7-52">                   )</span>
<span id="cb7-53">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-54">  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log population size"</span>)</span></code></pre></div>
<div class="cell quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Simulations match the theoretical predictions very closely. Math works!</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-5-2.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Simulations match the theoretical predictions very closely. Math works!</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="aphids" class="level2">
<h2 class="anchored" data-anchor-id="aphids">Aphids</h2>
<p>Below I explore this model and try to fit some examples in Stan. I’m building this example to match work being done at UdeS by students of <a href="https://www.mattbarbour.com/research">Matt Barbour</a>. In these experiments, a single aphid is placed on a radish plant. Aphids are clonal, and give birth to live (!) young.</p>
<p>Each colony, incredibly, starts with a single aphid. This simplifies the expressions for the average and the variance because the starting population size is <img src="https://latex.codecogs.com/png.latex?ln(1)%20=%200"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Cmu_t%20&amp;=%20a%5Cfrac%7B1%20-%20b%5Et%7D%7B1%20-%20b%7D%20&amp;=%20%5Cmu_%5Cinfty(1%20-%20b%5Et)%20%5C%5C%0Av_t%20&amp;=%20%5Csigma%5E2%5Cfrac%7B1%20-%20(b%5E2)%5Et%7D%7B1%20-%20b%5E2%7D%20&amp;=%20v_%5Cinfty(1%20-%20b%5E%7B2t%7D)%0A%5Cend%7Balign%7D%0A"></p>
<p>The entire experiment fits on a single tray in a growth chamber, and Katerie replicated the experiment 6 times.</p>
</section>
<section id="math-a-model-for-one-clone" class="level2">
<h2 class="anchored" data-anchor-id="math-a-model-for-one-clone">Math: a model for one clone</h2>
<p>When we are making replicates observations of a single clone, we only need to know four quantites to predict both the average and the variation around that average: <img src="https://latex.codecogs.com/png.latex?a">, <img src="https://latex.codecogs.com/png.latex?b">, <img src="https://latex.codecogs.com/png.latex?%5Csigma"> and the time that passed since the start, <img src="https://latex.codecogs.com/png.latex?t"></p>
<p>Here is the full Bayesian model with priors. I used prior simulations to come up with these numbers (that’s the next section below!)</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0Ax_%7Bi%7D%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cmu_t,%20%5Csqrt%7Bv_t%7D)%5C%5C%0A%5Cmu_t%20&amp;=%20%5Cmu_%5Cinfty(1%20-%20b%5Et)%20%5C%5C%0Av_t%20&amp;=%20v_%5Cinfty(1%20-%20b%5E%7B2t%7D)%20%5C%5C%0A%5Cmu_%5Cinfty%20&amp;=%20%5Cfrac%7Ba%7D%7B1%20-%20b%7D%20%5C%5C%0Av_%5Cinfty%20&amp;=%20%5Cfrac%7B%5Csigma%5E2%7D%7B1%20-%20b%5E2%7D%20%5C%5C%0Aa%20&amp;%5Csim%20%5Ctext%7BNormal%7D(2,%20.5)%20%5C%5C%0Ab%20&amp;%5Csim%20%5Ctext%7BBeta%7D(5,%202)%20%5C%5C%0A%5Csigma%20&amp;%5Csim%20%5Ctext%7BExponential%7D(1)%20%5C%5C%0A%5Cend%7Balign%7D%0A"></p>
</section>
<section id="make-fake-data" class="level2">
<h2 class="anchored" data-anchor-id="make-fake-data">Make fake data</h2>
<p>Simulating from the data-generating model</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">sim_one_gompertz <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">K =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, </span>
<span id="cb8-2">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb8-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.86</span>,</span>
<span id="cb8-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">s =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb8-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ntime =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>){</span>
<span id="cb8-6">  </span>
<span id="cb8-7">  N <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb8-8">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(ntime <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb8-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(ntime<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b),</span>
<span id="cb8-10">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> s <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(ntime<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> b<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-11">        )</span>
<span id="cb8-12">  )</span>
<span id="cb8-13">        </span>
<span id="cb8-14">        </span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>(ntime<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)))</span>
<span id="cb8-16">}</span>
<span id="cb8-17"></span>
<span id="cb8-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_one_gompertz</span>()), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim_id"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb8-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the model in stan</span></span>
<span id="cb9-2">ar_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-15-ives03-ts/ar1.stan"</span>))</span>
<span id="cb9-3"></span>
<span id="cb9-4">ar_1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb10-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb10-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] time;</span>
<span id="cb10-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb10-5">}</span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// transformed data {</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   vector[n] x = log(pop);</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// }</span></span>
<span id="cb10-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb10-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; a;</span>
<span id="cb10-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; b;</span>
<span id="cb10-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb10-13">}</span>
<span id="cb10-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb10-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu_max = a / (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - b);</span>
<span id="cb10-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma_max = sigma /sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb10-17">}</span>
<span id="cb10-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb10-19">  a ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb10-20">  b ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb10-21">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb10-22">  x ~ normal(</span>
<span id="cb10-23">    mu_max .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b, time)),</span>
<span id="cb10-24">    sigma_max .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, time))</span>
<span id="cb10-25">    );</span>
<span id="cb10-26">}</span>
<span id="cb10-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb10-28">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>] x_pred;</span>
<span id="cb10-29">  x_pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>;</span>
<span id="cb10-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) {</span>
<span id="cb10-31">    x_pred[j+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = normal_rng(</span>
<span id="cb10-32">      mu_max * (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b, j)),</span>
<span id="cb10-33">      sigma_max * sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, j))</span>
<span id="cb10-34">      );</span>
<span id="cb10-35">  }</span>
<span id="cb10-36">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">gomp_one_pop_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_df</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_one_gompertz</span>()), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sim_id"</span>)</span>
<span id="cb11-3">  </span>
<span id="cb11-4">  </span>
<span id="cb11-5">gomp_nozero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gomp_one_pop_df  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb11-7"></span>
<span id="cb11-8">gomp_ar_1_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ar_1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(gomp_nozero),</span>
<span id="cb11-9">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gomp_nozero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N,</span>
<span id="cb11-10">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> gomp_nozero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time),</span>
<span id="cb11-11">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 2 finished in 0.9 seconds.
Chain 1 finished in 1.0 seconds.
Chain 3 finished in 0.9 seconds.
Chain 4 finished in 0.9 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.9 seconds.
Total execution time: 1.2 seconds.</code></pre>
</div>
</div>
<div class="cell preview-image">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">gomp_ar_1_sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_rvars</span>(x_pred[time]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> x_pred)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim_id),</span>
<span id="cb13-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gomp_one_pop_df) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log population size"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">gomp_ar_1_sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>,</span>
<span id="cb14-2">                                       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mu_max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_max"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-3">  knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 11%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">variable</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">median</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">mad</th>
<th style="text-align: right;">q5</th>
<th style="text-align: right;">q95</th>
<th style="text-align: right;">rhat</th>
<th style="text-align: right;">ess_bulk</th>
<th style="text-align: right;">ess_tail</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">a</td>
<td style="text-align: right;">0.8755229</td>
<td style="text-align: right;">0.8715515</td>
<td style="text-align: right;">0.0653034</td>
<td style="text-align: right;">0.0640476</td>
<td style="text-align: right;">0.7744877</td>
<td style="text-align: right;">0.9901877</td>
<td style="text-align: right;">1.002237</td>
<td style="text-align: right;">1274.784</td>
<td style="text-align: right;">1329.060</td>
</tr>
<tr class="even">
<td style="text-align: left;">b</td>
<td style="text-align: right;">0.8919885</td>
<td style="text-align: right;">0.8926680</td>
<td style="text-align: right;">0.0188091</td>
<td style="text-align: right;">0.0186207</td>
<td style="text-align: right;">0.8595486</td>
<td style="text-align: right;">0.9219138</td>
<td style="text-align: right;">1.002168</td>
<td style="text-align: right;">1276.568</td>
<td style="text-align: right;">1300.837</td>
</tr>
<tr class="odd">
<td style="text-align: left;">sigma</td>
<td style="text-align: right;">0.5386121</td>
<td style="text-align: right;">0.5334915</td>
<td style="text-align: right;">0.0482727</td>
<td style="text-align: right;">0.0461511</td>
<td style="text-align: right;">0.4668362</td>
<td style="text-align: right;">0.6243722</td>
<td style="text-align: right;">1.004019</td>
<td style="text-align: right;">1438.492</td>
<td style="text-align: right;">1641.133</td>
</tr>
<tr class="even">
<td style="text-align: left;">mu_max</td>
<td style="text-align: right;">8.2620125</td>
<td style="text-align: right;">8.1184950</td>
<td style="text-align: right;">0.9562658</td>
<td style="text-align: right;">0.8650823</td>
<td style="text-align: right;">6.9728300</td>
<td style="text-align: right;">10.0094000</td>
<td style="text-align: right;">1.002092</td>
<td style="text-align: right;">1446.378</td>
<td style="text-align: right;">1782.139</td>
</tr>
<tr class="odd">
<td style="text-align: left;">sigma_max</td>
<td style="text-align: right;">1.2005219</td>
<td style="text-align: right;">1.1903850</td>
<td style="text-align: right;">0.1052177</td>
<td style="text-align: right;">0.1015655</td>
<td style="text-align: right;">1.0467550</td>
<td style="text-align: right;">1.3880110</td>
<td style="text-align: right;">1.002135</td>
<td style="text-align: right;">1844.450</td>
<td style="text-align: right;">1556.341</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="say-it-again-but-different-parameterizing-based-on-mu-and-sigma" class="level2">
<h2 class="anchored" data-anchor-id="say-it-again-but-different-parameterizing-based-on-mu-and-sigma">Say it again but different: parameterizing based on <img src="https://latex.codecogs.com/png.latex?%5Cmu"> and <img src="https://latex.codecogs.com/png.latex?%5Csigma"></h2>
<p>It might be easier to set priors directly on equilibrium population size (<img src="https://latex.codecogs.com/png.latex?%5Cmu_%5Cinfty">) and variance at equilibrium (<img src="https://latex.codecogs.com/png.latex?v_%5Cinfty">) so I experimented with parameterizing the model directly that way. It works just as well!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load the model in stan</span></span>
<span id="cb15-2">ar1_mu_sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-15-ives03-ts/ar1_mu_sigma.stan"</span>))</span>
<span id="cb15-3"></span>
<span id="cb15-4">ar1_mu_sigma</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb16-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb16-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] time;</span>
<span id="cb16-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb16-5">}</span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// transformed data {</span></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   vector[n] x = log(pop);</span></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// }</span></span>
<span id="cb16-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb16-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu_max;</span>
<span id="cb16-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; b;</span>
<span id="cb16-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma_max;</span>
<span id="cb16-13">}</span>
<span id="cb16-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb16-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// real mu_max = a / (1 - b);</span></span>
<span id="cb16-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// real sigma_max = sigma /sqrt(1 - b^2);</span></span>
<span id="cb16-17">}</span>
<span id="cb16-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb16-19">  mu_max ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb16-20">  b ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb16-21">  sigma_max ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb16-22">  x ~ normal(</span>
<span id="cb16-23">    mu_max .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b, time)),</span>
<span id="cb16-24">    sigma_max .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, time))</span>
<span id="cb16-25">    );</span>
<span id="cb16-26">}</span>
<span id="cb16-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb16-28">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>] x_pred;</span>
<span id="cb16-29">  x_pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>;</span>
<span id="cb16-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) {</span>
<span id="cb16-31">    x_pred[j+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = normal_rng(</span>
<span id="cb16-32">      mu_max * (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b, j)),</span>
<span id="cb16-33">      sigma_max * sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, j))</span>
<span id="cb16-34">      );</span>
<span id="cb16-35">  }</span>
<span id="cb16-36">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">gomp_ar1_mu_sigma_sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ar1_mu_sigma<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb17-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(gomp_nozero),</span>
<span id="cb17-3">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gomp_nozero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N,</span>
<span id="cb17-4">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> gomp_nozero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time),</span>
<span id="cb17-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 1.3 seconds.
Chain 2 finished in 1.3 seconds.
Chain 3 finished in 1.2 seconds.
Chain 4 finished in 1.2 seconds.

All 4 chains finished successfully.
Mean chain execution time: 1.2 seconds.
Total execution time: 1.5 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">gomp_ar1_mu_sigma_sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_rvars</span>(x_pred[time]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> x_pred)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sim_id),</span>
<span id="cb19-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gomp_one_pop_df)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">gomp_ar1_mu_sigma_sample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variables =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mu_max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma_max"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb20-2">  knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="table table-sm table-striped small">
<colgroup>
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 9%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 9%">
<col style="width: 9%">
<col style="width: 9%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">variable</th>
<th style="text-align: right;">mean</th>
<th style="text-align: right;">median</th>
<th style="text-align: right;">sd</th>
<th style="text-align: right;">mad</th>
<th style="text-align: right;">q5</th>
<th style="text-align: right;">q95</th>
<th style="text-align: right;">rhat</th>
<th style="text-align: right;">ess_bulk</th>
<th style="text-align: right;">ess_tail</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">mu_max</td>
<td style="text-align: right;">7.4195465</td>
<td style="text-align: right;">7.408785</td>
<td style="text-align: right;">0.3897996</td>
<td style="text-align: right;">0.3887970</td>
<td style="text-align: right;">6.8015800</td>
<td style="text-align: right;">8.0852720</td>
<td style="text-align: right;">1.003136</td>
<td style="text-align: right;">1324.390</td>
<td style="text-align: right;">1827.973</td>
</tr>
<tr class="even">
<td style="text-align: left;">b</td>
<td style="text-align: right;">0.8758691</td>
<td style="text-align: right;">0.876516</td>
<td style="text-align: right;">0.0121230</td>
<td style="text-align: right;">0.0118971</td>
<td style="text-align: right;">0.8543245</td>
<td style="text-align: right;">0.8948875</td>
<td style="text-align: right;">1.002905</td>
<td style="text-align: right;">1356.657</td>
<td style="text-align: right;">1740.710</td>
</tr>
<tr class="odd">
<td style="text-align: left;">sigma_max</td>
<td style="text-align: right;">1.1726875</td>
<td style="text-align: right;">1.167125</td>
<td style="text-align: right;">0.0945322</td>
<td style="text-align: right;">0.0938486</td>
<td style="text-align: right;">1.0264060</td>
<td style="text-align: right;">1.3328110</td>
<td style="text-align: right;">1.000760</td>
<td style="text-align: right;">2029.433</td>
<td style="text-align: right;">1859.360</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="more-than-one-model-at-once" class="level2">
<h2 class="anchored" data-anchor-id="more-than-one-model-at-once">More than one model at once</h2>
<p>Here is a no-pooling approach to modelling different clones.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">ar1_multispp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-15-ives03-ts/ar1_multispp.stan"</span>))</span>
<span id="cb21-2">ar1_multispp</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb22-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb22-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nclone;</span>
<span id="cb22-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] time;</span>
<span id="cb22-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb22-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=nclone&gt; clone_id;</span>
<span id="cb22-7">}</span>
<span id="cb22-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// transformed data {</span></span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   vector[n] x = log(pop);</span></span>
<span id="cb22-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// }</span></span>
<span id="cb22-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb22-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] log_a;</span>
<span id="cb22-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] logit_b;</span>
<span id="cb22-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] log_sigma;</span>
<span id="cb22-15">}</span>
<span id="cb22-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb22-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] b = inv_logit(logit_b);</span>
<span id="cb22-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_max = exp(log_a) ./ (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - b);</span>
<span id="cb22-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] sigma_max = exp(log_sigma) ./ sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - b^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb22-20">}</span>
<span id="cb22-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb22-22">  log_a ~ normal(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb22-23">  logit_b ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb22-24">  log_sigma ~ normal(-<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb22-25">  x ~ normal(</span>
<span id="cb22-26">    mu_max[clone_id] .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[clone_id], time)),</span>
<span id="cb22-27">    sigma_max[clone_id] .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[clone_id]^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, time))</span>
<span id="cb22-28">    );</span>
<span id="cb22-29">}</span>
<span id="cb22-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb22-31">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, nclone] x_pred;</span>
<span id="cb22-32">  x_pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,] = rep_row_vector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, nclone);</span>
<span id="cb22-33">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:nclone){</span>
<span id="cb22-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) {</span>
<span id="cb22-35">      x_pred[j+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,s] = normal_rng(</span>
<span id="cb22-36">        mu_max[s] .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[s], j)),</span>
<span id="cb22-37">        sigma_max[s] .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[s]^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, j))</span>
<span id="cb22-38">        );</span>
<span id="cb22-39">    }</span>
<span id="cb22-40">  }</span>
<span id="cb22-41">}</span></code></pre></div>
</div>
</div>
<p>A few things are different in this model compared to the previous one:</p>
<ul>
<li>I’m passing in ID numbers for each clone, and an integer number for maximum number of clones</li>
<li>the model parameters are now vectors, not scalars</li>
<li>I’ve also put the parameters on different scale. This will come in handy later when the model becomes hierarchical. Whenever I personally do this, I also change the names (see Note below).</li>
<li>The predictions are now a matrix. This is because we need two different pieces of information for each observation: what time it is, and which clone we’re talking about.</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Call me by your name
</div>
</div>
<div class="callout-body-container callout-body">
<p>This code shows off a habit I’ve developed over the last few months of working on Bayesian models. When I put a parameter on a link scale, I change the parameter name to add the name of that link scale.</p>
<p>For example, you might have a strictly positive parameter and model it like this:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb23-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb23-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; alpha;</span>
<span id="cb23-3">}</span>
<span id="cb23-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb23-5">  alpha ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb23-6">  ....</span>
<span id="cb23-7">}</span></code></pre></div>
<p>But then you might decide to model that on a log scale, either to reparameterize or to prepare for making it hierarchical later. Using link functions like the log and logit is standard in hiearchical models because it allows us to calculate a different value for every group, above and below the overall average, while respecting any constraints</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb24-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha_log;</span>
<span id="cb24-3">}</span>
<span id="cb24-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb24-5">  alpha_log ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb24-6">}</span></code></pre></div>
<p>I don’t usually try to make sure the prior is EXACTLY equivalent, but its usually pretty straightforward to get kind of close.</p>
</div>
</div>
<p>To validate this model, I’m going to generate 6 aphid clones by choosing parameters for a and b from different</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">as <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>)</span>
<span id="cb25-2">bs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb25-3">gomp_many_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clone_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rep_id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> as[clone_id],</span>
<span id="cb25-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> bs[clone_id]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowwise</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sim_one_gompertz</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> a, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> b)))</span>
<span id="cb25-8"></span>
<span id="cb25-9">gomp_nozero_many_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gomp_many_df  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb25-12"></span>
<span id="cb25-13">gomp_nozero_many_df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb25-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> rep_id)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb25-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb25-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>clone_id)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">ar1_multispp_samp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ar1_multispp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb26-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(gomp_nozero_many_df),</span>
<span id="cb26-3">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nclone =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clone_id),</span>
<span id="cb26-4">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb26-5">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N,</span>
<span id="cb26-6">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clone_id =</span> gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clone_id), </span>
<span id="cb26-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb26-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb26-9">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 2 finished in 23.8 seconds.
Chain 1 finished in 24.2 seconds.
Chain 3 finished in 24.1 seconds.
Chain 4 finished in 24.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 24.0 seconds.
Total execution time: 24.3 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">ar1_multispp_samp</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   variable  mean median   sd  mad    q5   q95 rhat ess_bulk ess_tail
 lp__       79.64  79.98 3.07 3.01 74.05 84.00 1.00     1728     2506
 log_a[1]    0.86   0.86 0.02 0.02  0.83  0.90 1.00     4228     2969
 log_a[2]    0.58   0.58 0.03 0.03  0.52  0.63 1.00     4768     2881
 log_a[3]    0.79   0.79 0.03 0.03  0.75  0.83 1.00     4648     2895
 log_a[4]    0.56   0.56 0.03 0.03  0.50  0.61 1.00     4467     2727
 log_a[5]    0.52   0.51 0.03 0.03  0.47  0.57 1.00     4103     3076
 log_a[6]    0.85   0.85 0.03 0.02  0.81  0.90 1.00     4921     2812
 logit_b[1]  1.17   1.17 0.04 0.04  1.10  1.24 1.00     4148     2972
 logit_b[2]  0.59   0.59 0.06 0.06  0.48  0.69 1.00     4790     2715
 logit_b[3]  0.59   0.59 0.05 0.05  0.51  0.67 1.00     4720     2849

 # showing 10 of 127 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">ar1_multispp_samp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb30-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(x_pred[time,clone_id]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb30-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb30-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>clone_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb30-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb30-6">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## add data</span></span>
<span id="cb30-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> rep_id), </span>
<span id="cb30-8">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gomp_nozero_many_df,</span>
<span id="cb30-9">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) </span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Time equals 🫖 - 1
</div>
</div>
<div class="callout-body-container callout-body">
<p>One of the trickiest parts of working with these models has been adding and subtracting <img src="https://latex.codecogs.com/png.latex?1">. Here’s some notes for the next time I get confused:</p>
<ul>
<li><em>take out the first value</em> We can’t use data including <code>time=0</code> in a stan model because that implies 0 variance, which just causes lots of errors with the normal likelihood. Taking this point out is no loss, because it doesn’t give us any real information – there’s no variance at all.</li>
<li><em>using position in the matrix as data for predictions</em> I generate predictions for new clonal lines, in order to generate the posterior predictive distribution and plot the figures. I store these predictions in a matrix. However, the first observation (<code>time = 0</code>) is actually stored in the first position of the matrix (i.e., row 1). I just evaluate time as all the integers between 0 and 14, which gives two weeks of experiment in this case. You can see in the <code>generated quantities</code> block that I actually use the index value in the for-loop (I called it <code>j</code>) as the value of time. This requires a weird trick: the value of <code>j</code> gets used, but then it is placed in the <code>j+1</code> position in the vector. This is because there is no “row 0” to go with the observation at <em>time</em> 0, so everything is pushed up by 1.</li>
<li><em>subtract 1 to get the correct time</em> This means that to get the right time, we need to subtract 1 from the value used in <code>generated quantities</code>. When I use <code>tidybayes</code> to extract the predictive distribution, I use <code>gather_rvars(x_pred[time,clone_id])</code> to specify that I want to call the first dimension of the matrix “time”, and the second “clone_id”. But then when I plot these data, I need to subtract 1 from the row position of a prediction to get the actual time value. This is because time = 0 is in row 1, time = 1 is in row 2, etc. Doing this gives a figure where model predictions match</li>
</ul>
</div>
</div>
<section id="hierarchical-model" class="level3">
<h3 class="anchored" data-anchor-id="hierarchical-model">Hierarchical model</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">ar1_multilevel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-15-ives03-ts/ar1_multilevel.stan"</span>))</span>
<span id="cb31-2">ar1_multilevel</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// modified from previous models with help from ChatGPT!</span></span>
<span id="cb32-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb32-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb32-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nclone;</span>
<span id="cb32-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] time;</span>
<span id="cb32-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb32-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=nclone&gt; clone_id;</span>
<span id="cb32-8">}</span>
<span id="cb32-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span>{</span>
<span id="cb32-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] twotime = <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> * time;</span>
<span id="cb32-11">}</span>
<span id="cb32-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb32-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_log_a;</span>
<span id="cb32-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_logit_b;</span>
<span id="cb32-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_log_sigma;</span>
<span id="cb32-16"></span>
<span id="cb32-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">cholesky_factor_corr</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] L_corr;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Cholesky factorization of the correlation matrix</span></span>
<span id="cb32-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt;[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] sigma_params;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Standard deviations for log_a, logit_b, log_sigma</span></span>
<span id="cb32-19"></span>
<span id="cb32-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[nclone, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] z_params_raw;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconstrained parameters</span></span>
<span id="cb32-21">}</span>
<span id="cb32-22"></span>
<span id="cb32-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb32-24">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[nclone, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] z_params = z_params_raw * diag_pre_multiply(sigma_params, L_corr);</span>
<span id="cb32-25"></span>
<span id="cb32-26">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] log_a = mu_log_a + z_params[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>];</span>
<span id="cb32-27">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] logit_b = mu_logit_b + z_params[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>];</span>
<span id="cb32-28">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] log_sigma = mu_log_sigma + z_params[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>];</span>
<span id="cb32-29"></span>
<span id="cb32-30">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] b = inv_logit(logit_b);</span>
<span id="cb32-31">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_max = exp(log_a - log1m_inv_logit(b));</span>
<span id="cb32-32">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] sigma_max = exp(log_sigma) ./ sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - square(b));</span>
<span id="cb32-33">}</span>
<span id="cb32-34"></span>
<span id="cb32-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb32-36">  mu_log_a ~ normal(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>);</span>
<span id="cb32-37">  mu_logit_b ~ normal(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>);</span>
<span id="cb32-38">  mu_log_sigma ~ normal(-.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>);</span>
<span id="cb32-39"></span>
<span id="cb32-40">  L_corr ~ lkj_corr_cholesky(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>);  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Prior on the Cholesky factor for the correlation matrix</span></span>
<span id="cb32-41"></span>
<span id="cb32-42">  sigma_params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>);</span>
<span id="cb32-43">  sigma_params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>);</span>
<span id="cb32-44">  sigma_params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] ~ exponential(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>);</span>
<span id="cb32-45"></span>
<span id="cb32-46">  to_vector(z_params_raw) ~ std_normal();</span>
<span id="cb32-47"></span>
<span id="cb32-48">  x ~ normal(</span>
<span id="cb32-49">    mu_max[clone_id] .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[clone_id], time)),</span>
<span id="cb32-50">    sigma_max[clone_id] .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[clone_id], twotime))</span>
<span id="cb32-51">  );</span>
<span id="cb32-52">}</span>
<span id="cb32-53"></span>
<span id="cb32-54"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb32-55">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, nclone] x_pred;</span>
<span id="cb32-56">  x_pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,] = rep_row_vector(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, nclone);</span>
<span id="cb32-57">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:nclone){</span>
<span id="cb32-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) {</span>
<span id="cb32-59">      x_pred[j+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,s] = normal_rng(</span>
<span id="cb32-60">        mu_max[s] .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[s], j)),</span>
<span id="cb32-61">        sigma_max[s] .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[s]^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, j))</span>
<span id="cb32-62">      );</span>
<span id="cb32-63">    }</span>
<span id="cb32-64">  }</span>
<span id="cb32-65">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">ar1_multilevel_samp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ar1_multilevel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb33-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(gomp_nozero_many_df),</span>
<span id="cb33-3">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nclone =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clone_id),</span>
<span id="cb33-4">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb33-5">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N,</span>
<span id="cb33-6">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clone_id =</span> gomp_nozero_many_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clone_id), </span>
<span id="cb33-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb33-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span></span>
<span id="cb33-9">)</span>
<span id="cb33-10"></span>
<span id="cb33-11">ar1_multilevel_samp</span></code></pre></div>
</div>
<p>We can fit to previous simulations no problem, but we can also simulate data directly from the model. Because this has gotten kind of big, I’m going to make a Stan program just for simulating data</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">ar1_multilevel_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-15-ives03-ts/ar1_multilevel_prior.stan"</span>))</span>
<span id="cb34-2">ar1_multilevel_prior</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// modified from previous models with help from ChatGPT!</span></span>
<span id="cb35-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb35-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nclone;</span>
<span id="cb35-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nrep;</span>
<span id="cb35-5">}</span>
<span id="cb35-6"></span>
<span id="cb35-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb35-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_log_a;</span>
<span id="cb35-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_logit_b;</span>
<span id="cb35-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_log_sigma;</span>
<span id="cb35-11"></span>
<span id="cb35-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">cholesky_factor_corr</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] L_corr;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Cholesky factorization of the correlation matrix</span></span>
<span id="cb35-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt;[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] sigma_params;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Standard deviations for log_a, logit_b, log_sigma</span></span>
<span id="cb35-14"></span>
<span id="cb35-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[nclone, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] z_params_raw;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unconstrained parameters</span></span>
<span id="cb35-16">}</span>
<span id="cb35-17"></span>
<span id="cb35-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb35-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[nclone, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] z_params = z_params_raw * diag_pre_multiply(sigma_params, L_corr);</span>
<span id="cb35-20"></span>
<span id="cb35-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] log_a = mu_log_a + z_params[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>];</span>
<span id="cb35-22">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] logit_b = mu_logit_b + z_params[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>];</span>
<span id="cb35-23">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] log_sigma = mu_log_sigma + z_params[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>];</span>
<span id="cb35-24"></span>
<span id="cb35-25">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] b = inv_logit(logit_b);</span>
<span id="cb35-26">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] mu_max = exp(log_a - log1m_inv_logit(b));</span>
<span id="cb35-27">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nclone] sigma_max = exp(log_sigma) ./ sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - square(b));</span>
<span id="cb35-28">}</span>
<span id="cb35-29"></span>
<span id="cb35-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb35-31">  mu_log_a ~ normal(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>);</span>
<span id="cb35-32">  mu_logit_b ~ normal(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>);</span>
<span id="cb35-33">  mu_log_sigma ~ normal(-.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>);</span>
<span id="cb35-34"></span>
<span id="cb35-35">  L_corr ~ lkj_corr_cholesky(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>);  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Prior on the Cholesky factor for the correlation matrix</span></span>
<span id="cb35-36"></span>
<span id="cb35-37">  sigma_params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>);</span>
<span id="cb35-38">  sigma_params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>);</span>
<span id="cb35-39">  sigma_params[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] ~ exponential(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>);</span>
<span id="cb35-40"></span>
<span id="cb35-41">  to_vector(z_params_raw) ~ std_normal();</span>
<span id="cb35-42">}</span>
<span id="cb35-43"></span>
<span id="cb35-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb35-45">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nclone, nrep, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x_pred;</span>
<span id="cb35-46">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:nclone){</span>
<span id="cb35-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (r <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:nrep){</span>
<span id="cb35-48">      x_pred[s, r, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>;</span>
<span id="cb35-49">    }</span>
<span id="cb35-50">  }</span>
<span id="cb35-51">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:nclone){</span>
<span id="cb35-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (r <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:nrep){</span>
<span id="cb35-53">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) {</span>
<span id="cb35-54">        x_pred[s, r, j+<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = normal_rng(</span>
<span id="cb35-55">          mu_max[s] .* (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[s], j)),</span>
<span id="cb35-56">          sigma_max[s] .* sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - pow(b[s]^<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, j))</span>
<span id="cb35-57">          );</span>
<span id="cb35-58">      }</span>
<span id="cb35-59">    }</span>
<span id="cb35-60">  }</span>
<span id="cb35-61">}</span></code></pre></div>
</div>
</div>
<p>This model code lacks the likelihood, but uses the same configuration as the previous non-centered model. It also has a bit more going on the Generated Quantities block. Here, we are simulating multiple replicates using each clone, which simulates the actual experiment.</p>
<p>We can sample from this prior distribution and visualize it to see what it says. This is really the only way to get a good idea of what priors really mean in a nonlinear model like this one!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">multilevel_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ar1_multilevel_prior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb36-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nclone =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrep =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), </span>
<span id="cb36-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb36-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 1 chain...

Chain 1 finished in 1.5 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">prior_pred_multilevel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> multilevel_prior <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb38-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_draws</span>(x_pred[clone_id, rep, time], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndraws =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb38-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb38-4"></span>
<span id="cb38-5">prior_pred_multilevel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb38-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> rep)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb38-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb38-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>clone_id)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Finally we can put this model through a very similar process of fitting and plotting as previous. Here I’m doing data prep, sampling and plotting all in one plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">prior_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> prior_pred_multilevel <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb39-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb39-3"></span>
<span id="cb39-4">ar1_multilevel_samp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ar1_multilevel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb39-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(prior_df),</span>
<span id="cb39-6">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nclone =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(prior_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clone_id),</span>
<span id="cb39-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> prior_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb39-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> prior_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.value,</span>
<span id="cb39-9">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clone_id =</span> prior_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clone_id), </span>
<span id="cb39-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb39-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb39-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 2 finished in 466.2 seconds.
Chain 3 finished in 472.9 seconds.
Chain 4 finished in 473.9 seconds.
Chain 1 finished in 475.6 seconds.

All 4 chains finished successfully.
Mean chain execution time: 472.2 seconds.
Total execution time: 475.6 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ar1_multilevel_samp</span></span>
<span id="cb41-2"></span>
<span id="cb41-3">ar1_multilevel_samp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb41-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(x_pred[time,clone_id]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb41-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb41-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>clone_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb41-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb41-8">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## add data</span></span>
<span id="cb41-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> rep), </span>
<span id="cb41-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> prior_pred_multilevel,</span>
<span id="cb41-11">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorange"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb41-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Population size (log)"</span>, </span>
<span id="cb41-13">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Time"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-15-ives03-ts/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Note that this did not work perfectly, even though we are fitting to the prior predictive distribution. There are divergent iterations!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1">ar1_multilevel_samp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diagnostic_summary</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$num_divergent
[1] 2 2 6 1

$num_max_treedepth
[1] 0 0 0 0

$ebfmi
[1] 0.8415368 1.0193399 0.8426104 0.9076898</code></pre>
</div>
</div>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-ives2003" class="csl-entry">
Ives, A. R., B. Dennis, K. L. Cottingham, and S. R. Carpenter. 2003. <span>“ESTIMATING COMMUNITY STABILITY AND ECOLOGICAL INTERACTIONS FROM TIME-SERIES DATA.”</span> <em>Ecological Monographs</em> 73 (2): 301–30. <a href="https://doi.org/10.1890/0012-9615(2003)073[0301:ECSAEI]2.0.CO;2">https://doi.org/10.1890/0012-9615(2003)073[0301:ECSAEI]2.0.CO;2</a>.
</div>
</div></section></div> ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <category>reproduction</category>
  <category>MAR</category>
  <guid>https://aammd.github.io/posts/2023-11-15-ives03-ts/</guid>
  <pubDate>Fri, 17 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Multilevel Arima model</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-11-14-multilevel-arima/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span></code></pre></div>
</div>
<p>We can vectorize an AR-1 Model for one species very easily. This is also the right way to work with missing data.</p>
<p>But how can we do it with multiple species? This is pretty key when working with long-format datasets, often with different species. I want it to be flexible – after all, not all species have datasets of equal length - some are only monitored in certain years.</p>
<section id="math-notation" class="level2">
<h2 class="anchored" data-anchor-id="math-notation">Math notation</h2>
</section>
<section id="a-stan-model" class="level2">
<h2 class="anchored" data-anchor-id="a-stan-model">A Stan model</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb2-2">single_spp_ar1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb2-3">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-14-multilevel-arima/single_spp_ar1.stan"</span>),</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pedantic =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-5">single_spp_ar1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb3-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] pop;</span>
<span id="cb3-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; fit;</span>
<span id="cb3-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// array[n] int&lt;lower=1&gt; y_id;</span></span>
<span id="cb3-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for predictions</span></span>
<span id="cb3-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nyear;</span>
<span id="cb3-8">}</span>
<span id="cb3-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span> {</span>
<span id="cb3-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] log_pop = log(pop);</span>
<span id="cb3-11">}</span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb3-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_b0;</span>
<span id="cb3-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_rho;</span>
<span id="cb3-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb3-16">}</span>
<span id="cb3-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb3-18">  log_b0 ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>);</span>
<span id="cb3-19">  log_rho ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>);</span>
<span id="cb3-20">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb3-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// likelihood</span></span>
<span id="cb3-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (fit == <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb3-23">    log_pop[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:n] ~ normal(</span>
<span id="cb3-24">      exp(log_b0) + exp(log_rho) * log_pop[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:(n<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)],</span>
<span id="cb3-25">      sigma);</span>
<span id="cb3-26">  }</span>
<span id="cb3-27">}</span>
<span id="cb3-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb3-29">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nyear] pred_pop_avg;</span>
<span id="cb3-30">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nyear] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> pred_pop_obs;</span>
<span id="cb3-31"></span>
<span id="cb3-32">  pred_pop_avg[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.2</span>;</span>
<span id="cb3-33"></span>
<span id="cb3-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:nyear) {</span>
<span id="cb3-35">    pred_pop_avg[j] = exp(log_b0) + exp(log_rho) * pred_pop_avg[j<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>];</span>
<span id="cb3-36"></span>
<span id="cb3-37">  }</span>
<span id="cb3-38"></span>
<span id="cb3-39">  pred_pop_obs = normal_rng(pred_pop_avg, sigma);</span>
<span id="cb3-40"></span>
<span id="cb3-41">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">sample_single_spp_ar1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> single_spp_ar1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nyear =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, </span>
<span id="cb4-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb4-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>), </span>
<span id="cb4-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.1 seconds.
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 2 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 0.1 seconds.
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 3 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 3 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 3 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 3 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 3 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 3 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 3 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 3 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 3 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 3 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 3 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 3 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 3 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 3 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 0.1 seconds.
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 4 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 4 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 4 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 4 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 4 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 4 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 4 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 4 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 4 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 4 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 4 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 4 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 4 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 4 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 0.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 0.8 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">some_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sample_single_spp_ar1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-2">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(pred_pop_avg[i], pred_pop_obs[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndraws =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb6-3"></span>
<span id="cb6-4">some_draws <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pred_pop_avg)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pred_pop_obs))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.draw, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-14-multilevel-arima/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This is the prior predictive distribution of an AR-1 model, for a single species model. Each panel in the discussion refers to a single posterior sample for all parameters</p>
</section>
<section id="multi-species-vectorization" class="level2">
<h2 class="anchored" data-anchor-id="multi-species-vectorization">multi-species vectorization</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb7-2">multiple_spp_ar1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb7-3">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb7-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-14-multilevel-arima/multiple_spp_ar1.stan"</span>),</span>
<span id="cb7-5">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pedantic =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb7-6">multiple_spp_ar1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb8-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb8-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> S;</span>
<span id="cb8-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] pop;</span>
<span id="cb8-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=S&gt; Sp;</span>
<span id="cb8-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; fit;</span>
<span id="cb8-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// for predictions</span></span>
<span id="cb8-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nyear;</span>
<span id="cb8-9">}</span>
<span id="cb8-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span> {</span>
<span id="cb8-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] log_pop = log(pop);</span>
<span id="cb8-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n - S] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> time;</span>
<span id="cb8-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[n - S] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> time_m1;</span>
<span id="cb8-14">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:n) {</span>
<span id="cb8-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (Sp[i] == Sp[i<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]) {</span>
<span id="cb8-16">      time[i - Sp[i]] = i;</span>
<span id="cb8-17">      time_m1[i - Sp[i]] = i - <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>;</span>
<span id="cb8-18">    }</span>
<span id="cb8-19">  }</span>
<span id="cb8-20">}</span>
<span id="cb8-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb8-22">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[S] log_b0;</span>
<span id="cb8-23">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[S] log_rho;</span>
<span id="cb8-24">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb8-25">}</span>
<span id="cb8-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb8-27">  log_b0 ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>);</span>
<span id="cb8-28">  log_rho ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>);</span>
<span id="cb8-29">  sigma ~ cauchy(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb8-30"></span>
<span id="cb8-31">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (fit == <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb8-32">    log_pop[time] ~ normal(</span>
<span id="cb8-33">      exp(log_b0[Sp[time]])</span>
<span id="cb8-34">      + exp(log_rho[Sp[time]]) .* log_pop[time_m1],</span>
<span id="cb8-35">      sigma);</span>
<span id="cb8-36">  }</span>
<span id="cb8-37">}</span>
<span id="cb8-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb8-39">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[S] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nyear] pred_pop_avg;</span>
<span id="cb8-40">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[S,nyear] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> pred_pop_obs;</span>
<span id="cb8-41"></span>
<span id="cb8-42">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:S){</span>
<span id="cb8-43">    pred_pop_avg[s][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.2</span>;</span>
<span id="cb8-44">  }</span>
<span id="cb8-45"></span>
<span id="cb8-46">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:S){</span>
<span id="cb8-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:nyear){</span>
<span id="cb8-48">      pred_pop_avg[s][j] = exp(log_b0[s])</span>
<span id="cb8-49">       + exp(log_rho[s]) .* pred_pop_avg[s][j<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>];</span>
<span id="cb8-50">    }</span>
<span id="cb8-51">  }</span>
<span id="cb8-52"></span>
<span id="cb8-53">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (s <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:S){</span>
<span id="cb8-54">    pred_pop_obs[s,] = normal_rng(pred_pop_avg[s], sigma);</span>
<span id="cb8-55">  }</span>
<span id="cb8-56">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">sample_multiple_spp_ar1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> multiple_spp_ar1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb9-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>,</span>
<span id="cb9-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">S =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb9-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>), </span>
<span id="cb9-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Sp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb9-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fit =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb9-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nyear =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb9-9">  )</span>
<span id="cb9-10">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.1 seconds.
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 2 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 0.1 seconds.
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 3 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 3 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 3 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 3 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 3 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 3 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 3 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 3 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 3 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 3 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 3 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 3 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 3 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 3 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 0.1 seconds.
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 4 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 4 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 4 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 4 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 4 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 4 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 4 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 4 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 4 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 4 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 4 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 4 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 4 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 4 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 0.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 0.5 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">some_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sample_multiple_spp_ar1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-2">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread_draws</span>(pred_pop_avg[sp, year], pred_pop_obs[sp, year], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndraws =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb11-3"></span>
<span id="cb11-4">some_draws <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pred_pop_avg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> sp)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pred_pop_obs))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.draw, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-14-multilevel-arima/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2023-11-14-multilevel-arima/</guid>
  <pubDate>Tue, 14 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>causal DAGS and full-luxury shade trees</title>
  <dc:creator>Andrew MacDonald, Bella Richmond</dc:creator>
  <link>https://aammd.github.io/posts/2023-11-08-tree-cooling/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggdag)</span></code></pre></div>
</div>
<section id="the-dag" class="level2">
<h2 class="anchored" data-anchor-id="the-dag">The DAG</h2>
<div class="cell preview-image">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"> dagified <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dagify</span>(</span>
<span id="cb2-2">    cooling <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> tree_size,</span>
<span id="cb2-3">    cooling <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> tree_diversity,</span>
<span id="cb2-4">    cooling <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> tree_density,</span>
<span id="cb2-5">    tree_size <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> soil <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> age,</span>
<span id="cb2-6">    tree_diversity <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> soil <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> age,</span>
<span id="cb2-7">    tree_density <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> past_land_use,</span>
<span id="cb2-8">    soil <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> past_land_use,</span>
<span id="cb2-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb2-10">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cooling"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cooling</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> Benefit"</span>,</span>
<span id="cb2-11">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tree_size"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tree</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> Size"</span>,</span>
<span id="cb2-12">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tree_diversity"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tree</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> Diversity"</span>,</span>
<span id="cb2-13">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tree_density"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tree</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> Density"</span>,</span>
<span id="cb2-14">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"soil"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Soil"</span>,</span>
<span id="cb2-15">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age"</span>, </span>
<span id="cb2-16">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"past_land_use"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Past Land</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> Use"</span></span>
<span id="cb2-17">    ),</span>
<span id="cb2-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">exposure =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'past_land_use'</span>,</span>
<span id="cb2-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outcome =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cooling'</span>,</span>
<span id="cb2-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cooling =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree_density =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree_diversity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">soil =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">past_land_use =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb2-21">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cooling =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree_density =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tree_diversity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">soil =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">past_land_use =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_dagitty</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">status =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cooling"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'outcome'</span>,</span>
<span id="cb2-24">                              name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"past_land_use"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'exposure'</span>,</span>
<span id="cb2-25">                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.default =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NA'</span>))</span>
<span id="cb2-26"></span>
<span id="cb2-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(dagified, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> xend, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> yend)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_dag</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_dag_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> status)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_dag_label_repel</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> label, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> status),</span>
<span id="cb2-31">                         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fontface =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_dag_edges</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-33">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'darkseagreen'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grey'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lightskyblue'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-34">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'darkseagreen'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grey'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lightskyblue'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-08-tree-cooling/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="data-simulations" class="level2">
<h2 class="anchored" data-anchor-id="data-simulations">data simulations</h2>
</section>
<section id="full-luxury" class="level2">
<h2 class="anchored" data-anchor-id="full-luxury">Full luxury</h2>
</section>
<section id="posterior-inference" class="level2">
<h2 class="anchored" data-anchor-id="posterior-inference">Posterior inference</h2>


</section>

 ]]></description>
  <category>QCBS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2023-11-08-tree-cooling/</guid>
  <pubDate>Wed, 08 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Modelling discrete growth</title>
  <dc:creator>Andrew MacDonald, Kelly Forester</dc:creator>
  <link>https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span></code></pre></div>
</div>
<section id="growing-things-get-bigger" class="level2">
<h2 class="anchored" data-anchor-id="growing-things-get-bigger">growing things get bigger</h2>
<p>Animals get bigger over time, and young change in size faster than more mature individuals. The classic Von Bertanaffy growth equation has animals growing from a starting size to a final asymptotic size:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0AL_t%20=%20L_0e%5E%7B-rt%7D%20+%20L_%7Bmax%7D(1%20-%20e%5E%7B-rt%7D)%0A"></p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?L_0"> is the starting size</li>
<li><img src="https://latex.codecogs.com/png.latex?L_%7Bmax%7D"> is the final size</li>
<li><img src="https://latex.codecogs.com/png.latex?r"> is a growth rate</li>
</ul>
<p>This equation yields a simple result:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">L0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span></span>
<span id="cb2-2">Lmax <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span></span>
<span id="cb2-3">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(L0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Lmax<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This is the equation in continuous time</p>
<p>However we often measure animals at discreet moments in time, having as a reference their last measurement. We can use a discrete version of this equation in these cases:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">vb_disc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(L_tm1, r, time, Lmax) {</span>
<span id="cb3-2">  L_tm1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Lmax<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time))</span>
<span id="cb3-3">}</span>
<span id="cb3-4"></span>
<span id="cb3-5">timevec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>)</span>
<span id="cb3-6">size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(timevec)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb3-7">size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (t <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(timevec)){</span>
<span id="cb3-10">  size[t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vb_disc</span>(size[t],</span>
<span id="cb3-11">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> r,</span>
<span id="cb3-12">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> timevec[t],</span>
<span id="cb3-13">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Lmax =</span> Lmax)</span>
<span id="cb3-14">}</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(L0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Lmax<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x)),</span>
<span id="cb3-17">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb3-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,timevec)), size)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This works even if the points we measure at are not regular:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">timevec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb4-2">size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(timevec)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb4-3">size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (t <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(timevec)){</span>
<span id="cb4-6">  size[t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vb_disc</span>(size[t],</span>
<span id="cb4-7">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> r,</span>
<span id="cb4-8">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> timevec[t],</span>
<span id="cb4-9">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Lmax =</span> Lmax)</span>
<span id="cb4-10">}</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(L0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Lmax<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x)),</span>
<span id="cb4-13">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb4-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,timevec)), size)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So we can see that this is the same equation. Let’s simulate observations of a growing animal with measurement error</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">L0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span></span>
<span id="cb5-2">Lmax <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span></span>
<span id="cb5-3">r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb5-4">sigma <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb5-5"></span>
<span id="cb5-6">grow_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>),</span>
<span id="cb5-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> L0 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Lmax<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time)),</span>
<span id="cb5-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size_obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(size), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> size, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sigma))</span>
<span id="cb5-9"></span>
<span id="cb5-10">grow_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> size_obs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="translating-the-model-to-stan" class="level2">
<h2 class="anchored" data-anchor-id="translating-the-model-to-stan">Translating the model to Stan</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">vb_discrete <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb6-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb6-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-10-23-discrete-vb-brms-stan/vb_discrete_meas.stan"</span>),</span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pedantic =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb6-5"></span>
<span id="cb6-6">vb_discrete </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb7-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; n;</span>
<span id="cb7-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> age_first_meas;</span>
<span id="cb7-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>] time_diff;</span>
<span id="cb7-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] obs_size;</span>
<span id="cb7-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; n_pred;</span>
<span id="cb7-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n_pred<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>] diff_pred;</span>
<span id="cb7-8">}</span>
<span id="cb7-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb7-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; Lstart;</span>
<span id="cb7-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; Lmax;</span>
<span id="cb7-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; r;</span>
<span id="cb7-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb7-14">}</span>
<span id="cb7-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb7-16">  Lstart ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb7-17">  Lmax ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>);</span>
<span id="cb7-18">  r ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb7-19">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb7-20"></span>
<span id="cb7-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// could add measurment error to age</span></span>
<span id="cb7-22">  obs_size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] ~ normal(Lstart * exp(-r*age_first_meas) + Lmax*(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - exp(-r * age_first_meas)), sigma);</span>
<span id="cb7-23">  obs_size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:n] ~ normal(obs_size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:(n<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>)] .* exp(-r*time_diff) + Lmax*(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - exp(-r*time_diff)), sigma);</span>
<span id="cb7-24">}</span>
<span id="cb7-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb7-26">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n_pred] mu;</span>
<span id="cb7-27">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n_pred] obs;</span>
<span id="cb7-28">  mu[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = Lstart;</span>
<span id="cb7-29"></span>
<span id="cb7-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:n_pred){</span>
<span id="cb7-31">    mu[i] = mu[i<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>] .* exp(-r*diff_pred[i<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]) + Lmax*(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> - exp(-r*diff_pred[i<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">-1</span>]));</span>
<span id="cb7-32">  }</span>
<span id="cb7-33"></span>
<span id="cb7-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>( j <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n_pred){</span>
<span id="cb7-35">    obs[j] = normal_rng(mu[j], sigma);</span>
<span id="cb7-36">  }</span>
<span id="cb7-37"></span>
<span id="cb7-38">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">some_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grow_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sampled =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(time), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(sampled <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb8-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lagged time</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_diff =</span> time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(time))</span>
<span id="cb8-6"></span>
<span id="cb8-7">first <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-8">rest <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-9"></span>
<span id="cb8-10">diff_pred <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb8-11"></span>
<span id="cb8-12">vb_discrete_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> vb_discrete<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb8-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb8-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(some_obs),</span>
<span id="cb8-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time_diff =</span> rest<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time_diff,</span>
<span id="cb8-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age_first_meas =</span> first<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>time,</span>
<span id="cb8-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_size =</span> some_obs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>size_obs,</span>
<span id="cb8-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_pred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(diff_pred) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb8-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diff_pred =</span> diff_pred</span>
<span id="cb8-20">  ),</span>
<span id="cb8-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb8-22">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.1 seconds.
Chain 2 finished in 0.1 seconds.
Chain 3 finished in 0.1 seconds.
Chain 4 finished in 0.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 0.7 seconds.</code></pre>
</div>
</div>
<div class="cell preview-image">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">vb_discrete_post<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(mu[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cumsum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, diff_pred))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> size_obs), </span>
<span id="cb10-8">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> grow_data)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using the `size` aesthetic with geom_ribbon was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Unknown or uninitialised column: `linewidth`.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using the `size` aesthetic with geom_line was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Unknown or uninitialised column: `linewidth`.
Unknown or uninitialised column: `linewidth`.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">vb_discrete_post<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 23 × 10
   variable    mean  median     sd    mad      q5     q95  rhat ess_bulk
   &lt;chr&gt;      &lt;num&gt;   &lt;num&gt;  &lt;num&gt;  &lt;num&gt;   &lt;num&gt;   &lt;num&gt; &lt;num&gt;    &lt;num&gt;
 1 lp__     -21.6   -21.2   1.57   1.34   -24.6   -19.8    1.00    1697.
 2 Lstart    10.0    10.0   1.61   1.57     7.30   12.6    1.00    3028.
 3 Lmax     118.    118.    1.95   1.88   115.    122.     1.00    3063.
 4 r          0.332   0.332 0.0238 0.0226   0.295   0.372  1.00    2828.
 5 sigma      2.13    2.07  0.362  0.334    1.62    2.78   1.00    2748.
 6 mu[1]     10.0    10.0   1.61   1.57     7.30   12.6    1.00    3028.
 7 mu[2]     62.5    62.5   2.16   2.02    58.9    66.0    1.00    3801.
 8 mu[3]     89.4    89.5   2.18   2.05    85.8    92.9    1.00    4074.
 9 mu[4]    103.    103.    1.78   1.67   100.    106.     1.00    5036.
10 mu[5]    110.    110.    1.56   1.51   108.    113.     1.00    4967.
# ℹ 13 more rows
# ℹ 1 more variable: ess_tail &lt;num&gt;</code></pre>
</div>
</div>
</section>
<section id="can-it-be-written-in-brms" class="level2">
<h2 class="anchored" data-anchor-id="can-it-be-written-in-brms">can it be written in BRMS?</h2>
<p>I want to ask, what happens if we fit a similar model in brms? I’m using a lagged column of size.</p>
<p>This feels like a different model, but at least in this simple example, the posterior is close to the real value.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## add a lagged growth measurement</span></span>
<span id="cb17-2">lagged_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> some_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sizelast =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(size_obs)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drop first row</span></span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb17-6"></span>
<span id="cb17-7">vb_formula <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(size_obs <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> sizelast <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(logR) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_diff) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-8">                   sizeMax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(logR) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_diff)),</span>
<span id="cb17-9">                 logR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb17-10">                 sizeMax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nl =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb17-11"></span>
<span id="cb17-12"></span>
<span id="cb17-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_prior</span>(vb_formula, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> lagged_obs)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                prior class      coef group resp dpar   nlpar lb ub
 student_t(3, 0, 4.3) sigma                                    0   
               (flat)     b                              logR      
               (flat)     b Intercept                    logR      
               (flat)     b                           sizeMax      
               (flat)     b Intercept                 sizeMax      
       source
      default
      default
 (vectorized)
      default
 (vectorized)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">vb_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nlpar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sizeMax"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>),</span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nlpar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logR"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>),</span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exponential</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>)</span>
<span id="cb19-5">)</span>
<span id="cb19-6"></span>
<span id="cb19-7"></span>
<span id="cb19-8">vb_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(vb_formula, </span>
<span id="cb19-9">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> lagged_obs,</span>
<span id="cb19-10">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> vb_prior,</span>
<span id="cb19-11">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-10-23-discrete-vb-brms-stan/vb_brms.rds"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(vb_post)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: size_obs ~ sizelast * exp(-exp(logR) * time_diff) + sizeMax * (1 - exp(-exp(logR) * time_diff)) 
         logR ~ 1
         sizeMax ~ 1
   Data: lagged_obs (Number of observations: 28) 
  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup draws = 4000

Population-Level Effects: 
                  Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
logR_Intercept       -1.12      0.13    -1.41    -0.87 1.00     2561     2247
sizeMax_Intercept   119.29      3.19   113.38   126.18 1.00     2492     1794

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     3.05      0.40     2.40     3.94 1.00     2809     2233

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">rv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_logR_Intercept"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>, </span>
<span id="cb22-2">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_sizeMax_Intercept"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sizeMax"</span>)</span>
<span id="cb22-3"></span>
<span id="cb22-4"></span>
<span id="cb22-5">vb_post <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(b_logR_Intercept, b_sizeMax_Intercept) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(.variable <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b_logR_Intercept"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(.value), .value),</span>
<span id="cb22-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parname =</span> rv[.variable]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> parname, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_pointinterval</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>parname, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> parname, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value), </span>
<span id="cb22-12">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb22-13">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb22-14">               <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>parname, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>value,</span>
<span id="cb22-15">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>      , r,</span>
<span id="cb22-16">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sizeMax"</span>, Lmax</span>
<span id="cb22-17">             ), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Hm! interestingly, it seems to work just fine.</p>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2023-10-23-discrete-vb-brms-stan/</guid>
  <pubDate>Tue, 07 Nov 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Power laws on log-linear plots</title>
  <dc:creator>Andrew MacDonald, Amélie Morin</dc:creator>
  <link>https://aammd.github.io/posts/2023-11-03-power-law/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span></code></pre></div>
</div>
<section id="the-backgroung" class="level2">
<h2 class="anchored" data-anchor-id="the-backgroung">The backgroung</h2>
<p>Power laws are very common in ecology. One reason for this is surely how easy it is to fit and plot. There are also many reasons based on theory, for example famous work on metabolic scaling.</p>
</section>
<section id="the-math" class="level2">
<h2 class="anchored" data-anchor-id="the-math">The Math</h2>
<p>“Power law” is just a fancy name for a polynomial with an exponent between 0 and 1. This gives a declerating curve (figure below)</p>
<p>Power laws look like this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay%20=%20ax%5Eb%0A"></p>
<p>It becomes linear if you log both sides, like this:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cln%7By%7D%20=%20%5Cln%7Ba%7D%20+%20b%5Cln%7Bx%7D%0A"></p>
<p>This is a format we can fit with our favourite linear OLS function, <code>lm()</code>.</p>
</section>
<section id="simulate-data" class="level2">
<h2 class="anchored" data-anchor-id="simulate-data">Simulate data</h2>
<p>We’re simulating data here to roughly imitate a dataset on bumblebees collected by <a href="https://www.fournierlab.com/eacutequipe.html">Amélie Morin</a> from Université Laval.</p>
<p>This is a very simplified look at only one part of the dataset. Here we are asking if there are more bumblebees in longer strips of habitat. The independent variable is the length of the strip, in meters. The response is the observed counts of bumblebees.</p>
<p>We begin by picking parameter values and a range of simulated X variables</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span></span>
<span id="cb2-2">b <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># longeur &lt;- runif(104, min = 2, max = 25)</span></span>
<span id="cb2-4">longeur <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">104</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-5"></span>
<span id="cb2-6">moy_bourdons <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> longeur <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>b</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(longeur, moy_bourdons)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-03-power-law/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We simulate observations of counts using a Poisson distribution, so that the data resemble biological reality.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">obs_bourdons <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">104</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> moy_bourdons)</span>
<span id="cb3-2"></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(longeur, obs_bourdons) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> longeur, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_bourdons)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_count</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-03-power-law/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Here we are using a model which is similar to, but not identical to, the model we used to generate the data. That is to emphasize that while this technique (i.e.&nbsp;a linear model on log-transformed data) is not perfect, it still gets very close and is a great solution in many cases.</p>
</div>
</div>
</section>
<section id="fit-a-power-law" class="level2">
<h2 class="anchored" data-anchor-id="fit-a-power-law">Fit a power law</h2>
<p>We fit the model by log-transforming and then fitting a straightforward linear model.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">bourdon_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(longeur, obs_bourdons)</span>
<span id="cb4-2"></span>
<span id="cb4-3">bourdon_data_log <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> bourdon_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_longeur =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(longeur),</span>
<span id="cb4-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_obs_bourdons =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(obs_bourdons))</span>
<span id="cb4-6"></span>
<span id="cb4-7"></span>
<span id="cb4-8">lm_pwr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(log_obs_bourdons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> log_longeur, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> bourdon_data_log)</span></code></pre></div>
</div>
</section>
<section id="predict" class="level2">
<h2 class="anchored" data-anchor-id="predict">Predict</h2>
<p>To draw a line and confidence intervals we make predictions. However these are NOT predictions on the original data, but on a nice even sequence of values on the x-axis.<br>
A few points to note here:</p>
<ul>
<li>I take a range of x-values and then log-transform them, then transform them back. This imitates the same process that we went throught with the actual data</li>
<li>I’m using <code>broom::augment</code> from the <code>broom</code> package. It is awesome! It takes a model and a dataset, and adds the prediction to the dataset as a new set of columns. See <code>?broom::augment</code> for all the details.</li>
<li>Once we have the predictions, we need to back-transform everything by exponentiating with <code>exp()</code>: the average response (<code>.fitted</code>), the lower and upper confidence intervals (<code>.lower</code> and <code>.upper</code>) and of course the x-axis values. Here i use a little function from the tidyverse to apply <code>exp()</code> to all columns at once. Learn more by typing <code>vignette("colwise")</code>.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">new_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_longeur =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>))</span>
<span id="cb5-2"></span>
<span id="cb5-3">predictions_pwr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> broom<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">augment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lm_pwr,</span>
<span id="cb5-4">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> new_data,</span>
<span id="cb5-5">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"confidence"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>(), exp))</span></code></pre></div>
</div>
</section>
<section id="plot" class="level2">
<h2 class="anchored" data-anchor-id="plot">Plot</h2>
<p>Finally we plot the transformed predictions using ggplot2:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">predictions_pwr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> log_longeur, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .fitted)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_ribbon</span>(</span>
<span id="cb6-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> log_longeur,</span>
<span id="cb6-5">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> .lower,</span>
<span id="cb6-6">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> .upper), </span>
<span id="cb6-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgreen"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_count</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> longeur, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_bourdons), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> bourdon_data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb6-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-03-power-law/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2023-11-03-power-law/</guid>
  <pubDate>Fri, 03 Nov 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Stan-dalone generated quantites</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-11-01-standalone-gq/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span></code></pre></div>
</div>
<section id="breaking-apart-stan-programs" class="level2">
<h2 class="anchored" data-anchor-id="breaking-apart-stan-programs">Breaking apart Stan programs</h2>
<p>Sometimes we don’t want the output of a Stan model to become enormous. However, Stan models can be very convenient for calculating <code>generated quantities</code>. Of course this can be done in R, but sometimes it is just easier to have all the outputs presented in the same way.</p>
<p>See a description of this in the <a href="https://mc-stan.org/docs/cmdstan-guide/standalone-generate-quantities.html">User’s guide</a> and in the <a href="https://mc-stan.org/cmdstanr/reference/model-method-generate-quantities.html">CmdStanR help file</a></p>
</section>
<section id="example-marginal-effects-in-multiple-regression" class="level2">
<h2 class="anchored" data-anchor-id="example-marginal-effects-in-multiple-regression">example: Marginal effects in multiple regression</h2>
<p>Suppose there is a plant which, when growing in N-rich soil, is able to generate chemical defenses to prevent damage by a herbivorous insect. On poor soil the herbivore eats much more of the plant</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4812</span>)</span>
<span id="cb2-2">soil_quality <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb2-3">insect_biomass <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># each gram of insect biomass eats 1.2 grams of plant biomass</span></span>
<span id="cb2-5">insect_eff_per_g <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb2-6"></span>
<span id="cb2-7">soil_quality_eff_per_unit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">soil_quality_on_herb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-10"></span>
<span id="cb2-11">herb_avg_soil_avg_density <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">mu_herbivory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> herb_avg_soil_avg_density <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-14">  soil_quality_eff_per_unit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> soil_quality <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-15">  (insect_eff_per_g <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> soil_quality_on_herb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>soil_quality) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> insect_biomass </span>
<span id="cb2-16"></span>
<span id="cb2-17">sigma_herb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-18">obs_herbivory <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, mu_herbivory, sigma_herb)</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(soil_quality, insect_biomass, obs_herbivory) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> soil_quality, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_herbivory, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> insect_biomass)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-11-01-standalone-gq/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Here is a Stan program to model this interaction</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class-output: stan</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">multiple_regression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb3-4">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb3-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-01-standalone-gq/multiple_regression.stan"</span></span>
<span id="cb3-6">    ))</span>
<span id="cb3-7"></span>
<span id="cb3-8">multiple_regression</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>data{
  int&lt;lower=0&gt; n;
  vector[n] soil;
  vector[n] insects;
  vector[n] herbivory;
}
parameters{
  real avg_herb;
  vector[3] beta;
  real&lt;lower=0&gt; sigma;
}
model{
  sigma ~ exponential(.25);
  beta ~ std_normal();
  avg_herb ~ normal(30, 5);
  herbivory ~ normal(avg_herb + beta[1]* soil + beta[2]*insects + beta[3]*(soil .* insects), sigma);
}</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">multiple_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> multiple_regression<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(soil_quality), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">soil =</span> soil_quality, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">insects =</span> insect_biomass, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">herbivory =</span> obs_herbivory), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 chains, at most 2 in parallel...

Chain 1 finished in 0.3 seconds.
Chain 2 finished in 0.2 seconds.
Chain 3 finished in 0.2 seconds.
Chain 4 finished in 0.2 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.2 seconds.
Total execution time: 0.8 seconds.</code></pre>
</div>
</div>
<p>We can see that the posteriors are close to the true values (not the point of this post, but always good to check)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">multiple_post<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6 × 10
  variable     mean   median     sd    mad       q5      q95  rhat ess_bulk
  &lt;chr&gt;       &lt;num&gt;    &lt;num&gt;  &lt;num&gt;  &lt;num&gt;    &lt;num&gt;    &lt;num&gt; &lt;num&gt;    &lt;num&gt;
1 lp__     -416.    -415.    1.63   1.48   -419.    -414.     1.00    1904.
2 avg_herb   32.9     32.9   0.336  0.333    32.4     33.5    1.00    3855.
3 beta[1]     0.192    0.190 0.191  0.192    -0.123    0.507  1.00    4847.
4 beta[2]     1.93     1.93  0.0607 0.0589    1.83     2.03   1.00    4096.
5 beta[3]    -0.474   -0.474 0.0341 0.0345   -0.530   -0.418  1.00    4922.
6 sigma       4.80     4.79  0.238  0.235     4.43     5.20   1.00    4098.
# ℹ 1 more variable: ess_tail &lt;num&gt;</code></pre>
</div>
</div>
<p>Now suppose we want to plot this interaction. We could do so in R, no problem. We could also do that in the model above. But you might not want to! reasons include:</p>
<ul>
<li>keeping the output of any one model small(ish) so that you can actually work with it</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># class-output: stan</span></span>
<span id="cb9-2"></span>
<span id="cb9-3">multi_reg_triptych <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb9-4">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb9-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-11-01-standalone-gq/multi_reg_triptych.stan"</span></span>
<span id="cb9-6">    ))</span>
<span id="cb9-7"></span>
<span id="cb9-8">multi_reg_triptych</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>data {
  int&lt;lower=0&gt; npred;
  vector[npred] new_soil;
  vector[npred] new_insect;
}
// copied from the previous model!
parameters{
  real avg_herb;
  vector[3] beta;
  real&lt;lower=0&gt; sigma;
}
generated quantities {
  vector[npred] pred_herbivory;
  for (i in 1:npred){
    pred_herbivory[i] = normal_rng(avg_herb + beta[1]* new_soil[i] + beta[2]*new_insect[i] + beta[3]*(new_soil[i] * new_insect[i]), sigma);
  }
}</code></pre>
</div>
</div>
<p>get the prediction data ready</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">newdata <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_insect =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),</span>
<span id="cb11-2">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_soil =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>))</span>
<span id="cb11-3"></span>
<span id="cb11-4"></span>
<span id="cb11-5">multi_trip <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> multi_reg_triptych<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_quantities</span>(</span>
<span id="cb11-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fitted_params =</span> multiple_post,</span>
<span id="cb11-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_insect =</span> newdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>new_insect,</span>
<span id="cb11-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_soil =</span> newdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>new_soil,</span>
<span id="cb11-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">npred =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(newdata)</span>
<span id="cb11-11">  )</span>
<span id="cb11-12">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running standalone generated quantities after 4 MCMC chains, 1 chain at a time ...

Chain 1 finished in 0.0 seconds.
Chain 2 finished in 0.0 seconds.
Chain 3 finished in 0.0 seconds.
Chain 4 finished in 0.0 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.0 seconds.
Total execution time: 1.0 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">multi_trip <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(pred_herbivory[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(newdata) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> new_soil, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>new_insect) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Greens"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new_soil"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predicted herbivory"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-11-01-standalone-gq/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Visualizing an interaction. The effect of soil quality on herbivory varies with herbivore biomass (in a very pretend, make-believe example).</figcaption>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <category>generated quantities</category>
  <guid>https://aammd.github.io/posts/2023-11-01-standalone-gq/</guid>
  <pubDate>Wed, 01 Nov 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Transformed regression in Stan</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-08-22-transformed-regression/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span></code></pre></div>
</div>
<section id="sometimes-things-slow-down" class="level2">
<h2 class="anchored" data-anchor-id="sometimes-things-slow-down">Sometimes things slow down</h2>
<blockquote class="blockquote">
<p>There are no straight lines in ecology</p>
</blockquote>
<p>A lot of relationships in ecology are curved lines, often because there’s a constraint on the thing we are modelling as a response variable. For example, animals might get used to a specific stimulus over repeat exposures, with the result that eventually the response time drops to 0. However, response time can never be less than 0, and so the relationship is constrained from below. Relationships can be bounded above as well. Consider how the mass of an individual organism scales with increasing resources: more food means a bigger body, but eventually that relationship will flatten out.</p>
<p>In ecology, its very common to model these nonlinear relationships by applying a transformation to the response variable and modelling the resulting relationship with a gaussian linear regression. Sometimes this works out fine. Increasingly, ecologists are trying to go beyond this with models that reflect the data-generating process more explicitly. For example, an ecologist might model growth with one of the many growth equations. However, even if we develop a nonlinear model with a non-gaussian likelihood and all the features, our colleagues will still want a comparison to the now-traditional transformed lines.</p>
<p>I wanted to write some simple Stan models to fit these transformed-response models. I was curious about the specific shape of the relationship we are fitting when we use these models. I have a suspicion that these curves are often fit to data, not because the scientist wants to make this curving shape, but because it improves residual plots. Whatever the reason for their use, I find that making pictures of something really helps me to understand it. My colleagues use these models, so this post is a beginning exploration of them.</p>
</section>
<section id="two-pictures-of-two-curves" class="level2">
<h2 class="anchored" data-anchor-id="two-pictures-of-two-curves">Two pictures of two curves</h2>
<p>I love the base R function <code>curve()</code>; it might be my favourite base function! Let’s look at the curve that results from these two kinds of transformations.</p>
<p>When I say “results from”, I mean what happens if you reverse the transformation on the response variable. In the case of a log-transformation model:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Ctext%7Blog%7D(y)%20&amp;=%20a%20+%20bx%20%5C%5C%0Ay%20&amp;=%20e%5E%7Ba%20+%20bx%7D%0A%5Cend%7Balign%7D%0A"></p>
<p>And in the case of a square root model:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Csqrt%7By%7D%20&amp;=%20a%20+%20bx%20%5C%5C%0Ay%20&amp;=%20(a%20+%20bx)%5E2%0A%5Cend%7Balign%7D%0A"></p>
<p>In both cases, the effect is like having a link function on the response variable. To get the curve, you just reverse the transformation on both.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Log-transformed responses are like fitting an exponential curve</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7-2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Square root transformed models are like fitting a quadratic curve</figcaption>
</figure>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>I find this a confusing way to think of the square root curve; I prefer:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">steep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-2">minmax <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb4-3">elev <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">curve</span>(steep <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> minmax)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> elev, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>This is far easier to set priors on – useful to remember for those (rare?) times when this is a relationship you actually want to work with.</p>
</div>
</div>
</section>
<section id="writing-the-models-in-stan" class="level2">
<h2 class="anchored" data-anchor-id="writing-the-models-in-stan">Writing the models in Stan</h2>
<p>Let’s write out the model we’re fitting, using <code>g()</code> to refer to either the log or the square root:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0Ag(y)%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cmu,%20%5Csigma)%20%5C%5C%0A%5Cmu%20&amp;=%20a%20+%20bx%20%5C%5C%0Aa%20&amp;%5Csim%20%5Ctext%7BNormal%7D(...)%20%5C%5C%0Ab%20&amp;%5Csim%20%5Ctext%7BNormal%7D(...)%20%5C%5C%0A%5Csigma%20&amp;%5Csim%20%5Ctext%7BExponential%7D(...)%20%5C%5C%0A%5Cend%7Balign%7D%0A"></p>
<p>You can see from here that we’re putting the likelihood ( the top line, <img src="https://latex.codecogs.com/png.latex?%5Ctext%7BNormal%7D(%5Cmu,%20%5Csigma)"> ) through the transformation function also. This means that the “errors” or variation around the curve also get transformed. In the case of the log transformation, we are putting that normal distribution through the exponential function – in other words, we’re using a <a href="https://en.wikipedia.org/wiki/Lognormal_distribution">Lognormal distribution</a>. With the square root transformation, it seems like perhaps we’re modelling something like a <a href="https://stats.stackexchange.com/questions/93383/square-of-normal-distribution-with-specific-variance">generalized chi square</a>.</p>
<section id="square-root-transformation" class="level3">
<h3 class="anchored" data-anchor-id="square-root-transformation">Square root transformation</h3>
<p>I want to begin with a simple prior predictive simulation from the square-root model.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">sqrt_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb5-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-08-22-transformed-regression/sqrt_prior.stan"</span>)</span>
<span id="cb5-3">  )</span>
<span id="cb5-4">sqrt_prior</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb6-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb6-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb6-4">}</span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span>{</span>
<span id="cb6-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> slope;</span>
<span id="cb6-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> intercept;</span>
<span id="cb6-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb6-9">}</span>
<span id="cb6-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb6-11">  slope ~ std_normal();</span>
<span id="cb6-12">  intercept ~ std_normal();</span>
<span id="cb6-13">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb6-14">}</span>
<span id="cb6-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb6-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] yrep;</span>
<span id="cb6-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb6-18">    yrep[i] = square(normal_rng(slope * x[i] + intercept, sigma));</span>
<span id="cb6-19">  }</span>
<span id="cb6-20">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">xseq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb7-2">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, </span>
<span id="cb7-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)</span>
<span id="cb7-4"></span>
<span id="cb7-5">sqrt_prior_reps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sqrt_prior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb7-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xseq,</span>
<span id="cb7-7">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>),</span>
<span id="cb7-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.1 seconds.
Chain 2 finished in 0.1 seconds.
Chain 3 finished in 0.1 seconds.
Chain 4 finished in 0.0 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 0.8 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">sqrt_prior_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sqrt_prior_reps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-2">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_draws</span>(yrep[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndraws =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xseq[i])</span>
<span id="cb9-4">  </span>
<span id="cb9-5">sqrt_prior_plot <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.draw)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">some prior predictive simulations from a square-root transformed model.</figcaption>
</figure>
</div>
</div>
</div>
<p>To me, this illustrates the difficulty of setting useful priors on a square-root transformed model.</p>
</section>
</section>
<section id="log-transformation" class="level2">
<h2 class="anchored" data-anchor-id="log-transformation">Log transformation</h2>
<p>let’s try with log-transformed curves.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">log_trans <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb10-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-08-22-transformed-regression/log_trans.stan"</span>))</span>
<span id="cb10-3">log_trans</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb11-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb11-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb11-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] y;</span>
<span id="cb11-5">}</span>
<span id="cb11-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span>{</span>
<span id="cb11-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] ylog = log(y);</span>
<span id="cb11-8">}</span>
<span id="cb11-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span>{</span>
<span id="cb11-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> slope;</span>
<span id="cb11-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> intercept;</span>
<span id="cb11-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma;</span>
<span id="cb11-13">}</span>
<span id="cb11-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span>{</span>
<span id="cb11-15">  ylog ~ normal(intercept + slope*x, sigma);</span>
<span id="cb11-16">}</span>
<span id="cb11-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span>{</span>
<span id="cb11-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] ybar = exp(intercept + slope*x);</span>
<span id="cb11-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] yrep;</span>
<span id="cb11-20">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb11-21">    yrep[i] = exp(normal_rng(intercept + slope*x[i], sigma));</span>
<span id="cb11-22">  }</span>
<span id="cb11-23">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># make a bit of fake data</span></span>
<span id="cb12-2">xx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span></span>
<span id="cb12-3">yb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.7</span>  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>xx</span>
<span id="cb12-4">yy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xx), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> yb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xx,yy)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">log_trans_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> log_trans<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb13-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xx), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> yy),</span>
<span id="cb13-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh  =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.1 seconds.
Chain 2 finished in 0.1 seconds.
Chain 3 finished in 0.1 seconds.
Chain 4 finished in 0.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 0.6 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">log_trans_post<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(ybar[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xx =</span> xx[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">log_trans_post<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(yrep[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xx =</span> xx[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="square-root-transformed-model" class="level2">
<h2 class="anchored" data-anchor-id="square-root-transformed-model">Square root transformed model</h2>
<p>Going back to a square root model, fitting it to the same data that I just used for the log-transformed model. I’m doing it this way because the toy dataset I made and used above is much easier to reason about. I also want to see how a square-root model fits data that comes from a different data-generating process.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">sqrt_trans <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-08-22-transformed-regression/sqrt_trans.stan"</span>))</span>
<span id="cb17-2">sqrt_trans</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb18-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb18-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb18-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] y;</span>
<span id="cb18-5">}</span>
<span id="cb18-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed data</span>{</span>
<span id="cb18-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] ytrans = sqrt(y);</span>
<span id="cb18-8">}</span>
<span id="cb18-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span>{</span>
<span id="cb18-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> slope;</span>
<span id="cb18-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> intercept;</span>
<span id="cb18-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> sigma;</span>
<span id="cb18-13">}</span>
<span id="cb18-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span>{</span>
<span id="cb18-15">  ytrans ~ normal(intercept + slope*x, sigma);</span>
<span id="cb18-16">}</span>
<span id="cb18-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span>{</span>
<span id="cb18-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] ybar = square(intercept + slope*x);</span>
<span id="cb18-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] yrep;</span>
<span id="cb18-20">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb18-21">    yrep[i] = square(normal_rng(intercept + slope*x[i], sigma));</span>
<span id="cb18-22">  }</span>
<span id="cb18-23">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">sqrt_trans_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sqrt_trans<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb19-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(xx), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> yy), </span>
<span id="cb19-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.1 seconds.
Chain 2 finished in 0.1 seconds.
Chain 3 finished in 0.1 seconds.
Chain 4 finished in 0.3 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.2 seconds.
Total execution time: 0.9 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">sqrt_trans_post<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(ybar[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xx =</span> xx[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_lineribbon</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-08-22-transformed-regression/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">square-root transformed model fit to data from a log-transformed model. Just to prove you can</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">sqrt_trans_post<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 × 10
  variable    mean median    sd   mad    q5    q95  rhat ess_bulk ess_tail
  &lt;chr&gt;      &lt;num&gt;  &lt;num&gt; &lt;num&gt; &lt;num&gt; &lt;num&gt;  &lt;num&gt; &lt;num&gt;    &lt;num&gt;    &lt;num&gt;
1 slope     -0.924 -0.923 0.235 0.228 -1.31 -0.547  1.00    1617.    1727.
2 intercept 10.1   10.1   1.93  1.85   6.98 13.3    1.00    1629.    1426.
3 sigma      3.82   3.71  0.827 0.763  2.69  5.39   1.00    1409.    1677.</code></pre>
</div>
</div>
<p>Unintuitive as these parameters are, you at least can get your downwards and decelerating curve from this model!</p>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <category>QCBS</category>
  <guid>https://aammd.github.io/posts/2023-08-22-transformed-regression/</guid>
  <pubDate>Tue, 22 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Missing data in non-normal distributions</title>
  <dc:creator>Andrew MacDonald, Flavio Affinito</dc:creator>
  <link>https://aammd.github.io/posts/2023-08-24-imputation-nonnormal/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span></code></pre></div>
</div>
<section id="working-with-missingness" class="level2">
<h2 class="anchored" data-anchor-id="working-with-missingness">working with missingness</h2>
<p>I wish the topic of missingness was introduced much earlier in statistical ecology! Most ecological datasets have some examples of this. Working directly with missing data has many advantages, including letting us use ALL the information we have. There are many arguments, but that’s the one I find most compelling. In our science, each datapoint costs dearly in money and effort – the least we can do is learn the tools to use them well!</p>
</section>
<section id="roadmap" class="level2">
<h2 class="anchored" data-anchor-id="roadmap">Roadmap</h2>
<ol type="1">
<li>normal distributions with missing data</li>
<li>nonnormal distributions with missing data</li>
<li>regression with missing information in just the x</li>
<li>regression with missing data in both</li>
<li>nonlinear, nonnormal missing data in both</li>
</ol>
</section>
<section id="normal-distributions-with-missing-data" class="level2">
<h2 class="anchored" data-anchor-id="normal-distributions-with-missing-data">Normal distributions with missing data</h2>
<p>Here is code from <a href="https://qcbs.ca/fr/membre-etudiant/?student=3066">Flavio Affinito</a>, adapting the code in the <a href="https://mc-stan.org/docs/stan-users-guide/sliced-missing-data.html">Stan Guide</a> for continuous missing data:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">MissingDataImputation2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb2-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-08-24-imputation-nonnormal/MissingDataImputation2.stan"</span>))</span>
<span id="cb2-3">MissingDataImputation2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb3-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N_tot;          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total number of observations</span></span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N_miss;        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of missing values</span></span>
<span id="cb3-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N_obs;        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of observed values</span></span>
<span id="cb3-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N_obs] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=N_tot&gt; ii_obs;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Position of observed values in the column</span></span>
<span id="cb3-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span> [N_miss] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=N_tot&gt; ii_mis; <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Position of the missing values in the column</span></span>
<span id="cb3-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_obs] y_obs;            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Observed values</span></span>
<span id="cb3-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//int&lt;lower=0&gt; N_year;     // Number of years in the dataset</span></span>
<span id="cb3-9">}</span>
<span id="cb3-10"></span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb3-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> mu;              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Population mean</span></span>
<span id="cb3-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Common standard deviation</span></span>
<span id="cb3-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_miss] y_imputed;       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Imputed outcomes for missing data</span></span>
<span id="cb3-16">}</span>
<span id="cb3-17"></span>
<span id="cb3-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb3-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_tot] y;      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// create the dataset to fit the likelihood</span></span>
<span id="cb3-20">  y[ii_obs] = y_obs;        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assign observations to the positions with observations</span></span>
<span id="cb3-21">  y[ii_mis] = y_imputed;    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assign parameters (y missing) to the positions without observations</span></span>
<span id="cb3-22">}</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb3-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Priors</span></span>
<span id="cb3-26">  mu ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>);</span>
<span id="cb3-27">  sigma ~ exponential(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb3-28"></span>
<span id="cb3-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Likelihood for observed and imputated data</span></span>
<span id="cb3-30">  y ~ normal(mu, sigma);</span>
<span id="cb3-31">}</span>
<span id="cb3-32"></span>
<span id="cb3-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb3-34">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_tot] y_pred;</span>
<span id="cb3-35"></span>
<span id="cb3-36">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N_tot) {</span>
<span id="cb3-37">    y_pred[i] = normal_rng(mu, sigma);</span>
<span id="cb3-38">  }</span>
<span id="cb3-39">}</span></code></pre></div>
</div>
</div>
<p>Let’s try it out with 42 numbers, of which 6 are missing:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb4-2">xx<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb4-3">xx2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> xx</span>
<span id="cb4-4">xx2[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">replace =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(xx2)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-08-24-imputation-nonnormal/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">normal_missing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MissingDataImputation2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb5-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_tot =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_miss =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb5-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_obs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42-6</span>,</span>
<span id="cb5-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ii_obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2)),</span>
<span id="cb5-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ii_mis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2)),</span>
<span id="cb5-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_obs =</span> xx2[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2))]), </span>
<span id="cb5-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb5-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 0.4 seconds.
Chain 2 finished in 0.4 seconds.
Chain 3 finished in 0.4 seconds.
Chain 4 finished in 0.4 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.4 seconds.
Total execution time: 0.6 seconds.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">posterior_and_original <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> normal_missing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(y_imputed[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xx =</span> xx[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2))])</span>
<span id="cb7-4"></span>
<span id="cb7-5"></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb7-8">posterior_and_original <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_pointinterval</span>()</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-08-24-imputation-nonnormal/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>unsurprisingly this is the same distribution for all parameters</p>
</section>
<section id="with-a-linear-relationship" class="level2">
<h2 class="anchored" data-anchor-id="with-a-linear-relationship">with a linear relationship</h2>
<p>let’s imagine there is a clear linear relationship but we still have missing values:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">yy_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(xx <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb9-2"></span>
<span id="cb9-3">yy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, yy_bar, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xx, yy)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-08-24-imputation-nonnormal/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>with the same 6 datapoints missing</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">regression_imputation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb10-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-08-24-imputation-nonnormal/regression_imputation.stan"</span>))</span>
<span id="cb10-3">regression_imputation</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb11-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N_tot;          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total number of observations</span></span>
<span id="cb11-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N_miss;        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of missing values</span></span>
<span id="cb11-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N_obs;        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of observed values</span></span>
<span id="cb11-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N_obs] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=N_tot&gt; ii_obs;  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Position of observed values in the column</span></span>
<span id="cb11-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span> [N_miss] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=N_tot&gt; ii_mis; <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Position of the missing values in the column</span></span>
<span id="cb11-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_obs] x_obs;            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Observed values</span></span>
<span id="cb11-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_tot] y;</span>
<span id="cb11-9">}</span>
<span id="cb11-10"></span>
<span id="cb11-11"></span>
<span id="cb11-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb11-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> x_mu;              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Population mean</span></span>
<span id="cb11-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; x_sigma;     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Common standard deviation</span></span>
<span id="cb11-15">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_miss] x_imputed;       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Imputed values for missing data</span></span>
<span id="cb11-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> slope;</span>
<span id="cb11-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> intercept;</span>
<span id="cb11-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; y_sigma;</span>
<span id="cb11-19">}</span>
<span id="cb11-20"></span>
<span id="cb11-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb11-22">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_tot] x;      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// create the dataset to fit the likelihood</span></span>
<span id="cb11-23">  x[ii_obs] = x_obs;        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assign observations to the positions with observations</span></span>
<span id="cb11-24">  x[ii_mis] = x_imputed;    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// assign parameters (y missing) to the positions without observations</span></span>
<span id="cb11-25">}</span>
<span id="cb11-26"></span>
<span id="cb11-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb11-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Priors</span></span>
<span id="cb11-29">  x_mu ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>);</span>
<span id="cb11-30">  x_sigma ~ exponential(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb11-31">  intercept ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>);</span>
<span id="cb11-32">  y_sigma ~ exponential(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb11-33"></span>
<span id="cb11-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Likelihood for observed and imputated data (x)</span></span>
<span id="cb11-35">  x ~ normal(x_mu, x_sigma);</span>
<span id="cb11-36">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// LIkelihood for the response variable</span></span>
<span id="cb11-37">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// y ~ normal(intercept + slope * (x - 50), y_sigma);</span></span>
<span id="cb11-38">  y ~ normal(intercept + slope * (x - x_mu), y_sigma);</span>
<span id="cb11-39">}</span>
<span id="cb11-40"></span>
<span id="cb11-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb11-42">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N_tot] x_pred;</span>
<span id="cb11-43"></span>
<span id="cb11-44">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N_tot) {</span>
<span id="cb11-45">    x_pred[i] = normal_rng(x_mu, x_sigma);</span>
<span id="cb11-46">  }</span>
<span id="cb11-47">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">regression_missing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> regression_imputation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb12-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb12-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_tot =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb12-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_miss =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb12-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N_obs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb12-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ii_obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2)),</span>
<span id="cb12-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ii_mis =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2)),</span>
<span id="cb12-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_obs =</span> xx2[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2))],</span>
<span id="cb12-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> yy</span>
<span id="cb12-10">    ),</span>
<span id="cb12-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb12-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 0.8 seconds.
Chain 4 finished in 0.7 seconds.
Chain 2 finished in 0.8 seconds.
Chain 3 finished in 0.8 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.7 seconds.
Total execution time: 0.9 seconds.</code></pre>
</div>
</div>
<div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">posterior_and_original <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> regression_missing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(x_imputed[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xx =</span> xx[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2))],</span>
<span id="cb14-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yy =</span> yy[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2))]</span>
<span id="cb14-5">  )</span>
<span id="cb14-6"></span>
<span id="cb14-7"></span>
<span id="cb14-8">posterior_and_original <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ydist =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_pointinterval</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-12">posterior_and_original <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb14-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xdist =</span> .value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> yy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_pointinterval</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb14-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> yy), </span>
<span id="cb14-16">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>,</span>
<span id="cb14-17">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>,</span>
<span id="cb14-18">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb14-19">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xx =</span> xx[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2))],</span>
<span id="cb14-20">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yy =</span> yy[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(xx2))]</span>
<span id="cb14-21">               ))</span></code></pre></div>
<div class="cell quarto-layout-panel">
<div class="quarto-layout-row quarto-layout-valign-top">
<div class="cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-08-24-imputation-nonnormal/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">imputed values (y axis) vs the real values (x axis), and the 1:1 line for comparison. The posterior distributions are close to the truth, because the regression equation lets information flow in both directions.</figcaption>
</figure>
</div>
</div>
<div class="cell-output-display quarto-layout-cell" style="flex-basis: 50.0%;justify-content: center;">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-08-24-imputation-nonnormal/index_files/figure-html/unnamed-chunk-8-2.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">The original relationship, with posterior distributions for missing x variables.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
<p>The major takeaway from this model is that once we have created our merged parameter and data vector <code>x</code>, within the <code>transformed parameters</code> block, we can use it just like a vector made entirely of observations. The model structure causes information to “flow both ways” and automatically gives us the posterior distribution that is most consistent with our data and model. From the point of view of the model, there is no difference between a missing observation and any other unknown number, like a standard deviation or average.</p>
<p>I also enjoy that we are modelling an average for the independent <img src="https://latex.codecogs.com/png.latex?x"> variable – and then using that parameter to center the vector before modelling! This is useful if you want to set a prior on the intercept for what the average X value should be. Normally it would be tricky to center a variable with missing data (if you don’t know all the values, how can you know their average?) but Bayes makes it effortless.</p>
</section>
<section id="count-data-with-missing-numbers" class="level2">
<h2 class="anchored" data-anchor-id="count-data-with-missing-numbers">Count data with missing numbers</h2>
<p>To extend this model further, I want to try modelling count data for both an independent and dependent variable.</p>
<p>In this example, there will be missing data an independent variable. However, we’re not going to be able to model the missing counts as <em>counts</em>, because Stan does not allow discrete missing data. Instead we’ll treat the unobserved data as lognormal, and see how wrong we are.</p>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <category>QCBS</category>
  <guid>https://aammd.github.io/posts/2023-08-24-imputation-nonnormal/</guid>
  <pubDate>Tue, 22 Aug 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Breakpoint regression in Stan</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-07-05-breakpoint/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span></code></pre></div>
</div>
<section id="two-or-more-relationships" class="level2">
<h2 class="anchored" data-anchor-id="two-or-more-relationships">Two (or more) relationships</h2>
<p>In breakpoint regression, we think that the relationship between two things can be described by two lines which alternate at a specific point.</p>
<p>When might this happen? One case is when a rate is determined by the <em>minimum</em> value of two functions<sup>1</sup>. For an example, consider cars driving down a series of roads. The roads vary in their speed limit, and each car is driven by very lawful drivers who always drive precisely the speed limit</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"speed limit"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Car speed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-07-05-breakpoint/index_files/figure-html/concept-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>However, some of these highways have VERY high speed limits. The cars, however, can’t keep up: eventually they hit their max speed. When that happens, the lawful drivers hold steady at the fastest speed their car can maintain. Together, you get a kind of “hockey stick” shape:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> limit, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> max,</span>
<span id="cb3-2">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb3-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> limit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> max)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Max speed"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Speed limit"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Car speed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-07-05-breakpoint/bk_intro-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Car speed equals the speed limit, right up to the car’s maximum velocity. Then, it doesn’t matter how high the limit is, the car has to stay at maximum speed.</figcaption>
</figure>
</div>
</div>
</div>
<section id="not-so-fast" class="level3">
<h3 class="anchored" data-anchor-id="not-so-fast">Not so fast!</h3>
<p>Not every car is going to go at the exact manufacturers maximum speed! When (in my imaginary example) manufacturers release a new kind of car, they test a sample of cars to measure their maximum speed. Therefore we know the max speed (with some error) for that <em>brand</em> of car. However, the realized max speed for any specific car in the wild will be <strong>lower</strong> than this value. This could be caused by a host of unmeasured factors, such as that particular car’s defects, the kind of care it has received, etc</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> limit, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> max,</span>
<span id="cb4-2">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb4-3">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> limit, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> max)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">105</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Factory Max speed"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Actual max speed"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Speed limit"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Car speed"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-07-05-breakpoint/breakpoint-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Car speed equals the speed limit, right up to the car’s maximum velocity – decreased a little bit by particularities of this specific car.</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="write-that-in-mathematics" class="level2">
<h2 class="anchored" data-anchor-id="write-that-in-mathematics">Write that in mathematics</h2>
<p>for one car, driving on different roads.</p>
<ul>
<li>We label the different roads <img src="https://latex.codecogs.com/png.latex?i"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ctau"> is the maximum speed of this particular kind of car</li>
<li><img src="https://latex.codecogs.com/png.latex?M"> is a bunch of measurements of the car’s max speed (based on factory cars)</li>
<li><img src="https://latex.codecogs.com/png.latex?p"> is the proportion of that maximum that our actual car has</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AY_i%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cmu_i,%20%5Csigma)%5C%5C%0AM%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Ctau,%20%5Csigma_m)%5C%5C%0A%5Cmu_i%20&amp;%20=%20%5Cbegin%7Bcases%7D%0A%20%20%20%20X_i%20&amp;%20%5Ctext%7Bif%20%7D%20X_i%20%5Cleq%20p%5Ctau%20%5C%5C%0A%20%20%20%20p%5Ctau%20&amp;%20%5Ctext%7Bif%20%7D%20X_i%20%3E%20p%5Ctau%0A%5Cend%7Bcases%7D%20%5C%5C%0A%5Ctext%7Blogit%7D(p)%20&amp;%5Csim%20%5Ctext%7BNormal%7D(2,%20.5)%20%5C%5C%0A%5Ctau%20&amp;%5Csim%20%5Ctext%7BNormal%7D(...)%20%5C%5C%0A%5Csigma_m%20&amp;%5Csim%20%5Ctext%7BExponential%7D(...)%20%5C%5C%0A%5Csigma%20&amp;%5Csim%20%5Ctext%7BExponential%7D(...)%0A%5Cend%7Balign%7D%0A"></p>
</section>
<section id="simple-stan-code-with-prior-predictions" class="level2">
<h2 class="anchored" data-anchor-id="simple-stan-code-with-prior-predictions">Simple Stan code with prior predictions</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">breakpoint_B <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-07-05-breakpoint/breakpoint_B.stan"</span>))</span>
<span id="cb5-2">breakpoint_B</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb6-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb6-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb6-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> B;</span>
<span id="cb6-5">}</span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// transformed data {</span></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//   real M = max(x);</span></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// }</span></span>
<span id="cb6-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb6-10"> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> b2;</span>
<span id="cb6-11"> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb6-12">}</span>
<span id="cb6-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb6-14">  b2 ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb6-15">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb6-16">}</span>
<span id="cb6-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">generated quantities</span> {</span>
<span id="cb6-18">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] y;</span>
<span id="cb6-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>( i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb6-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (x[i] &lt; B) {</span>
<span id="cb6-21">      y[i] = normal_rng(x[i]*b2, sigma);</span>
<span id="cb6-22">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb6-23">      y[i] = normal_rng(B*b2, sigma);</span>
<span id="cb6-24">    }</span>
<span id="cb6-25">  }</span>
<span id="cb6-26">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">xvar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3">breakpoint_B_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> breakpoint_B<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-4">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xvar,</span>
<span id="cb7-5">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb7-6">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">B =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 1 chain...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.0 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">breakpoint_B_prior</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> variable  mean median    sd   mad     q5   q95 rhat ess_bulk ess_tail
    lp__  -2.00  -1.69  0.99  0.71  -3.84 -1.05 1.00      423      391
    b2     0.98   0.97  0.91  0.93  -0.56  2.57 1.00      589      609
    sigma  0.99   0.64  1.02  0.66   0.05  3.15 1.00      609      346
    y[1]  24.52  23.87 22.87 23.49 -14.30 64.14 1.00      592      572
    y[2]  24.58  24.27 22.87 23.19 -13.87 63.73 1.00      585      609
    y[3]   3.59   3.42  3.56  3.53  -2.18  9.59 1.00      573      617
    y[4]  24.55  24.04 22.91 23.51 -14.53 63.83 1.00      599      581
    y[5]  24.70  24.28 22.82 22.93 -14.38 64.15 1.00      598      501
    y[6]  15.98  15.66 14.87 14.93  -9.47 42.02 1.00      595      607
    y[7]  24.55  24.02 22.78 23.27 -13.91 63.94 1.00      586      572

 # showing 10 of 45 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)</code></pre>
</div>
</div>
<p>plot it</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">prior_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> breakpoint_B_prior <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-2">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_draws</span>(y[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndraws =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xvar[i])</span>
<span id="cb11-4"></span>
<span id="cb11-5">prior_draws <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.draw)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-07-05-breakpoint/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<!-- ## extending it -->
<!-- I want to play with reparameterizing the model using a proportion.  -->
<!-- This represents the location of the breakpoint: somewhere between 0 and the maximum of the x axis. -->
<!-- ```{r} -->
<!-- breakpoint <- cmdstanr::cmdstan_model( -->
<!--   here::here("posts/2023-07-05-breakpoint/breakpoint.stan")) -->
<!-- set.seed(4812) -->
<!-- xvar <- runif(42, min = 1, max=55) -->
<!-- breakpoint_prior <- breakpoint$sample(chains=1, -->
<!--                                       data = list(x = xvar, -->
<!--                                                   n = 42)) -->
<!-- ``` -->
<!-- ```{r} -->
<!-- prior_draws <- breakpoint_prior |>  -->
<!--   tidybayes::gather_draws(y[i], ndraws = 12) |>  -->
<!--   mutate(x = xvar[i]) -->
<!-- prior_draws |>  -->
<!--   ggplot(aes(x = x, y = .value)) + geom_point() +  -->
<!--   facet_wrap(~.draw) -->
<!-- ``` -->
</section>
<section id="rewriting-this-with-step" class="level2">
<h2 class="anchored" data-anchor-id="rewriting-this-with-step">Rewriting this with <code>step()</code></h2>
<p>I learned from PhD student Dominique Caron that breakpoint regression can be written in brms using <code>step()</code>. This is described in <a href="https://discourse.mc-stan.org/t/piecewise-linear-mixed-models-with-a-random-change-point/5306/4">this forum discussion</a> and demonstrated in Stan code <a href="https://gist.github.com/mbjoseph/25d649e46602a419f9765638d5a2bfbc">here</a>. The Stan manual <a href="https://mc-stan.org/docs/functions-reference/logical-functions.html#logical-functions-1">discusses step() among other logical functions</a></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">breakpoint_step_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb12-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-07-05-breakpoint/breakpoint_step_prior.stan"</span>))</span>
<span id="cb12-3">breakpoint_step_prior</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb13-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb13-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb13-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb13-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> B;</span>
<span id="cb13-5">}</span>
<span id="cb13-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb13-7"> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] y;</span>
<span id="cb13-8"> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb13-9">}</span>
<span id="cb13-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb13-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x2;</span>
<span id="cb13-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb13-13">    x2[i] = step(B - x[i]);</span>
<span id="cb13-14">  }</span>
<span id="cb13-15">}</span>
<span id="cb13-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb13-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] mu;</span>
<span id="cb13-18">  mu = B + (x - B) .* x2;</span>
<span id="cb13-19">  y ~ normal(mu, sigma);</span>
<span id="cb13-20">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb13-21">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4812</span>)</span>
<span id="cb14-2"></span>
<span id="cb14-3">xvar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>)</span>
<span id="cb14-4"></span>
<span id="cb14-5">breakpoint_step_prior_samples <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> breakpoint_step_prior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb14-6">                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xvar,</span>
<span id="cb14-7">                                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">B =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> 0L)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 1 chain...

Chain 1 finished in 0.6 seconds.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: 1 of 1 chains had an E-BFMI less than 0.2.
See https://mc-stan.org/misc/warnings for details.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">prior_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> breakpoint_step_prior_samples <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-2">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_draws</span>(y[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndraws =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xvar[i])</span>
<span id="cb17-4"></span>
<span id="cb17-5">prior_draws <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb17-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb17-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.draw)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-07-05-breakpoint/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>estimating breakpoints with some prior knowledge</p>
<p>We assume here that we have some unmeasured maximum. in my car example, the maximum speed of each kind of car is measured at the factory, by taking a random sample of cars and measuring their max speeds</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## take just one </span></span>
<span id="cb18-2">one_dataset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> prior_draws <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(.draw) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb18-5"></span>
<span id="cb18-6">breakpoint_step_meas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb18-7">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-07-05-breakpoint/breakpoint_step_meas.stan"</span>))</span>
<span id="cb18-8"></span>
<span id="cb18-9">breakpoint_step_meas</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb19-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb19-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] speed_limit;</span>
<span id="cb19-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] obs_speed;</span>
<span id="cb19-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> max_avg;</span>
<span id="cb19-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> max_sd;</span>
<span id="cb19-7">}</span>
<span id="cb19-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb19-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> max_speed;</span>
<span id="cb19-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb19-11">}</span>
<span id="cb19-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb19-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] V2;</span>
<span id="cb19-14">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb19-15">    V2[i] = step(max_speed - speed_limit[i]);</span>
<span id="cb19-16">  }</span>
<span id="cb19-17">}</span>
<span id="cb19-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb19-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] mu;</span>
<span id="cb19-20">  mu = max_speed + (speed_limit - max_speed) .* V2;</span>
<span id="cb19-21">  max_speed ~ normal(max_avg, max_sd);</span>
<span id="cb19-22">  obs_speed ~ normal(mu, sigma);</span>
<span id="cb19-23">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb19-24">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">breakpoint_step_meas<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n  =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed_limit =</span> one_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x, </span>
<span id="cb20-2">                                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_speed =</span> one_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.value,</span>
<span id="cb20-3">                                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_avg =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,</span>
<span id="cb20-4">                                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> 0L)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.1 seconds.
Chain 2 finished in 0.1 seconds.
Chain 3 finished in 0.1 seconds.
Chain 4 finished in 0.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 0.7 seconds.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: NAs introduced by coercion

Warning: NAs introduced by coercion</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>  variable   mean median   sd  mad     q5    q95 rhat ess_bulk ess_tail
 lp__      -18.53 -18.23 0.99 0.71 -20.57 -17.57 1.00     1745     1892
 max_speed  33.17  33.17 0.23 0.23  32.79  33.54 1.00     2427     2370
 sigma       0.93   0.91 0.11 0.10   0.77   1.11 1.00     3100     2272
 V2[1]       1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA
 V2[2]       1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA
 V2[3]       1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA
 V2[4]       0.00   0.00 0.00 0.00   0.00   0.00   NA       NA       NA
 V2[5]       1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA
 V2[6]       0.00   0.00 0.00 0.00   0.00   0.00   NA       NA       NA
 V2[7]       1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA

 # showing 10 of 45 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)</code></pre>
</div>
</div>
</section>
<section id="objects-on-the-road-are-slower-than-they-appear" class="level2">
<h2 class="anchored" data-anchor-id="objects-on-the-road-are-slower-than-they-appear">Objects on the road are slower than they appear</h2>
<p>the factory-measured speed is probably a lot higher than the top speed of the average car on the road. lots of factors intervene: the particular car’s defects, its maitenance history, the fuel used, the driver’s skill.</p>
<p>All of these factors will only DECREASE, and never increase, a car’s speed relative to the maximum possible.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">breakpoint_step_p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb24-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-07-05-breakpoint/breakpoint_step_p.stan"</span>))</span>
<span id="cb24-3">breakpoint_step_p</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb25-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb25-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb25-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] speed_limit;</span>
<span id="cb25-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] obs_speed;</span>
<span id="cb25-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> max_avg;</span>
<span id="cb25-6">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> max_sd;</span>
<span id="cb25-7">}</span>
<span id="cb25-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb25-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> factory_speed;</span>
<span id="cb25-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb25-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> alpha;</span>
<span id="cb25-12">}</span>
<span id="cb25-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb25-14">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> max_speed;</span>
<span id="cb25-15">  max_speed = factory_speed * inv_logit(alpha);</span>
<span id="cb25-16">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] V2;</span>
<span id="cb25-17">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb25-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// step() is 0 if speed limit is over the maximum, 0 otherwise</span></span>
<span id="cb25-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// in other words, it gives the slope</span></span>
<span id="cb25-20">    V2[i] = step(max_speed - speed_limit[i]);</span>
<span id="cb25-21">  }</span>
<span id="cb25-22">}</span>
<span id="cb25-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb25-24">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] mu;</span>
<span id="cb25-25">  mu = max_speed + (speed_limit - max_speed) .* V2;</span>
<span id="cb25-26">  factory_speed ~ normal(max_avg, max_sd);</span>
<span id="cb25-27">  obs_speed ~ normal(mu, sigma);</span>
<span id="cb25-28">  alpha ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb25-29">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb25-30">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">breakpoint_step_p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n  =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, </span>
<span id="cb26-2">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">speed_limit =</span> one_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x, </span>
<span id="cb26-3">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_speed =</span> one_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>.value,</span>
<span id="cb26-4">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_avg =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>,</span>
<span id="cb26-5">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> 0L)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.2 seconds.
Chain 2 finished in 0.2 seconds.
Chain 3 finished in 0.2 seconds.
Chain 4 finished in 0.2 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.2 seconds.
Total execution time: 1.1 seconds.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: 80 of 4000 (2.0%) transitions ended with a divergence.
See https://mc-stan.org/misc/warnings for details.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: NAs introduced by coercion

Warning: NAs introduced by coercion</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>      variable   mean median   sd  mad     q5    q95 rhat ess_bulk ess_tail
 lp__          -19.12 -18.82 1.21 0.95 -21.47 -17.84 1.01      985     1660
 factory_speed  33.84  33.68 0.66 0.57  33.03  35.09 1.01      232      109
 sigma           0.93   0.92 0.11 0.10   0.77   1.11 1.01      539      997
 alpha           4.45   4.24 1.25 1.28   2.82   6.74 1.01      237      135
 max_speed      33.16  33.17 0.24 0.23  32.76  33.55 1.00     2243      727
 V2[1]           1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA
 V2[2]           1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA
 V2[3]           1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA
 V2[4]           0.00   0.00 0.00 0.00   0.00   0.00   NA       NA       NA
 V2[5]           1.00   1.00 0.00 0.00   1.00   1.00   NA       NA       NA

 # showing 10 of 47 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)</code></pre>
</div>
</div>
<p>first thing that doesn’t work well (admittedly, there is nothing in these simulated data to support this)</p>
<p>suggestion that the probability prior is very important</p>
<p>perhaps if the same kind of car travelled on different highways in <em>several different countries</em>? in all countries the car would have the same theoretical maximum, but the difference in country-level factors mean that the proportion <img src="https://latex.codecogs.com/png.latex?p"> below that max, where the average car has its top speed, is going to vary.</p>
<p>what other uncertainty is there to include? uncertainty in the speed limit perhaps?</p>
</section>
<section id="switch-for-gamma-errors" class="level2">
<h2 class="anchored" data-anchor-id="switch-for-gamma-errors">switch for gamma errors</h2>
<p>Before advancing model building much farther, I want to correct the error distribution. Speeds might be variable, but they can never be negative!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">breakpoint_step_gamma_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb31-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-07-05-breakpoint/breakpoint_step_gamma_prior.stan"</span>))</span>
<span id="cb31-3">breakpoint_step_gamma_prior</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb32-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n;</span>
<span id="cb32-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x;</span>
<span id="cb32-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> B;</span>
<span id="cb32-5">}</span>
<span id="cb32-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb32-7"> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt;[n] y;</span>
<span id="cb32-8"> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb32-9">}</span>
<span id="cb32-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb32-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] x2;</span>
<span id="cb32-12">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:n){</span>
<span id="cb32-13">    x2[i] = step(B - x[i]);</span>
<span id="cb32-14">  }</span>
<span id="cb32-15">}</span>
<span id="cb32-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb32-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] mu;</span>
<span id="cb32-18">  mu = B + (x - B) .* x2;</span>
<span id="cb32-19">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[n] beta = mu/square(sigma);</span>
<span id="cb32-20">  y ~ gamma(mu .* beta, beta);</span>
<span id="cb32-21">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb32-22">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4812</span>)</span>
<span id="cb33-2"></span>
<span id="cb33-3">xvar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>)</span>
<span id="cb33-4"></span>
<span id="cb33-5">breakpoint_step_gamma_prior_samples <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> breakpoint_step_gamma_prior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb33-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb33-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xvar,</span>
<span id="cb33-8">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">B =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> 1000L)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 1 chain...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Random variable[1] is inf, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Random variable[1] is inf, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Random variable[4] is inf, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Shape parameter[1] is 0, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Shape parameter[1] is 0, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Shape parameter[1] is 0, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Shape parameter[1] is 0, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Shape parameter[1] is inf, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Shape parameter[1] is inf, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: gamma_lpdf: Shape parameter[1] is inf, but must be positive finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmp5fMbyc/model-5cb742e1f51c.stan', line 20, column 2 to column 30)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.5 seconds.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: 1 of 1 chains had an E-BFMI less than 0.2.
See https://mc-stan.org/misc/warnings for details.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb87-1">prior_draws <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> breakpoint_step_gamma_prior_samples <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb87-2">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_draws</span>(y[i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndraws =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb87-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xvar[i])</span>
<span id="cb87-4"></span>
<span id="cb87-5">prior_draws <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb87-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb87-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb87-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.draw)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-07-05-breakpoint/index_files/figure-html/gamma-plot-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>see Leibig’s Law of the Minimum, and also Dune↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <category>QCBS</category>
  <guid>https://aammd.github.io/posts/2023-07-05-breakpoint/</guid>
  <pubDate>Sat, 05 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="https://aammd.github.io/posts/2023-07-05-breakpoint/breakpoint-1.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>Latent continuous variables</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-03-20-latent-continuous/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span></code></pre></div>
</div>
<p>Imagine we have many measurments, all correlated with each other. Where do these correlations come from? One possibility is that all these measurents are <em>caused</em> by the values of some unobservable, latent trait. This happens in ecology when we imagine that, for example, the <strong>Competitive Ability</strong> of a species appears to us in the form of measurable traits that (to us) seem to represent this trait: leaf size, growth rate, alleopathy, etc.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2023-03-20-latent-continuous/dag.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">Five different observable variables (in squares), all caused by one latent variable (round).</figcaption>
</figure>
</div>
<p>In mathematics, this model is the following:</p>
<p>$$</p>
<p><img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Balign%7D%0AY_%7Bij%7D%20&amp;%5Csim%20%5Ctext%7BNormal%7D(%5Cmu_%7Bij%7D,%20%5Csigma)%20%5C%5C%0A%5Cmu_%7Bij%7D%20&amp;=%20%5Calpha_i%20%5Ctimes%20%5Cbeta_j%5C%5C%0A%5Cboldsymbol%7B%20%5Calpha%20%7D%20&amp;%5Csim%20%5Ctext%7BNormal%7D(0,%201)%20%5C%5C%0A%5Cboldsymbol%7B%20%5Cbeta%20%7D%20&amp;%5Csim%20%5Ctext%7BNormal%7D(0,%201)%20%5C%5C%0A%5Cend%7Balign%7D"></p>
<p>$$</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb2-2"></span>
<span id="cb2-3">alpha <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-4"></span>
<span id="cb2-5">five_betas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7">sigma_obs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">ymean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> alpha <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%o%</span> five_betas</span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## sample a random number for each of these and put in back</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">ind <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(ymean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arr.ind =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-14"></span>
<span id="cb2-15">yobs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(0L, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">times =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb2-16">yobs[ind] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> ymean[ind], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sigma_obs)</span></code></pre></div>
</div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>My toxic trait is that I like for-loops but never write them</p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pairs</span>(yobs)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-03-20-latent-continuous/index_files/figure-html/pairsplot-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<section id="a-first-simple-stan-model" class="level3">
<h3 class="anchored" data-anchor-id="a-first-simple-stan-model">A first, simple stan model</h3>
<p>For a first attempt, I’ll try a model that encodes the generative process above, coded in Stan:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">latent_continuous <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stan_file =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-03-20-latent-continuous/latent_continuous.stan"</span>))</span>
<span id="cb4-3"></span>
<span id="cb4-4">latent_continuous</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb5-1"></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb5-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N;</span>
<span id="cb5-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] y;</span>
<span id="cb5-5">}</span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb5-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">row_vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] beta;</span>
<span id="cb5-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb5-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N] alpha;</span>
<span id="cb5-10">}</span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb5-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// take the outer product: alpha multiplied by each beta in turn</span></span>
<span id="cb5-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] mu = alpha * beta;</span>
<span id="cb5-14">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N){</span>
<span id="cb5-15">    y[i] ~ normal(mu[i], sigma);</span>
<span id="cb5-16">  }</span>
<span id="cb5-17">  beta ~ std_normal();</span>
<span id="cb5-18">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb5-19">  alpha ~ std_normal();</span>
<span id="cb5-20">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">datalist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(yobs),</span>
<span id="cb6-2">                 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> yobs)</span>
<span id="cb6-3"></span>
<span id="cb6-4">latent_cont_samp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> latent_continuous<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> datalist, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/RtmpDw2oa1/model-566f1bdf5dc6.stan', line 15, column 4 to column 32)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 2 finished in 22.5 seconds.
Chain 1 finished in 22.9 seconds.
Chain 4 finished in 22.7 seconds.
Chain 3 finished in 22.9 seconds.

All 4 chains finished successfully.
Mean chain execution time: 22.7 seconds.
Total execution time: 23.1 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">latent_cont_samp</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> variable   mean median    sd   mad      q5    q95 rhat ess_bulk ess_tail
 lp__     -91.59 -91.33 14.44 14.43 -116.18 -68.55 1.01      639     1462
 beta[1]   -0.01   0.01  2.26  3.34   -2.41   2.40 1.74        6      280
 beta[2]    0.01   0.00  1.18  1.74   -1.26   1.27 1.74        6      226
 beta[3]    0.00   0.00  0.60  0.88   -0.67   0.66 1.74        6      125
 beta[4]    0.00   0.01  1.17  1.72   -1.26   1.26 1.74        6      170
 beta[5]    0.00   0.00  0.34  0.50   -0.40   0.40 1.74        6      105
 sigma      0.60   0.60  0.01  0.01    0.57   0.62 1.00     5143     2824
 alpha[1]   0.00  -0.07  1.06  1.54   -1.31   1.31 1.73        6      149
 alpha[2]   0.00  -0.03  0.53  0.72   -0.73   0.76 1.73        6      137
 alpha[3]   0.00  -0.01  0.48  0.66   -0.70   0.71 1.73        6      122

 # showing 10 of 207 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)</code></pre>
</div>
</div>
<p>that was.. a spectacular failure! I suspect this is because the parameters are not identifiable: there’s no way to know, from the model’s perspective, if a particular trait is in a positive or negative relationship to the latent state. What if I try constraining these?</p>
</section>
<section id="partially-constrained-model" class="level2">
<h2 class="anchored" data-anchor-id="partially-constrained-model">Partially constrained model</h2>
<p>In this model I set constraints on the sign of the coefficients that relate the latent state to any observed variable. This is the sort of thing that would work in most ecological systems. For example, if an underlying state is “competitive ability” we might know it relates positively to traits like growth rate and leaf size, etc.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">latent_cont_constrained <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb16-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stan_file =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(</span>
<span id="cb16-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-03-20-latent-continuous/latent_cont_constrained.stan"</span>))</span>
<span id="cb16-4"></span>
<span id="cb16-5">latent_cont_constrained</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb17-1"></span>
<span id="cb17-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb17-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N;</span>
<span id="cb17-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] y;</span>
<span id="cb17-5">}</span>
<span id="cb17-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb17-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">row_vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] beta;</span>
<span id="cb17-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb17-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N] alpha;</span>
<span id="cb17-10">}</span>
<span id="cb17-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb17-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">row_vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] betatrans;</span>
<span id="cb17-13">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]);</span>
<span id="cb17-14">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] = -exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]);</span>
<span id="cb17-15">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] = exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]);</span>
<span id="cb17-16">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] = exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]);</span>
<span id="cb17-17">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] = -exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]);</span>
<span id="cb17-18">}</span>
<span id="cb17-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb17-20">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// take the outer product: alpha multiplied by each beta in turn</span></span>
<span id="cb17-21">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] mu = alpha * betatrans;</span>
<span id="cb17-22">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N){</span>
<span id="cb17-23">    y[i] ~ normal(mu[i], sigma);</span>
<span id="cb17-24">  }</span>
<span id="cb17-25">  beta ~ std_normal();</span>
<span id="cb17-26">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb17-27">  alpha ~ std_normal();</span>
<span id="cb17-28">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">latent_cont_constrained_samp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> latent_cont_constrained<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb18-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> datalist, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmpi4HWQ5/model-72c943da0867.stan', line 23, column 4 to column 32)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmpi4HWQ5/model-72c943da0867.stan', line 23, column 4 to column 32)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 2 finished in 12.0 seconds.
Chain 3 finished in 12.2 seconds.
Chain 1 finished in 12.3 seconds.
Chain 4 finished in 12.3 seconds.

All 4 chains finished successfully.
Mean chain execution time: 12.2 seconds.
Total execution time: 12.4 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">latent_cont_constrained_samp</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> variable   mean median    sd   mad      q5    q95 rhat ess_bulk ess_tail
 lp__     -84.70 -84.05 15.31 15.23 -110.27 -60.68 1.00      618      960
 beta[1]    0.83   0.83  0.05  0.05    0.74   0.91 1.00      526      968
 beta[2]    0.18   0.17  0.06  0.06    0.08   0.28 1.00      667     1292
 beta[3]   -0.51  -0.51  0.09  0.09   -0.66  -0.37 1.00     1385     2103
 beta[4]    0.17   0.17  0.06  0.06    0.06   0.27 1.00      648     1108
 beta[5]   -1.07  -1.06  0.13  0.13   -1.30  -0.87 1.00     2402     1938
 sigma      0.60   0.60  0.02  0.01    0.57   0.62 1.00     5000     2966
 alpha[1]  -1.03  -1.02  0.21  0.22   -1.37  -0.69 1.00     5037     2288
 alpha[2]   0.48   0.48  0.21  0.21    0.14   0.83 1.00     8091     2531
 alpha[3]   0.43   0.43  0.20  0.20    0.09   0.77 1.00     8381     2650

 # showing 10 of 212 rows (change via 'max_rows' argument or 'cmdstanr_max_rows' option)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tidybayes::get_variables(latent_cont_constrained_samp)</span></span>
<span id="cb33-2"></span>
<span id="cb33-3">tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_rvars</span>(latent_cont_constrained_samp, betatrans[id]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb33-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_value =</span> five_betas) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb33-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist  =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-6">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_halfeye</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgreen"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> true_value), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-03-20-latent-continuous/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>So it seems that with some simple constraints on the signs, this model samples just fine!</p>
<p>Does it also get the latent states right?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_draws</span>(latent_cont_constrained_samp, quantile) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb35-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(variable, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb35-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_alpha =</span> alpha) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb35-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(variable),</span>
<span id="cb35-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rnk =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dense_rank</span>(true_alpha)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb35-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">25%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">75%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> rnk, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> rnk)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb35-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb35-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> true_alpha, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y  =</span> rnk), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-03-20-latent-continuous/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>What if we experiment with a standard deviation for the alpha (ie a hierarchical model)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">latent_cont_constr_hier <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb36-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stan_file =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-03-20-latent-continuous/latent_cont_constr_hier.stan"</span>))</span>
<span id="cb36-3"></span>
<span id="cb36-4">latent_cont_constr_hier</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb37-1"></span>
<span id="cb37-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb37-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N;</span>
<span id="cb37-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] y;</span>
<span id="cb37-5">}</span>
<span id="cb37-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb37-7">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">row_vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] beta;</span>
<span id="cb37-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; sigma;</span>
<span id="cb37-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[N] alpha;</span>
<span id="cb37-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; s_alpha;</span>
<span id="cb37-11">}</span>
<span id="cb37-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span> {</span>
<span id="cb37-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">row_vector</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] betatrans;</span>
<span id="cb37-14">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] = exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]);</span>
<span id="cb37-15">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] = -exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]);</span>
<span id="cb37-16">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] = exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]);</span>
<span id="cb37-17">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] = exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]);</span>
<span id="cb37-18">  betatrans[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] = -exp(beta[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]);</span>
<span id="cb37-19">}</span>
<span id="cb37-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb37-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// take the outer product: alpha multiplied by each beta in turn</span></span>
<span id="cb37-22">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">matrix</span>[N, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>] mu = alpha * betatrans;</span>
<span id="cb37-23">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:N){</span>
<span id="cb37-24">    y[i] ~ normal(mu[i], sigma);</span>
<span id="cb37-25">  }</span>
<span id="cb37-26">  beta ~ std_normal();</span>
<span id="cb37-27">  sigma ~ exponential(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb37-28">  alpha ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, s_alpha);</span>
<span id="cb37-29">  s_alpha ~ exponential(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb37-30">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">latent_cont_constr_hier_samp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> latent_cont_constr_hier<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb38-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> datalist, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmpi4HWQ5/model-72c940a3b623.stan', line 24, column 4 to column 32)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 1 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmpi4HWQ5/model-72c940a3b623.stan', line 28, column 2 to column 29)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 2 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmpi4HWQ5/model-72c940a3b623.stan', line 28, column 2 to column 29)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 3 </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 Exception: normal_lpdf: Scale parameter is 0, but must be positive! (in '/var/folders/x7/l08zn2396g797m5ws54np_6w0000gp/T/Rtmpi4HWQ5/model-72c940a3b623.stan', line 28, column 2 to column 29)</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Chain 4 </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Chain 3 finished in 20.9 seconds.
Chain 4 finished in 23.3 seconds.
Chain 1 finished in 23.9 seconds.
Chain 2 finished in 25.6 seconds.

All 4 chains finished successfully.
Mean chain execution time: 23.4 seconds.
Total execution time: 25.7 seconds.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: 4 of 4 chains had an E-BFMI less than 0.2.
See https://mc-stan.org/misc/warnings for details.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1">tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise_draws</span>(latent_cont_constr_hier_samp, quantile) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb62-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(stringr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_detect</span>(variable, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">["</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb62-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_alpha =</span> alpha) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb62-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> readr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_number</span>(variable),</span>
<span id="cb62-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rnk =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dense_rank</span>(true_alpha)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb62-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">25%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">75%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> rnk, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> rnk)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb62-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb62-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> true_alpha, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y  =</span> rnk), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-03-20-latent-continuous/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2023-03-20-latent-continuous/</guid>
  <pubDate>Mon, 20 Mar 2023 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Validating a model of selection on plasticity</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span></code></pre></div>
</div>
<section id="the-challenge" class="level2">
<h2 class="anchored" data-anchor-id="the-challenge">The challenge</h2>
<p>Studying selection on phenotypic plasticity is challenging. First, because phenotypic plasticity is a slope – it is the change in a trait when an environmental variable changes. Secondly, because many traits of animals also cause other traits. For example, arriving later at a breeding site causes an individual to lay fewer eggs (because less food is available).</p>
</section>
<section id="the-system" class="level2">
<h2 class="anchored" data-anchor-id="the-system">The system</h2>
<p>Let’s begin just with a simulation of three interrelated traits:</p>
<ul>
<li>The date when a bird arrives, which determines</li>
<li>How many eggs they lay, out of which there is</li>
<li>Some number of surviving offspring</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## how many birds</span></span>
<span id="cb2-2">nbirds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate arrival dates -- two weeks before and after whatever the average is</span></span>
<span id="cb2-4">darrive <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(nbirds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>()</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## simulate clutch sizes -- decrease by 4% each day</span></span>
<span id="cb2-7">avg_clutch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span></span>
<span id="cb2-8">effect_per_day <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span></span>
<span id="cb2-9"></span>
<span id="cb2-10">clutch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(nbirds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(avg_clutch) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(effect_per_day)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>darrive))</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(darrive, clutch)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>As an aside, this would be 0-truncated, since birds who don’t lay eggs don’t get observed at all.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate hatching success</span></span>
<span id="cb3-2">success <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(nbirds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> clutch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">86</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(darrive, success)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-2-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>what’s important to see here is that there is a negative correlation, even though the arrival date has no direct effect on the outcome</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(success <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> darrive, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"poisson"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
glm(formula = success ~ darrive, family = "poisson")

Coefficients:
             Estimate Std. Error z value Pr(&gt;|z|)    
(Intercept)  1.330746   0.068901  19.314  &lt; 2e-16 ***
darrive     -0.039128   0.008791  -4.451 8.54e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for poisson family taken to be 1)

    Null deviance: 78.184  on 56  degrees of freedom
Residual deviance: 58.402  on 55  degrees of freedom
AIC: 232.38

Number of Fisher Scoring iterations: 5</code></pre>
</div>
</div>
<p>But, if we use a binomial model that knows about the number of possible successful chicks, then we see what we expect:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">bin_mod <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(success, clutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> success) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logit"</span>)))</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coef</span>(bin_mod))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>(Intercept) 
  0.8842975 </code></pre>
</div>
</div>
<p>Which matches the simulation above.</p>
<p>if we put <code>darrive</code> in the model, the effect should be very close to 0 with overlap.</p>
<p>If we imagine that the laying date effects the survival p, then we should see an effect close to 0</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(</span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(success, clutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> success) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> darrive,</span>
<span id="cb8-3">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">binomial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">link =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logit"</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
Call:
glm(formula = cbind(success, clutch - success) ~ 1 + darrive, 
    family = binomial(link = "logit"))

Coefficients:
            Estimate Std. Error z value Pr(&gt;|z|)    
(Intercept)  2.03026    0.20204  10.049   &lt;2e-16 ***
darrive     -0.03052    0.02683  -1.137    0.255    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 63.900  on 55  degrees of freedom
Residual deviance: 62.595  on 54  degrees of freedom
AIC: 102.23

Number of Fisher Scoring iterations: 4</code></pre>
</div>
</div>
<p>One Stan model can model all of these at the same time</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">one_indiv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb10-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-02-02-selection-on-plasticity/one_indiv.stan"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>In file included from stan/src/stan/model/model_header.hpp:11:
stan/src/stan/model/model_base_crtp.hpp:198: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, std::vector&lt;int&gt;&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, bool, bool, std::ostream*) const [with M = one_indiv_model_namespace::one_indiv_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  198 |   void write_array(boost::ecuyer1988&amp; rng, std::vector&lt;double&gt;&amp; theta,
      | </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-2870599e2fe2.hpp:349: note:   by 'one_indiv_model_namespace::one_indiv_model::write_array'
  349 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>stan/src/stan/model/model_base_crtp.hpp:136: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, Eigen::VectorXd&amp;, Eigen::VectorXd&amp;, bool, bool, std::ostream*) const [with M = one_indiv_model_namespace::one_indiv_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; Eigen::VectorXd = Eigen::Matrix&lt;double, -1, 1&gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  136 |   void write_array(boost::ecuyer1988&amp; rng, Eigen::VectorXd&amp; theta,
      | </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-2870599e2fe2.hpp:349: note:   by 'one_indiv_model_namespace::one_indiv_model::write_array'
  349 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | </code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">one_indiv</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb16-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nbirds;</span>
<span id="cb16-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nbirds] darrive;</span>
<span id="cb16-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> clutch;</span>
<span id="cb16-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> success;</span>
<span id="cb16-6">}</span>
<span id="cb16-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb16-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> logit_psuccess;</span>
<span id="cb16-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_avgclutch;</span>
<span id="cb16-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_b_date;</span>
<span id="cb16-11">}</span>
<span id="cb16-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb16-13">  success ~ binomial_logit(clutch, logit_psuccess);</span>
<span id="cb16-14">  clutch ~ poisson_log(log_avgclutch + log_b_date * darrive);</span>
<span id="cb16-15">  logit_psuccess ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb16-16">  log_avgclutch ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb16-17">  log_b_date ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb16-18">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">one_indiv_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> one_indiv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(</span>
<span id="cb17-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> nbirds,</span>
<span id="cb17-3">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clutch =</span> clutch, </span>
<span id="cb17-4">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">success =</span> success, </span>
<span id="cb17-5">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darrive =</span> darrive))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 1 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 1 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 1 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 1 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 1 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 1 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 1 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 1 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 1 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 1 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 1 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 1 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 1 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 1 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 1 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 1 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 1 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 1 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 1 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 1 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 1 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 1 finished in 0.1 seconds.
Chain 2 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 2 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 2 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 2 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 2 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 2 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 2 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 2 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 2 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 2 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 2 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 2 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 2 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 2 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 2 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 2 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 2 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 2 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 2 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 2 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 2 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 2 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 2 finished in 0.1 seconds.
Chain 3 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 3 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 3 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 3 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 3 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 3 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 3 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 3 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 3 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 3 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 3 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 3 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 3 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 3 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 3 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 3 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 3 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 3 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 3 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 3 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 3 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 3 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 3 finished in 0.1 seconds.
Chain 4 Iteration:    1 / 2000 [  0%]  (Warmup) 
Chain 4 Iteration:  100 / 2000 [  5%]  (Warmup) 
Chain 4 Iteration:  200 / 2000 [ 10%]  (Warmup) 
Chain 4 Iteration:  300 / 2000 [ 15%]  (Warmup) 
Chain 4 Iteration:  400 / 2000 [ 20%]  (Warmup) 
Chain 4 Iteration:  500 / 2000 [ 25%]  (Warmup) 
Chain 4 Iteration:  600 / 2000 [ 30%]  (Warmup) 
Chain 4 Iteration:  700 / 2000 [ 35%]  (Warmup) 
Chain 4 Iteration:  800 / 2000 [ 40%]  (Warmup) 
Chain 4 Iteration:  900 / 2000 [ 45%]  (Warmup) 
Chain 4 Iteration: 1000 / 2000 [ 50%]  (Warmup) 
Chain 4 Iteration: 1001 / 2000 [ 50%]  (Sampling) 
Chain 4 Iteration: 1100 / 2000 [ 55%]  (Sampling) 
Chain 4 Iteration: 1200 / 2000 [ 60%]  (Sampling) 
Chain 4 Iteration: 1300 / 2000 [ 65%]  (Sampling) 
Chain 4 Iteration: 1400 / 2000 [ 70%]  (Sampling) 
Chain 4 Iteration: 1500 / 2000 [ 75%]  (Sampling) 
Chain 4 Iteration: 1600 / 2000 [ 80%]  (Sampling) 
Chain 4 Iteration: 1700 / 2000 [ 85%]  (Sampling) 
Chain 4 Iteration: 1800 / 2000 [ 90%]  (Sampling) 
Chain 4 Iteration: 1900 / 2000 [ 95%]  (Sampling) 
Chain 4 Iteration: 2000 / 2000 [100%]  (Sampling) 
Chain 4 finished in 0.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 1.0 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">one_indiv_post</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       variable  mean median   sd  mad    q5   q95 rhat ess_bulk ess_tail
 lp__           19.63  19.97 1.28 1.02 17.07 20.96 1.00     1891     2648
 logit_psuccess  1.56   1.56 0.13 0.13  1.35  1.77 1.00     3807     2735
 log_avgclutch   1.41   1.41 0.06 0.06  1.30  1.51 1.00     3253     2731
 log_b_date     -0.04  -0.04 0.01 0.01 -0.05 -0.02 1.00     4038     2929</code></pre>
</div>
</div>
<p>reasonably close to true values:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.44</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.8084547</code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(avg_clutch)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1.504077</code></pre>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(effect_per_day)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] -0.03045921</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">simulate_some_birds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57</span>, </span>
<span id="cb27-2">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_b_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span>),</span>
<span id="cb27-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_avgclutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>),</span>
<span id="cb27-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logit_psuccess =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">84</span>)){</span>
<span id="cb27-5">  </span>
<span id="cb27-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate arrival dates -- two weeks before and after whatever the average is</span></span>
<span id="cb27-7">  darrive <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(nbirds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>()</span>
<span id="cb27-8">  </span>
<span id="cb27-9">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## simulate clutch sizes -- decrease  each day</span></span>
<span id="cb27-10">  clutch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(nbirds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(log_avgclutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> log_b_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>darrive))</span>
<span id="cb27-11">  </span>
<span id="cb27-12">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## simulate success</span></span>
<span id="cb27-13">  success <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(nbirds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> clutch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(logit_psuccess))</span>
<span id="cb27-14">  </span>
<span id="cb27-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb27-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data_list =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb27-17">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> nbirds,</span>
<span id="cb27-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darrive =</span> darrive, </span>
<span id="cb27-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clutch =</span> clutch, </span>
<span id="cb27-20">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">success =</span> success </span>
<span id="cb27-21">    ),</span>
<span id="cb27-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb27-23">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>variable, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>true_value,</span>
<span id="cb27-24">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log_b_date"</span>, log_b_date,</span>
<span id="cb27-25">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log_avgclutch"</span>, log_avgclutch,</span>
<span id="cb27-26">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logit_psuccess"</span>, logit_psuccess</span>
<span id="cb27-27">    )</span>
<span id="cb27-28">  ))</span>
<span id="cb27-29">}</span>
<span id="cb27-30"></span>
<span id="cb27-31"></span>
<span id="cb27-32">data_for_simulation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_some_birds</span>()</span>
<span id="cb27-33"></span>
<span id="cb27-34">one_indiv_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> one_indiv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_for_simulation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data_list,</span>
<span id="cb27-35">                                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 sequential chains...

Chain 1 finished in 0.1 seconds.
Chain 2 finished in 0.1 seconds.
Chain 3 finished in 0.1 seconds.
Chain 4 finished in 0.1 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.1 seconds.
Total execution time: 0.7 seconds.</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">comparison <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> one_indiv_post <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb29-2">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tidybayes::gather_rvars(logit_psuccess, log_avgclutch, log_b_date) |&gt; </span></span>
<span id="cb29-3">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_variables</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb29-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right_join</span>(data_for_simulation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>true_values, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".variable"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable"</span>))</span>
<span id="cb29-5"></span>
<span id="cb29-6"></span>
<span id="cb29-7">comparison <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb29-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb29-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_halfeye</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb29-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> true_value),</span>
<span id="cb29-11">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>,</span>
<span id="cb29-12">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>,</span>
<span id="cb29-13">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> data_for_simulation<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>true_values)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="no-0-birds" class="level2">
<h2 class="anchored" data-anchor-id="no-0-birds">No 0 birds</h2>
<p>This system is a little challenging, since we never observe 0 eggs per bird – if a bird cannot lay eggs (e.g.&nbsp;it does not find a nest spot) then it goes uncounted</p>
<p>To simulate this, I’ll drop the 0 clutches before doing the rest of the simulations. This means that sample size will be less than or equal to the “nbirds” argument.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">simulate_some_birds_nonzero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57</span>, </span>
<span id="cb30-2">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_b_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span>),</span>
<span id="cb30-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_avgclutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>),</span>
<span id="cb30-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logit_psuccess =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">84</span>)){</span>
<span id="cb30-5">  </span>
<span id="cb30-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate arrival dates -- two weeks before and after whatever the average is</span></span>
<span id="cb30-7">  darrive <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(nbirds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>()</span>
<span id="cb30-8">  </span>
<span id="cb30-9">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## simulate clutch sizes -- decrease  each day</span></span>
<span id="cb30-10">  clutch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(nbirds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(log_avgclutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> log_b_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>darrive))</span>
<span id="cb30-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drop 0 nests</span></span>
<span id="cb30-12">  nonzero_clutch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(clutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb30-13">  </span>
<span id="cb30-14">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## simulate success</span></span>
<span id="cb30-15">  success <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(nbirds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> clutch, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(logit_psuccess))</span>
<span id="cb30-16">  </span>
<span id="cb30-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb30-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data_list =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb30-19">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(nonzero_clutch),</span>
<span id="cb30-20">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darrive =</span> darrive[nonzero_clutch], </span>
<span id="cb30-21">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clutch  =</span>  clutch[nonzero_clutch], </span>
<span id="cb30-22">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">success =</span> success[nonzero_clutch] </span>
<span id="cb30-23">    ),</span>
<span id="cb30-24">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb30-25">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>variable, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>true_value,</span>
<span id="cb30-26">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log_b_date"</span>, log_b_date,</span>
<span id="cb30-27">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log_avgclutch"</span>, log_avgclutch,</span>
<span id="cb30-28">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logit_psuccess"</span>, logit_psuccess</span>
<span id="cb30-29">    )</span>
<span id="cb30-30">  ))</span>
<span id="cb30-31">}</span>
<span id="cb30-32"></span>
<span id="cb30-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>)</span>
<span id="cb30-34">some_nonzeros <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_some_birds_nonzero</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)</span></code></pre></div>
</div>
<p>a plot to confirm that it works:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">some_nonzeros<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data_list <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb31-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb31-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> darrive, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> clutch)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>And fit the posterior</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">plot_posterior_true <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(simdata, stanmodel){</span>
<span id="cb32-2">  model_post <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stanmodel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> simdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data_list,</span>
<span id="cb32-3">                                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">refresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">parallel_chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb32-4">  </span>
<span id="cb32-5">  comparison <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_post <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb32-6">    tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy_draws</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb32-7">    tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather_variables</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb32-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">right_join</span>(simdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>true_values, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".variable"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable"</span>))</span>
<span id="cb32-9">  </span>
<span id="cb32-10">  </span>
<span id="cb32-11">  comparison <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb32-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .value)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb32-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_halfeye</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb32-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(</span>
<span id="cb32-15">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> true_value),</span>
<span id="cb32-16">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>,</span>
<span id="cb32-17">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span>,</span>
<span id="cb32-18">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> simdata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>true_values)</span>
<span id="cb32-19">}</span>
<span id="cb32-20"></span>
<span id="cb32-21"></span>
<span id="cb32-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_posterior_true</span>(some_nonzeros, one_indiv)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 0.2 seconds.
Chain 2 finished in 0.2 seconds.
Chain 3 finished in 0.2 seconds.
Chain 4 finished in 0.2 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.2 seconds.
Total execution time: 0.5 seconds.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>There’s already some bias happening! let’s try what happens when the average is lower (and gives more 0s)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">420</span>)</span>
<span id="cb34-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_some_birds_nonzero</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_avgclutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.4</span>),</span>
<span id="cb34-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_b_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>),</span>
<span id="cb34-4">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb34-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_posterior_true</span>(one_indiv)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 0.5 seconds.
Chain 2 finished in 0.6 seconds.
Chain 3 finished in 0.5 seconds.
Chain 4 finished in 0.6 seconds.

All 4 chains finished successfully.
Mean chain execution time: 0.6 seconds.
Total execution time: 0.8 seconds.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>some preliminary repetitions show that it usually misses either the average or the hatching success, frequently both.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">one_indiv_noZero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb36-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-02-02-selection-on-plasticity/one_indiv_noZero.stan"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>In file included from stan/src/stan/model/model_header.hpp:11:
stan/src/stan/model/model_base_crtp.hpp:198: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, std::vector&lt;int&gt;&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, bool, bool, std::ostream*) const [with M = one_indiv_noZero_model_namespace::one_indiv_noZero_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  198 |   void write_array(boost::ecuyer1988&amp; rng, std::vector&lt;double&gt;&amp; theta,
      | </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-2870114b1a0.hpp:363: note:   by 'one_indiv_noZero_model_namespace::one_indiv_noZero_model::write_array'
  363 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | 
stan/src/stan/model/model_base_crtp.hpp:136: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, Eigen::VectorXd&amp;, Eigen::VectorXd&amp;, bool, bool, std::ostream*) const [with M = one_indiv_noZero_model_namespace::one_indiv_noZero_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; Eigen::VectorXd = Eigen::Matrix&lt;double, -1, 1&gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  136 |   void write_array(boost::ecuyer1988&amp; rng, Eigen::VectorXd&amp; theta,
      | 
C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-2870114b1a0.hpp:363: note:   by 'one_indiv_noZero_model_namespace::one_indiv_noZero_model::write_array'
  363 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | </code></pre>
</div>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">one_indiv_noZero</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb40-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nbirds;</span>
<span id="cb40-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nbirds] darrive;</span>
<span id="cb40-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> clutch;</span>
<span id="cb40-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> success;</span>
<span id="cb40-6">}</span>
<span id="cb40-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb40-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> logit_psuccess;</span>
<span id="cb40-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_avgclutch;</span>
<span id="cb40-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_b_date;</span>
<span id="cb40-11">}</span>
<span id="cb40-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb40-13">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nbirds] alpha = log_avgclutch + log_b_date * darrive;</span>
<span id="cb40-14">  success ~ binomial_logit(clutch, logit_psuccess);</span>
<span id="cb40-15">  logit_psuccess ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb40-16">  log_avgclutch ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb40-17">  log_b_date ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb40-18">  clutch ~ poisson_log(alpha);</span>
<span id="cb40-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// no zeros -- this normalizes the poisson density for a 0-truncated variable</span></span>
<span id="cb40-20">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">target +=</span> -log1m_exp(-exp(alpha));</span>
<span id="cb40-21">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">420</span>)</span>
<span id="cb41-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_some_birds_nonzero</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_avgclutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.4</span>),</span>
<span id="cb41-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_b_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb41-4">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb41-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_posterior_true</span>(one_indiv_noZero)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 1.5 seconds.
Chain 2 finished in 1.5 seconds.
Chain 3 finished in 1.6 seconds.
Chain 4 finished in 1.5 seconds.

All 4 chains finished successfully.
Mean chain execution time: 1.5 seconds.
Total execution time: 1.7 seconds.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<section id="truncating-using-a-different-syntax" class="level3">
<h3 class="anchored" data-anchor-id="truncating-using-a-different-syntax">Truncating using a different syntax</h3>
<p>The manual <a href="https://mc-stan.org/docs/stan-users-guide/truncated-data.html">uses a different syntax</a>. To write the equation above this way, I found I needed to make a few changes:</p>
<ul>
<li><code>poisson_log</code> has to be replaced with <code>poisson</code> and the <code>exp()</code> link function</li>
</ul>
<p>… that was actually the only change. It runs at the same speed as the previous way of writing it, and gets the same answer:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1">one_indiv_zerotrunc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb43-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-02-02-selection-on-plasticity/one_indiv_zerotrunc.stan"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>In file included from stan/src/stan/model/model_header.hpp:11:
stan/src/stan/model/model_base_crtp.hpp:198: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, std::vector&lt;int&gt;&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, bool, bool, std::ostream*) const [with M = one_indiv_zerotrunc_model_namespace::one_indiv_zerotrunc_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  198 |   void write_array(boost::ecuyer1988&amp; rng, std::vector&lt;double&gt;&amp; theta,
      | </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-287024f02b4b.hpp:369: note:   by 'one_indiv_zerotrunc_model_namespace::one_indiv_zerotrunc_model::write_array'
  369 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | 
stan/src/stan/model/model_base_crtp.hpp:136: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, Eigen::VectorXd&amp;, Eigen::VectorXd&amp;, bool, bool, std::ostream*) const [with M = one_indiv_zerotrunc_model_namespace::one_indiv_zerotrunc_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; Eigen::VectorXd = Eigen::Matrix&lt;double, -1, 1&gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  136 |   void write_array(boost::ecuyer1988&amp; rng, Eigen::VectorXd&amp; theta,
      | 
C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-287024f02b4b.hpp:369: note:   by 'one_indiv_zerotrunc_model_namespace::one_indiv_zerotrunc_model::write_array'
  369 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | </code></pre>
</div>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">one_indiv_zerotrunc</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb47-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb47-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nbirds;</span>
<span id="cb47-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nbirds] darrive;</span>
<span id="cb47-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> clutch;</span>
<span id="cb47-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> success;</span>
<span id="cb47-6">}</span>
<span id="cb47-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb47-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> logit_psuccess;</span>
<span id="cb47-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_avgclutch;</span>
<span id="cb47-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_b_date;</span>
<span id="cb47-11">}</span>
<span id="cb47-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb47-13">  success ~ binomial_logit(clutch, logit_psuccess);</span>
<span id="cb47-14">  logit_psuccess ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb47-15">  log_avgclutch ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb47-16">  log_b_date ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb47-17">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nbirds] alpha = log_avgclutch + log_b_date * darrive;</span>
<span id="cb47-18">  clutch ~ poisson(exp(alpha)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">T</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,];</span>
<span id="cb47-19">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">420</span>)</span>
<span id="cb48-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_some_birds_nonzero</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_avgclutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.4</span>),</span>
<span id="cb48-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_b_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb48-4">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb48-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_posterior_true</span>(one_indiv_zerotrunc)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 3 finished in 1.9 seconds.
Chain 4 finished in 2.0 seconds.
Chain 1 finished in 2.1 seconds.
Chain 2 finished in 2.0 seconds.

All 4 chains finished successfully.
Mean chain execution time: 2.0 seconds.
Total execution time: 2.2 seconds.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Two parameterizations diverged in a yellow wood
</div>
</div>
<div class="callout-body-container callout-body">
<p>These two ways of writing the model both work. Which to choose? Well, I was pleased with myself for manually normalizing the Poisson likelihood in the first model. However the second is clearer to the reader. In the first, it takes two lines of code – not even necessarily next to each other. In the second, the big <code>T</code> for <em>T</em>runcation indicates clearly what is going on. Code is communication; clarity wins.</p>
</div>
</div>
</section>
<section id="zero-inflated-binomial-success" class="level3">
<h3 class="anchored" data-anchor-id="zero-inflated-binomial-success">Zero inflated binomial success</h3>
<p>Once in a while, a nest will just be completely destroyed by, say, a predator. This has nothing to do with anything, probably, and is just a catastrophic Act of Weasel. Let’s imagine that some small proportion of the nests just die:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1">simulate_some_birds_nonzero_zeroinflated <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">57</span>, </span>
<span id="cb50-2">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_b_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">97</span>),</span>
<span id="cb50-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_avgclutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>),</span>
<span id="cb50-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logit_psuccess =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">84</span>),</span>
<span id="cb50-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">logit_pfail =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">qlogis</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)){</span>
<span id="cb50-6">  </span>
<span id="cb50-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate arrival dates -- two weeks before and after whatever the average is</span></span>
<span id="cb50-8">  darrive <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(nbirds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>()</span>
<span id="cb50-9">  </span>
<span id="cb50-10">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## simulate clutch sizes -- decrease  each day</span></span>
<span id="cb50-11">  clutch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(nbirds, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(log_avgclutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> log_b_date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>darrive))</span>
<span id="cb50-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># drop 0 nests</span></span>
<span id="cb50-13">  nonzero_clutch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(clutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb50-14">  n_laid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(nonzero_clutch)</span>
<span id="cb50-15">  </span>
<span id="cb50-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># simulate success -- among birds which laid at least 1 egg, there is a chance of failing completely</span></span>
<span id="cb50-17">  success_among_nonzero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n_laid,</span>
<span id="cb50-18">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> clutch[nonzero_clutch],</span>
<span id="cb50-19">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(logit_psuccess))</span>
<span id="cb50-20">  failed_nests <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(n_laid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plogis</span>(logit_pfail))</span>
<span id="cb50-21"></span>
<span id="cb50-22">  success_zi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> success_among_nonzero <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> failed_nests)</span>
<span id="cb50-23">  </span>
<span id="cb50-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># success &lt;- rbinom(nbirds, </span></span>
<span id="cb50-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                   size = clutch,</span></span>
<span id="cb50-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                   prob = plogis(logit_psuccess))</span></span>
<span id="cb50-27">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># failed_nests &lt;- rbinom(nbirds, size = 1, prob = plogis(logit_pfail))</span></span>
<span id="cb50-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># </span></span>
<span id="cb50-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># success_zi &lt;- success * (1 - failed_nests)</span></span>
<span id="cb50-30">  </span>
<span id="cb50-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb50-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data_list =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb50-33">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> n_laid,</span>
<span id="cb50-34">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">darrive =</span> darrive[nonzero_clutch], </span>
<span id="cb50-35">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clutch  =</span>  clutch[nonzero_clutch], </span>
<span id="cb50-36">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">success =</span> success_zi<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#[nonzero_clutch]</span></span>
<span id="cb50-37">    ),</span>
<span id="cb50-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tribble</span>(</span>
<span id="cb50-39">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>variable, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>true_value,</span>
<span id="cb50-40">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log_b_date"</span>, log_b_date,</span>
<span id="cb50-41">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log_avgclutch"</span>, log_avgclutch,</span>
<span id="cb50-42">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logit_psuccess"</span>, logit_psuccess,</span>
<span id="cb50-43">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"logit_pfail"</span>, logit_pfail</span>
<span id="cb50-44">    )</span>
<span id="cb50-45">  ))</span>
<span id="cb50-46">}</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1">one_indiv_ztrunc_zinf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cmdstanr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(</span>
<span id="cb51-2">  here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2023-02-02-selection-on-plasticity/one_indiv_ztrunc_zinf.stan"</span>))</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>In file included from stan/src/stan/model/model_header.hpp:11:
stan/src/stan/model/model_base_crtp.hpp:198: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, std::vector&lt;int&gt;&amp;, std::vector&lt;double, std::allocator&lt;double&gt; &gt;&amp;, bool, bool, std::ostream*) const [with M = one_indiv_ztrunc_zinf_model_namespace::one_indiv_ztrunc_zinf_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  198 |   void write_array(boost::ecuyer1988&amp; rng, std::vector&lt;double&gt;&amp; theta,
      | </code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-2870469c7a24.hpp:420: note:   by 'one_indiv_ztrunc_zinf_model_namespace::one_indiv_ztrunc_zinf_model::write_array'
  420 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | 
stan/src/stan/model/model_base_crtp.hpp:136: warning: 'void stan::model::model_base_crtp&lt;M&gt;::write_array(boost::random::ecuyer1988&amp;, Eigen::VectorXd&amp;, Eigen::VectorXd&amp;, bool, bool, std::ostream*) const [with M = one_indiv_ztrunc_zinf_model_namespace::one_indiv_ztrunc_zinf_model; boost::random::ecuyer1988 = boost::random::additive_combine_engine&lt;boost::random::linear_congruential_engine&lt;unsigned int, 40014, 0, 2147483563&gt;, boost::random::linear_congruential_engine&lt;unsigned int, 40692, 0, 2147483399&gt; &gt;; Eigen::VectorXd = Eigen::Matrix&lt;double, -1, 1&gt;; std::ostream = std::basic_ostream&lt;char&gt;]' was hidden [-Woverloaded-virtual=]
  136 |   void write_array(boost::ecuyer1988&amp; rng, Eigen::VectorXd&amp; theta,
      | 
C:/Users/UTILIS~1/AppData/Local/Temp/RtmpAv8s8z/model-2870469c7a24.hpp:420: note:   by 'one_indiv_ztrunc_zinf_model_namespace::one_indiv_ztrunc_zinf_model::write_array'
  420 |   write_array(RNG&amp; base_rng, std::vector&lt;double&gt;&amp; params_r, std::vector&lt;int&gt;&amp;
      | </code></pre>
</div>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1">one_indiv_ztrunc_zinf</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb55-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span>{</span>
<span id="cb55-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> nbirds;</span>
<span id="cb55-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nbirds] darrive;</span>
<span id="cb55-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> clutch;</span>
<span id="cb55-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[nbirds] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> success;</span>
<span id="cb55-6">}</span>
<span id="cb55-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb55-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> logit_psuccess;</span>
<span id="cb55-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_avgclutch;</span>
<span id="cb55-10">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> log_b_date;</span>
<span id="cb55-11">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span> logit_pfail;</span>
<span id="cb55-12">}</span>
<span id="cb55-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb55-14">  logit_pfail ~ normal(-<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>);</span>
<span id="cb55-15">  logit_psuccess ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb55-16">  log_avgclutch ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb55-17">  log_b_date ~ normal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>);</span>
<span id="cb55-18"></span>
<span id="cb55-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Eggs laid -- at least one</span></span>
<span id="cb55-20">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>[nbirds] alpha = log_avgclutch + log_b_date * darrive;</span>
<span id="cb55-21">  clutch ~ poisson(exp(alpha)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">T</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,];</span>
<span id="cb55-22"></span>
<span id="cb55-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// nestling success</span></span>
<span id="cb55-24">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (n <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:nbirds) {</span>
<span id="cb55-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (success[n] == <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb55-26">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">target +=</span> log_sum_exp(</span>
<span id="cb55-27">        log_inv_logit(logit_pfail),</span>
<span id="cb55-28">        log1m_inv_logit(logit_pfail) + binomial_logit_lpmf(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> | clutch[n], logit_psuccess)</span>
<span id="cb55-29">        );</span>
<span id="cb55-30">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb55-31">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">target +=</span> log1m_inv_logit(logit_pfail) + binomial_logit_lpmf(success[n] | clutch[n], logit_psuccess);</span>
<span id="cb55-32">    }</span>
<span id="cb55-33">  }</span>
<span id="cb55-34"></span>
<span id="cb55-35">}</span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">477</span>)</span>
<span id="cb56-2">some_zi_birds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_some_birds_nonzero_zeroinflated</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_avgclutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.4</span>),</span>
<span id="cb56-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">log_b_date =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>),</span>
<span id="cb56-4">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nbirds =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>) </span>
<span id="cb56-5"></span>
<span id="cb56-6">some_zi_birds<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb56-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_posterior_true</span>(one_indiv_ztrunc_zinf)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Running MCMC with 4 parallel chains...

Chain 1 finished in 5.0 seconds.
Chain 4 finished in 5.1 seconds.
Chain 2 finished in 5.3 seconds.
Chain 3 finished in 5.5 seconds.

All 4 chains finished successfully.
Mean chain execution time: 5.2 seconds.
Total execution time: 5.6 seconds.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>I initially failed to recover the parameter for <code>logit_pfail</code>. Here I some things I learned:</p>
<ul>
<li>Simulating zero-inflated numbers can be tricky! I flipped back and forth between simulating 0-inflation for all nests, and simulating for only those with at least 1 egg. In retrospect, it is clear that these are equivalent. There are two independent things here: the probability of a clutch having 0 eggs and the probability of a 0 coming from the zero-inflated binomial.</li>
<li>this zero-inflated model is quite <em>sensitive to the prior</em>. That’s because there are not very many zeros being inflated: in my simulation at least, failed nests are rare and success is naturally low. it would be pretty important to decide in advance if sudden nest failure (e.g.&nbsp;by predation) is rare or common</li>
</ul>


</section>
</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2023-02-02-selection-on-plasticity/</guid>
  <pubDate>Thu, 02 Feb 2023 05:00:00 GMT</pubDate>
</item>
<item>
  <title>The evolution of plasticity</title>
  <dc:creator>Andrew MacDonald and Audrey Tremblay</dc:creator>
  <link>https://aammd.github.io/posts/2022-11-23-evolution-of-plasticity/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tidyverse.quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## functions to make models and so on</span></span>
<span id="cb1-9">simulate_many_moms <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop_average_dponte =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">138</span>,</span>
<span id="cb1-10">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pop_average_csize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb1-11">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mom_quality_max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,</span>
<span id="cb1-12">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quality_on_dponte =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-13">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quality_on_csize =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb1-14">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_females =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>,</span>
<span id="cb1-15">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lifespan =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb1-16">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp_range  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)) {</span>
<span id="cb1-17"></span>
<span id="cb1-18">  general_temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(lifespan, temp_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> temp_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-19"></span>
<span id="cb1-20">  general_temp_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> general_temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(general_temp)</span>
<span id="cb1-21"></span>
<span id="cb1-22">  mom_qualities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(n_females, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb1-23"></span>
<span id="cb1-24">  many_moms_temperature <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>lifespan,</span>
<span id="cb1-25">                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">idF1 =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>n_females) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mom_quality =</span> mom_qualities[idF1],</span>
<span id="cb1-27">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">general_temp =</span> general_temp[year],</span>
<span id="cb1-28">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">general_temp_c =</span> general_temp_c[year],</span>
<span id="cb1-29">           <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## adding the biology</span></span>
<span id="cb1-30">           <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Effect of temperature -- does it depend on quality? let's say that it DOES (for now)</span></span>
<span id="cb1-31">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effet_temp_dponte_qual =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>mom_quality,</span>
<span id="cb1-32">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effet_temp_csize_qual =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(mom_quality),</span>
<span id="cb1-33">           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># csize</span></span>
<span id="cb1-34">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mom_avg_csize =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(pop_average_csize) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  quality_on_csize<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(mom_quality),</span>
<span id="cb1-35">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp_avg_csize =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(mom_avg_csize <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> effet_temp_csize_qual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>general_temp_c),</span>
<span id="cb1-36">           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dponte</span></span>
<span id="cb1-37">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mom_avg_dponte =</span> pop_average_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> quality_on_dponte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>mom_quality,</span>
<span id="cb1-38">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp_avg_dponte =</span> mom_avg_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> effet_temp_dponte_qual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>general_temp_c,</span>
<span id="cb1-39">           <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## observations</span></span>
<span id="cb1-40">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_csize =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> temp_avg_csize),</span>
<span id="cb1-41">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_dponte =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> temp_avg_dponte, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>()</span>
<span id="cb1-42">    )</span>
<span id="cb1-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(many_moms_temperature)</span>
<span id="cb1-44">}</span>
<span id="cb1-45"></span>
<span id="cb1-46"></span>
<span id="cb1-47">brms_dponte_csize <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(many_moms_temperature) {</span>
<span id="cb1-48">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## define formulae</span></span>
<span id="cb1-49">  csize_model_bf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(obs_csize <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> general_temp_c <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> general_temp_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>f<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>idF1),</span>
<span id="cb1-50">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">poisson</span>())</span>
<span id="cb1-51"></span>
<span id="cb1-52">  dponte_model_bf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(obs_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> general_temp_c <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> general_temp_c<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>f<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span>idF1),</span>
<span id="cb1-53">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gaussian</span>())</span>
<span id="cb1-54"></span>
<span id="cb1-55"></span>
<span id="cb1-56">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## set priors</span></span>
<span id="cb1-57"></span>
<span id="cb1-58">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## run full model</span></span>
<span id="cb1-59">  full_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(csize_model_bf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> dponte_model_bf,</span>
<span id="cb1-60">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> many_moms_temperature,</span>
<span id="cb1-61">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-62">}</span></code></pre></div>
</div>
<section id="study-question" class="level2">
<h2 class="anchored" data-anchor-id="study-question">Study question</h2>
<p>Phenotypic plasiticity is the</p>
</section>
<section id="data-simulation" class="level2">
<h2 class="anchored" data-anchor-id="data-simulation">Data simulation</h2>
<p>RARE to have more than two years per female</p>
<p>let’s start with one female</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-2">avg_csize <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">lifespan <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">general_temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(lifespan, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8">general_temp_c <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> general_temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(general_temp)</span></code></pre></div>
</div>
</section>
<section id="fecundity" class="level2">
<h2 class="anchored" data-anchor-id="fecundity">fecundity</h2>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Ctext%7Beggs%7D%20&amp;%5Csim%20%5Ctext%7BPoisson%7D(e%5E%7B%5Cbeta_0%20+%20%5Cbeta_1*(x%20-%20%5Cbar%7Bx%7D)%7D)%0A%5Cend%7Balign%7D%0A"></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">effet_temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">one_bird <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>lifespan,</span>
<span id="cb3-4">       general_temp,</span>
<span id="cb3-5">       general_temp_c,</span>
<span id="cb3-6">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expected_clutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(avg_csize) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> effet_temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> general_temp_c,</span>
<span id="cb3-7">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">observed_clutch =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(year), </span>
<span id="cb3-8">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(expected_clutch)))</span>
<span id="cb3-9"></span>
<span id="cb3-10">one_bird</span></code></pre></div>
</div>
<p>Make a simple model to measure</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(observed_clutch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> general_temp_c, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> one_bird))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">one_bird <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> observed_clutch)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
</div>
</section>
<section id="date-of-laying" class="level2">
<h2 class="anchored" data-anchor-id="date-of-laying">Date of laying</h2>
<p>When do birds lay eggs?</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">avg_dponte <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">138</span></span>
<span id="cb6-2"></span>
<span id="cb6-3">effet_temp_dponte <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb6-4"></span>
<span id="cb6-5">one_bird_dponte <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>lifespan,</span>
<span id="cb6-6">       general_temp,</span>
<span id="cb6-7">       general_temp_c,</span>
<span id="cb6-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expected_dponte =</span> avg_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> effet_temp_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> general_temp_c,</span>
<span id="cb6-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">observed_dponte =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(year), </span>
<span id="cb6-10">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> expected_dponte,</span>
<span id="cb6-11">                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">one_bird_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span> observed_dponte)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(observed_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> general_temp_c, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> one_bird_dponte))</span></code></pre></div>
</div>
</section>
<section id="combine-the-two" class="level2">
<h2 class="anchored" data-anchor-id="combine-the-two">combine the two</h2>
<p>Birds which lay earlier also lay larger eggs, possibly because they are High Quality Moms.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## population averages</span></span>
<span id="cb8-2">pop_average_dponte <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">138</span></span>
<span id="cb8-3">pop_average_csize <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Effect of quality</span></span>
<span id="cb8-6">mom_quality <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb8-7">quality_on_dponte <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-8">quality_on_csize <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span></code></pre></div>
</div>
<p>let’s observe five years for the high-quality Mom:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">quality_effects <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb9-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>lifespan,</span>
<span id="cb9-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mom_quality =</span> mom_quality,</span>
<span id="cb9-4">  general_temp,</span>
<span id="cb9-5">  general_temp_c,</span>
<span id="cb9-6">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Effect of temperature -- does it depend on quality? let's say that it DOES (for now) </span></span>
<span id="cb9-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effet_temp_dponte_qual =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>mom_quality,</span>
<span id="cb9-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">effet_temp_csize_qual =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(mom_quality),</span>
<span id="cb9-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># csize</span></span>
<span id="cb9-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mom_avg_csize =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(pop_average_csize) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  quality_on_csize<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(mom_quality),</span>
<span id="cb9-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp_avg_csize =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(mom_avg_csize <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> effet_temp_csize_qual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>general_temp_c),</span>
<span id="cb9-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dponte</span></span>
<span id="cb9-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mom_avg_dponte =</span> pop_average_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> quality_on_dponte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>mom_quality,</span>
<span id="cb9-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">temp_avg_dponte =</span> mom_avg_dponte <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> effet_temp_dponte_qual<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>general_temp_c,</span>
<span id="cb9-15">  <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## observations</span></span>
<span id="cb9-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_csize =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rpois</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> temp_avg_csize),</span>
<span id="cb9-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_dponte =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(year), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> temp_avg_dponte, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>()</span>
<span id="cb9-18">)</span></code></pre></div>
</div>
<p>Some of these values are unreasonable! we can adjust later</p>
<div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">quality_effects <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_csize)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb10-4"></span>
<span id="cb10-5">quality_effects <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb10-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_dponte)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span></code></pre></div>
<div class="cell quarto-layout-panel">

</div>
</div>
</section>
<section id="multiple-females" class="level2">
<h2 class="anchored" data-anchor-id="multiple-females">Multiple females</h2>
<p>We can repeat this process for multiple females at once! let’s wrap it in a function to make it easier to work with.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">simulate_many_moms</span>
<span id="cb11-2">many_moms_temperature <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_many_moms</span>()</span></code></pre></div>
</div>
<p>let’s plot it!</p>
<div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">many_moms_temperature <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_dponte)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb12-4"></span>
<span id="cb12-5">many_moms_temperature <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_dponte, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> idF1)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
<div class="cell quarto-layout-panel">

</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">many_moms_temperature <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_csize)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb13-4"></span>
<span id="cb13-5">many_moms_temperature <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> general_temp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_csize, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> idF1)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span></code></pre></div>
</div>
</section>
<section id="model-in-brms" class="level2">
<h2 class="anchored" data-anchor-id="model-in-brms">model in brms</h2>
<p>The model above describes a situation where female swallows have some underlying trait (“quality”). This trait determines if this female will be above or below the rest of her population in two different outcomes: the timeing of her laying and the size of her clutch. This is a model structure that can’t be easily fit in <code>lme4</code> at least as far as I know. However we can specify it in a very straightforward way using <code>brms</code>:</p>
</section>
<section id="fitness" class="level2">
<h2 class="anchored" data-anchor-id="fitness">fitness</h2>
</section>
<section id="notes" class="level2">
<h2 class="anchored" data-anchor-id="notes">notes</h2>
<p>very small sample sizes per female – experiment with this (2 years or more)</p>
<p>The data are 0-truncated: only nesting females are measured!</p>
<p>I think it is particularly interesting that the data are already conditioned on reproduction. that is, females who fail to reproduce at all don’t get included in the dataset. What effects could this have on our ability to detect interactions?</p>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <category>brms</category>
  <category>simulation</category>
  <guid>https://aammd.github.io/posts/2022-11-23-evolution-of-plasticity/</guid>
  <pubDate>Wed, 23 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Simple nonlinear growth</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2022-11-21-growth-curve-known-age/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressPackageStartupMessages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(brms))</span></code></pre></div>
</div>
<section id="growth-when-you-know-the-age" class="level2">
<h2 class="anchored" data-anchor-id="growth-when-you-know-the-age">Growth when you know the age</h2>
<p>We’re doing a lot of work with growth equations these days! This is how to use <code>brms</code> to fit the growth of an animal when we know:</p>
<ul>
<li><p>the birth year</p></li>
<li><p>size at each year (measured as the length of a leg)</p></li>
<li><p>time</p></li>
</ul>
<p>We’ll start with the classic VB growth equation that has been in several other posts:</p>
<p><span id="eq-vb"><img src="https://latex.codecogs.com/png.latex?%0AL_t%20=%20L_0e%5E%7B-rt%7D%20+%20L_%5Cinfty(1%20-%20e%5E%7B-rt%7D)%0A%5Ctag%7B1%7D"></span></p>
<p>The model we use will resemble the others as well:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0A%5Ctext%7BMeasurements%7D%20&amp;%5Csim%20%5Ctext%7BNormal%7D(L_t,%20%5Csigma_%7Bmeas%7D)%5C%5C%0AL_t%20&amp;=%20L_0e%5E%7B-rt%7D%20+%20L_%5Cinfty(1%20-%20e%5E%7B-rt%7D)%20%5C%5C%0AL_0%20&amp;%5Csim%20...%5C%5C%0AL_%5Cinfty%20&amp;%5Csim%20...%5C%5C%0Ar%20&amp;%5Csim%20...%0A%5Cend%7Balign%7D%0A"></p>
<section id="simulating-data" class="level3">
<h3 class="anchored" data-anchor-id="simulating-data">Simulating data</h3>
<p>I’m starting off with a function to simulate data; this will make it easy to repeat experiments with this model.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">simulate_one_growth_known_age <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(age, r,</span>
<span id="cb2-2">                                          Lmax,</span>
<span id="cb2-3">                                          size_at_first,</span>
<span id="cb2-4">                                          sd_obs){</span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>age,</span>
<span id="cb2-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> size_at_first <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> age) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> Lmax <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> age)),</span>
<span id="cb2-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs_size =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(age), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> size, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> sd_obs))</span>
<span id="cb2-8">}</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">one_animal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulate_one_growth_known_age</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Lmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">550</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size_at_first =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">277</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">r =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd_obs =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3">one_animal <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> age, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_size)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> size)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Size"</span>) </span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://aammd.github.io/posts/2022-11-21-growth-curve-known-age/index_files/figure-html/one_animal_plot-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Growth curve for a single individual. The curved line is the true size, and the dots are observations around it. The observations are taken in the field while the semi-tranquilized animal is struggling, so they show some slight variation.</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="nonlinear-modelling-with-brms" class="level2">
<h2 class="anchored" data-anchor-id="nonlinear-modelling-with-brms">Nonlinear modelling with BRMS</h2>
<p>There are three steps to defining and elementary model with <code>brms</code>:</p>
<ol type="1">
<li>write the model</li>
<li>write down some priors</li>
<li>condition the model on data</li>
</ol>
<p>In practice there are many more steps, including prior predictive checks to make sure our priors make sense. In this post I’m going to focus on the mechanistic how-to of fitting a nonlinear model in <code>brms</code> and I’ll come back to Prior Predictive checks, which I love, in another post.</p>
<p>First we define the model, here we need to indicate what are parameters by doing a <code>~1</code> after each. Yes it is a formula with multiple little formulae inside it! Feel the power flow through you.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">vb_form <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bf</span>(obs_size <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> startsize <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>growthrate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> age) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> maxsize <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>growthrate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> age)),</span>
<span id="cb4-2">              startsize <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, </span>
<span id="cb4-3">              growthrate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-4">              maxsize <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-5">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nl =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb4-6">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gaussian</span>())</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_prior</span>(vb_form, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> one_animal)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>                 prior class      coef group resp dpar      nlpar lb ub
 student_t(3, 0, 22.6) sigma                                       0   
                (flat)     b                           growthrate      
                (flat)     b Intercept                 growthrate      
                (flat)     b                              maxsize      
                (flat)     b Intercept                    maxsize      
                (flat)     b                            startsize      
                (flat)     b Intercept                  startsize      
       source
      default
      default
 (vectorized)
      default
 (vectorized)
      default
 (vectorized)</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">vb_prior <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exponential</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">class =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sigma"</span>),</span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nlpar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"growthrate"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lb =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">550</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nlpar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"maxsize"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lb =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb6-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prior</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nlpar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"startsize"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lb =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb6-6">)</span>
<span id="cb6-7"></span>
<span id="cb6-8">vb_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> vb_form,</span>
<span id="cb6-9">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> vb_prior, </span>
<span id="cb6-10">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> one_animal, </span>
<span id="cb6-11">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">chains =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb6-12">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts/2022-11-21-growth-curve-known-age/vb_model.rds"</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">one_animal <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-2">  tidybayes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_predicted_rvars</span>(vb_model) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> age, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist =</span> .prediction)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat_dist_lineribbon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> age, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> obs_size), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inherit.aes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) </span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using the `size` aesthietic with geom_ribbon was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Unknown or uninitialised column: `linewidth`.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Using the `size` aesthietic with geom_line was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning: Unknown or uninitialised column: `linewidth`.
Unknown or uninitialised column: `linewidth`.</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2022-11-21-growth-curve-known-age/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(vb_model)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> Family: gaussian 
  Links: mu = identity; sigma = identity 
Formula: obs_size ~ startsize * exp(-growthrate * age) + maxsize * (1 - exp(-growthrate * age)) 
         startsize ~ 1
         growthrate ~ 1
         maxsize ~ 1
   Data: one_animal (Number of observations: 10) 
  Draws: 2 chains, each with iter = 2000; warmup = 1000; thin = 1;
         total post-warmup draws = 2000

Population-Level Effects: 
                     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS
startsize_Intercept    275.83      4.47   266.81   284.49 1.00     1050
growthrate_Intercept     0.66      0.03     0.61     0.72 1.00      918
maxsize_Intercept      551.62      2.43   546.94   556.62 1.00      814
                     Tail_ESS
startsize_Intercept       866
growthrate_Intercept      796
maxsize_Intercept         765

Family Specific Parameters: 
      Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS
sigma     4.51      0.96     3.05     6.76 1.00      899      951

Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS
and Tail_ESS are effective sample size measures, and Rhat is the potential
scale reduction factor on split chains (at convergence, Rhat = 1).</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2022-11-21-growth-curve-known-age/</guid>
  <pubDate>Mon, 21 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Fitting a multispecies functional response in Stan</title>
  <dc:creator>Andrew MacDonald &amp; Ben Mercier</dc:creator>
  <link>https://aammd.github.io/posts/2022-11-11-multispecies-functional-response/</link>
  <description><![CDATA[ 




<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(targets)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidybayes)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(cmdstanr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(stantargets)</span></code></pre></div>
</div>
<section id="the-equation" class="level2">
<h2 class="anchored" data-anchor-id="the-equation">The equation</h2>
<p>Predators eat prey. They eat prey faster when there is more prey – though they do have to slow down to catch, kill, and chew.<sup>1</sup></p>
<p>If a predator can eat multiple things, then they might end up eating less of any one prey because they spread their kills around among all their prey. In the very simplest case, they do this in proportion to how frequent the different prey are – the predator has no preference, it just goes around randomly and eats what it finds</p>
<p>The classic OG version of this model comes from <span class="citation" data-cites="holling1966">Holling (1966)</span></p>
<p><span id="eq-type2"><img src="https://latex.codecogs.com/png.latex?%0AA%20=%20%5Cfrac%7B%5Calpha%20N%7D%7B1%20+%20h%5Calpha%20N%7D%0A%5Ctag%7B1%7D"></span></p>
<p>where</p>
<ul>
<li>N is the number of prey</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Calpha"> is the attack rate</li>
<li><img src="https://latex.codecogs.com/png.latex?h"> is the handling time</li>
</ul>
<p>And altogether you get the number of attacks <img src="https://latex.codecogs.com/png.latex?A"> on prey in some unit of time.</p>
</section>
<section id="multiple-species" class="level2">
<h2 class="anchored" data-anchor-id="multiple-species">multiple species</h2>
<p>Suppose you have more than one species in this system. You could then rewrite Equation&nbsp;1 to allow multiple animals to be included in the predation:</p>
<p><span id="eq-mstype2"><img src="https://latex.codecogs.com/png.latex?%0AA_i%20=%20%5Cfrac%7B%5Calpha%20N_i%7D%7B1%20+%20h%5Calpha%20%5Csum_%7Bj%20=%201%7D%5Es%20N_j%7D%0A%5Ctag%7B2%7D"></span></p>
<p>here <img src="https://latex.codecogs.com/png.latex?%5Csum_%7Bj%20=%201%7D%5Es%20N_j"> means the sum over the abundances of all the prey. The subscript <img src="https://latex.codecogs.com/png.latex?i"> just means that we are talking about one particular prey, which we label <img src="https://latex.codecogs.com/png.latex?i">. This prey is included in the summation in the denominator.</p>
<p>It’s common to consider that different prey species might be attacked or handled at different rates <span class="citation" data-cites="smith2020">(Smith and Smith 2020)</span> <span class="citation" data-cites="smout2010a">(Smout et al. 2010)</span></p>
</section>
<section id="one-species-model" class="level2">
<h2 class="anchored" data-anchor-id="one-species-model">One species model</h2>
<p>Let’s begin with the classic model and add complexity later.<br>
I think it helps to think of predation as a binomial trial: out of so many prey individuals (<img src="https://latex.codecogs.com/png.latex?N">), some of them get attacked (<img src="https://latex.codecogs.com/png.latex?A">).</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Balign%7D%0AA%20&amp;%5Csim%20%5Ctext%7BBinomial%7D(p,%20N)%20%5C%5C%0Ap%20&amp;=%20%5Cfrac%7B%5Calpha%7D%7B1%20+%20h%5Calpha%20N%7D%20%5C%5C%0A%5Calpha%20&amp;%5Csim%20%5Ctext%7BBeta%7D(2,%204)%20%5C%5C%0Ah%20&amp;%5Csim%20%5Ctext%7BLogNormal%7D(0,1)%0A%5Cend%7Balign%7D%0A"> some things to note:</p>
<ul>
<li><p>the <img src="https://latex.codecogs.com/png.latex?N"> now appears in the Binomial distribution as a separate parameter, not in the expression for the probability of attack. Remember that the mean of a Binomial is <img src="https://latex.codecogs.com/png.latex?pN">, so in this case we will come back to Equation&nbsp;1</p></li>
<li><p>both the parameters have constraints: <img src="https://latex.codecogs.com/png.latex?a"> cannot be outside of <img src="https://latex.codecogs.com/png.latex?%5B0,1%5D">, and <img src="https://latex.codecogs.com/png.latex?h"> cannot be negative. We choose priors that respect these constraints!</p></li>
</ul>
<p>Let’s translate this into Stan and take a look:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">simple_type2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cmdstan_model</span>(here<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"posts"</span>, </span>
<span id="cb2-2">                                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-11-11-multispecies-functional-response"</span>,</span>
<span id="cb2-3">                                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"simple_type2.stan"</span>))</span>
<span id="cb2-4"></span>
<span id="cb2-5">simple_type2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode stan code-with-copy"><code class="sourceCode stan"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// simple predator-prey functional response for a binomial density</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">data</span> {</span>
<span id="cb3-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; N;</span>
<span id="cb3-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; attacks;</span>
<span id="cb3-5">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">array</span>[N] <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; densities;</span>
<span id="cb3-6">}</span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">parameters</span> {</span>
<span id="cb3-8">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt; a;</span>
<span id="cb3-9">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">real</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>&gt; h;</span>
<span id="cb3-10">}</span>
<span id="cb3-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">transformed parameters</span>{</span>
<span id="cb3-12">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">vector</span>&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lower</span>=<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">upper</span> = <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>&gt;[N] prob_attack;</span>
<span id="cb3-13">  prob_attack = a * inv(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> + a * h * to_vector(densities));</span>
<span id="cb3-14">}</span>
<span id="cb3-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">model</span> {</span>
<span id="cb3-16">  a ~ beta(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>);</span>
<span id="cb3-17">  h ~ lognormal(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>);</span>
<span id="cb3-18">  attacks ~ binomial(densities, prob_attack);</span>
<span id="cb3-19">}</span></code></pre></div>
</div>
</div>
<p>the code above is mostly a direct translation of the equations. One technique is worth noting: the types of the input vectors. Binomial distributions deal in integers, and so we define <code>densities</code> and <code>attacks</code> as integers. However, in order to vectorize our calculations, we massage the input data from an array of integers to a vector of real numbers using <code>to_vector</code>. This highlights an important difference between R and Stan. Stan requires careful definition of the types of data, where R is much more informal.</p>
</section>
<section id="simulate-from-a-model" class="level2">
<h2 class="anchored" data-anchor-id="simulate-from-a-model">simulate from a model:</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">generate_one_spp_type_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(){</span>
<span id="cb4-2">  true_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb4-3">  true_h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-4">  densities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-5">  prob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> true_a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> true_a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> true_h <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> densities)</span>
<span id="cb4-6">  attacks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(densities), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> densities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> prob)</span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_a =</span> true_a,</span>
<span id="cb4-8">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_h =</span> true_h,</span>
<span id="cb4-9">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">densities =</span> densities,</span>
<span id="cb4-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attacks =</span> attacks, </span>
<span id="cb4-11">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> prob)</span>
<span id="cb4-12">}</span>
<span id="cb4-13"></span>
<span id="cb4-14">one_spp_sim <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_one_spp_type_2</span>()</span>
<span id="cb4-15"></span>
<span id="cb4-16">one_spp_sim</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>$true_a
[1] 0.7568304

$true_h
[1] 0.1605559

$densities
 [1]   5  10  15  20  25  30  35  40  45  50  55  60  65  70  75  80  85  90  95
[20] 100

$attacks
 [1] 2 3 4 5 7 6 3 6 3 7 6 4 5 2 8 6 4 5 5 6

$prob
 [1] 0.47079213 0.34166316 0.26812246 0.22063275 0.18743446 0.16292010
 [7] 0.14407649 0.12913995 0.11700947 0.10696221 0.09850396 0.09128539
[13] 0.08505256 0.07961647 0.07483352 0.07059268 0.06680672 0.06340618
[19] 0.06033505 0.05754769</code></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(one_spp_sim, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(densities), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> densities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> prob))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 4 5 3 3 8 3 5 5 4 8 7 7 5 3 7 2 5 7 3 6</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(one_spp_sim, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(densities, prob<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>densities))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2022-11-11-multispecies-functional-response/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid" width="672"></p>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span>(one_spp_sim, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(densities, attacks))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://aammd.github.io/posts/2022-11-11-multispecies-functional-response/index_files/figure-html/unnamed-chunk-1-2.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>try it in targets:</p>
<div class="cell" data-tar_globals="true" data-tar_interactive="false">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_option_set</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">packages =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmdstanr"</span>,</span>
<span id="cb10-3">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidybayes"</span>, </span>
<span id="cb10-4">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stantargets"</span>))</span>
<span id="cb10-5"></span>
<span id="cb10-6">generate_one_spp_type_too <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(){</span>
<span id="cb10-7">  true_a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbeta</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb10-8">  true_h <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stats<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rlnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb10-9">  densities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">from =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">to =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb10-10">  prob <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> true_a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> true_a <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> true_h <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> densities)</span>
<span id="cb10-11">  attacks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbinom</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(densities), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> densities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> prob)</span>
<span id="cb10-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb10-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(attacks),</span>
<span id="cb10-14">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_a =</span> true_a,</span>
<span id="cb10-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">true_h =</span> true_h,</span>
<span id="cb10-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">densities =</span> densities,</span>
<span id="cb10-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">attacks =</span> attacks, </span>
<span id="cb10-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prob =</span> prob</span>
<span id="cb10-19">    )</span>
<span id="cb10-20">}</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Establish _targets.R and _targets_r/globals/some-globals.R.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb12-2">  stantargets<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_stan_mcmc</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> one_spp, </span>
<span id="cb12-3">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stan_files =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"simple_type2.stan"</span>,</span>
<span id="cb12-4">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">generate_one_spp_type_too</span>(),</span>
<span id="cb12-5">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stdout =</span> R.utils<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nullfile</span>(),</span>
<span id="cb12-6">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stderr =</span> R.utils<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nullfile</span>()</span>
<span id="cb12-7">  )</span>
<span id="cb12-8">)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Establish _targets.R and _targets_r/targets/run_one_model.R.</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_visnetwork</span>()</span></code></pre></div>
<div class="cell-output-display">
<div class="visNetwork html-widget html-fill-item-overflow-hidden html-fill-item" id="htmlwidget-6eec3939e62a645d29b4" style="width:100%;height:464px;"></div>
<script type="application/json" data-for="htmlwidget-6eec3939e62a645d29b4">{"x":{"nodes":{"name":["one_spp_data","one_spp_diagnostics_simple_type2","one_spp_draws_simple_type2","one_spp_file_simple_type2","one_spp_mcmc_simple_type2","one_spp_summary_simple_type2","generate_one_spp_type_too"],"type":["stem","stem","stem","stem","stem","stem","function"],"status":["uptodate","uptodate","uptodate","uptodate","uptodate","uptodate","uptodate"],"seconds":[0.63,0.02,0,0.01,3.69,0.58,null],"bytes":[316,86599,747708,470,716922,3018,null],"branches":[null,null,null,null,null,null,null],"label":["one_spp_data","one_spp_diagnostics_simple_type2","one_spp_draws_simple_type2","one_spp_file_simple_type2","one_spp_mcmc_simple_type2","one_spp_summary_simple_type2","generate_one_spp_type_too"],"color":["#354823","#354823","#354823","#354823","#354823","#354823","#354823"],"id":["one_spp_data","one_spp_diagnostics_simple_type2","one_spp_draws_simple_type2","one_spp_file_simple_type2","one_spp_mcmc_simple_type2","one_spp_summary_simple_type2","generate_one_spp_type_too"],"level":[2,4,4,1,3,4,1],"shape":["dot","dot","dot","dot","dot","dot","triangle"]},"edges":{"from":["one_spp_mcmc_simple_type2","one_spp_data","one_spp_mcmc_simple_type2","one_spp_data","one_spp_file_simple_type2","generate_one_spp_type_too","one_spp_mcmc_simple_type2"],"to":["one_spp_diagnostics_simple_type2","one_spp_summary_simple_type2","one_spp_summary_simple_type2","one_spp_mcmc_simple_type2","one_spp_mcmc_simple_type2","one_spp_data","one_spp_draws_simple_type2"],"arrows":["to","to","to","to","to","to","to"]},"nodesToDataframe":true,"edgesToDataframe":true,"options":{"width":"100%","height":"100%","nodes":{"shape":"dot","physics":false},"manipulation":{"enabled":false},"edges":{"smooth":{"type":"cubicBezier","forceDirection":"horizontal"}},"physics":{"stabilization":false},"interaction":{"zoomSpeed":1},"layout":{"hierarchical":{"enabled":true,"direction":"LR"}}},"groups":null,"width":null,"height":null,"idselection":{"enabled":false,"style":"width: 150px; height: 26px","useLabels":true,"main":"Select by id"},"byselection":{"enabled":false,"style":"width: 150px; height: 26px","multiple":false,"hideColor":"rgba(200,200,200,0.5)","highlight":false},"main":{"text":"","style":"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:20px;text-align:center;"},"submain":null,"footer":null,"background":"rgba(0, 0, 0, 0)","highlight":{"enabled":true,"hoverNearest":false,"degree":{"from":1,"to":1},"algorithm":"hierarchical","hideColor":"rgba(200,200,200,0.5)","labelOnly":true},"collapse":{"enabled":true,"fit":false,"resetHighlight":true,"clusterOptions":null,"keepCoord":true,"labelSuffix":"(cluster)"},"legend":{"width":0.2,"useGroups":false,"position":"right","ncol":1,"stepX":100,"stepY":100,"zoom":true,"nodes":{"label":["Up to date","Stem","Function"],"color":["#354823","#899DA4","#899DA4"],"shape":["dot","dot","triangle"]},"nodesToDataframe":true},"tooltipStay":300,"tooltipStyle":"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);"},"evals":[],"jsHooks":[]}</script>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar_make</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>✔ skip target one_spp_data
✔ skip target one_spp_file_simple_type2
✔ skip target one_spp_mcmc_simple_type2
✔ skip target one_spp_diagnostics_simple_type2
✔ skip target one_spp_summary_simple_type2
✔ skip target one_spp_draws_simple_type2
✔ skip pipeline [0.17 seconds]</code></pre>
</div>
</div>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-holling1966" class="csl-entry">
Holling, C. S. 1966. <span>“The Functional Response of Invertebrate Predators to Prey Density.”</span> <em>Memoirs of the Entomological Society of Canada</em> 98 (S48): 5–86. <a href="https://doi.org/10.4039/entm9848fv">https://doi.org/10.4039/entm9848fv</a>.
</div>
<div id="ref-smith2020" class="csl-entry">
Smith, Brian E., and Laurel A. Smith. 2020. <span>“Multispecies Functional Responses Reveal Reduced Predation at High Prey Densities and Varied Responses Among and Within Trophic Groups.”</span> <em>Fish and Fisheries</em> 21 (5): 891–905. <a href="https://doi.org/10.1111/faf.12468">https://doi.org/10.1111/faf.12468</a>.
</div>
<div id="ref-smout2010a" class="csl-entry">
Smout, Sophie, Christian Asseburg, Jason Matthiopoulos, Carmen Fernández, Stephen Redpath, Simon Thirgood, and John Harwood. 2010. <span>“The Functional Response of a Generalist Predator.”</span> <em>PLOS ONE</em> 5 (5): e10761. <a href="https://doi.org/10.1371/journal.pone.0010761">https://doi.org/10.1371/journal.pone.0010761</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Things that eat plants have to do the same; replace “kill” with “peel” etc.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2022-11-11-multispecies-functional-response/</guid>
  <pubDate>Fri, 11 Nov 2022 05:00:00 GMT</pubDate>
</item>
<item>
  <title>Updating R and your R packages</title>
  <dc:creator>Andrew MacDonald</dc:creator>
  <link>https://aammd.github.io/posts/2022-11-24-updating-R-and-packages/</link>
  <description><![CDATA[ 




<section id="doctor-update-thyself" class="level2">
<h2 class="anchored" data-anchor-id="doctor-update-thyself">Doctor, update thyself</h2>
<p>I teach a few R workshops a year, and I often send out the typical “make sure R and Rstudio is up-to-date, using <a href="https://cran.r-project.org/">these</a> helpful <a href="https://posit.co">links</a>. And then of course the workshop starts, and all the class notices that I myself have not updated R in .. 7 months.</p>
<p>When I do decide to do it, I find I often need to google the correct procedure. In the spirit of this blog, here is a short note detailing the process, inspired by this <a href="https://stackoverflow.com/questions/13656699/update-r-using-rstudio">stackoverflow note</a></p>


</section>

 ]]></description>
  <category>UdeS</category>
  <category>stan</category>
  <guid>https://aammd.github.io/posts/2022-11-24-updating-R-and-packages/</guid>
  <pubDate>Fri, 11 Nov 2022 05:00:00 GMT</pubDate>
</item>
</channel>
</rss>
