---
title: "Growth curves"
author: "Andrew"
date: "2022-10-14"
categories: [stan, simulation]
freeze: true
---

```{r eval=TRUE, message=FALSE, warning=FALSE}
library(targets)
library(ggplot2)
library(tidyverse)
library(tidybayes)
```

Many animals and plants grow quickly when small and more slowly as they mature. There are many popular ways of describing this relationship; one very common and convenient relationship is the Von-Bertanalaffy (VB) growth curve:

$$
L_t = L_0e^{-rt} + L_\infty(1 - e^{-rt})
$$ {#eq-vb}

This can also be written as

$$
L_t = L_\infty - (L_\infty - L_0)e^{-rt}
$$

This curve has a long tradition in ecology. It can be derived from simple assumptions about how different aspects of metabolism scale with the body size of an organism. I'm not going to derive it here because I don't want this to be a huge post!

I like this second way of writing the equation because it highlights that the VB equation is a linear transformation of an exponential function.

## a single tree

I'm going to do a simple simulation of one tree growing. here is code that does that

```{r}
#| echo: FALSE
#| class-output: .r
source(here::here("R", "vb-growth.R"))
sim_vb_one_tree
```

```{r error=TRUE}
#| label: fig-vb
#| fig-cap: "One tree's growth"
#| 
tar_load(vb_one_tree)

vb_one_tree |> 
  ggplot(aes(x = time, y = Lt_obs)) + 
  geom_point() + 
  geom_line(aes(y = Lt)) + 
  theme_bw()
```

simulate this same data in targets

fit a stan model to it! here is the Stan model: formatted?

```{r}
#| echo: FALSE
#| class-output: .stan

suppressPackageStartupMessages(library(cmdstanr))
vb_one_tree <- cmdstan_model(here::here("posts", "2022-10-14-growth_curve_measurement_error","vb_one_tree.stan"))

vb_one_tree
```

```{r, warning=FALSE, message=FALSE}

vb_one_tree <- cmdstan_model(here::here("posts", "2022-10-14-growth_curve_measurement_error","vb_one_tree.stan"))

one_tree_sim <- sim_vb_one_tree()

one_tree_list <- list(n = nrow(one_tree_sim),
                      time  = one_tree_sim$time, 
                      Lt = one_tree_sim$Lt_obs)

one_tree_post <- vb_one_tree$sample(data = one_tree_list,
                                    refresh = 0L,
                                    parallel_chains = 4)

one_tree_post
```

plot it

```{r}
#| fig-cap: Growth curve for one tree. the line shows the expected value, with posterior uncertainty around exactly what that average should be. 
library(tidybayes)

expected_df <- one_tree_post |> 
  spread_rvars(Lmax, r) |> 
  expand_grid(time = seq(0, 200, length.out = 14)) |> 
  mutate(Lt = Lmax * (1 - exp(-r * time)))

expected_plot <- expected_df |> 
  ggplot(aes(x = time, y = Lt)) + 
  stat_lineribbon()
expected_plot
```

This relationship shows the *average* line, the expected size of the tree. We can add the original data like this:

```{r}
one_tree_sim |> 
  ggplot(aes(x = time, y = Lt_obs)) + 
  geom_point() +
  stat_dist_lineribbon(aes(x = time, dist = Lt),
                  data = expected_df, inherit.aes = FALSE)
```

At the time of this writing the error messages here are particularly unhelpful. If you try to use `stat_lineribbon` rather than `stat_dist_lineribbon` you get the foloing misleading message:

```{r error=TRUE, eval=FALSE}
one_tree_sim |> 
  ggplot(aes(x = time, y = Lt_obs)) + 
  geom_point() +
  stat_lineribbon(aes(x = time, y = Lt),
                  data = expected_df, inherit.aes = FALSE)
```
