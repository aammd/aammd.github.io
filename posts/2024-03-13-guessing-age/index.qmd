---
title: "Guessing the age of Kangaroos"
author: "Andrew MacDonald"
description: |
  Using a growth curve to guess at individual age
date: 11 Nov 2022
editor: source
categories: [UdeS, stan]
draft: true
editor_options: 
  chunk_output_type: console
---

```{r setup, eval=TRUE, message=FALSE, warning=FALSE}
library(targets)
library(ggplot2)
library(tidyverse)
library(tidybayes)
```

Simulating roos of known age! 
They have some variation in their growth rates

```{r}
## same max size
## no environmental variation
## differences in growth rate

vb_growth <- function(time, r, Lmax){
  Lmax * (1 - exp(-r*time))
}

curve(vb_growth(x, 0.3, 50), xlim = c(0, 13))



```
roos with different growth rates

```{r}

roo_gr <- runif(34, 0.2, 0.4)

expand_grid(
  roo_id = 1:34,
  age = 0:12
  ) |> 
  mutate(roo_gr = roo_gr[roo_id],
         leg =vb_growth(time = age, r = roo_gr, Lmax = 50)) |> 
  ggplot(aes(x = age, y = leg, group = roo_id))+ 
  geom_line()
```



Imagine this same process but tracking multiple cohorts at once, all still living to exactly 12 years old

```{r}
## number of cohorts
n_cohorts <- 14

## roos per year
roos_per_year <- 25

## total roos
n_roos <- n_cohorts * roos_per_year

roo_gr <- rep(.31, times = n_roos) #runif(n_roos, 0.2, 0.4)

cohort_grow <- tibble(
  roo_id = 1:n_roos,
  cohort_id = rep(1:n_cohorts, each = roos_per_year)
  ) |> 
  expand_grid(age = 0:12) |> 
  mutate(roo_gr = roo_gr[roo_id],
         leg =vb_growth(time = age, r = roo_gr, Lmax = 50),
         year = 2000 + cohort_id + age) 

cohort_grow |> #View()
  ggplot(aes(x = year, y = leg, group = roo_id)) + geom_line(alpha = .3)
```

sampling and "forgetting" some of them. Not counting babies, young of the year.

```{r}
roos_2010 <- cohort_grow |> 
  filter(year == 2010)#, 
         # leg > 0)

roos_2010 |> 
  ggplot(aes(x = leg)) + 
  geom_histogram()
```

These are all the roos AVAILABLE to be caught in 2010

We only get to catch 80% of them


```{r}
roos_2010$roo_id |> n_distinct()
```

```{r}
## only catch 80%, every year, independent of whether or not they have ever been caught before
roos_tagged <- cohort_grow |> 
  mutate(is_caught = rbinom(length(roo_id), prob = .7, size = 1)) |> 
  # filter for a year when there were roos of every size in this example
  filter(year >=2009, 
         year < 2014)

roos_tagged |> 
  ggplot(aes(x = year, y = leg, group = roo_id)) +# geom_line(alpha = .3) +
  geom_point(aes(colour = is_caught), position = position_jitter(width = .1))

```

This is a simple simulation of how the data look in the real world.

Should the smallest roos have a nonzero value for the length? 

We only observe roos if they are caught!

Roos 2 yo or younger are identified with age 
roos older than that are NOT

```{r}
roos_observed <- roos_tagged |> 
  filter(is_caught == 1) |> 
  mutate(leg_meas = rnorm(length(leg), mean = leg, sd = .5)) |> 
  group_by(roo_id) |>
  mutate(age_at_capture = if_else(min(age)<3, min(age), false = NA),
         time_since_capture = year - min(year))
```

```{r}
## 
roos_observed |> 
  ggplot(aes(x = time_since_capture, y = leg_meas, group = roo_id)) + geom_line() + 
  facet_wrap(~age_at_capture)
```

```{r}
#| class-output: stan
library(cmdstanr)
roo_age <- cmdstan_model(here::here("posts/2024-03-13-guessing-age/roo_age.stan"))
roo_age
```


```{r}
#| warning: false
## observed roo_id might not be identical to the TRUE roo_id, since its possible that I simulated a roo that never got sampled even once! This will cause a porblem with the indexing, because I'm using the roo_id also as a way to index into the vector of roo-level parameters (t0 and r)

roos_observed$roo_id_obs <- as.numeric(as.factor(roos_observed$roo_id))

roo_obs_ages <- roos_observed |> 
  group_by(roo_id_obs) |> 
  summarize(age_at_capture = unique(age_at_capture),
            true_age_at_capture = min(age),
            # original ID which doesn't need to be the one used in the model
            roo_id = unique(roo_id)) |> 
  ungroup() |> 
  arrange(roo_id_obs)



# get the data together
roo_data <- list(n = length(roos_observed$roo_id_obs),
     nroo = max(roos_observed$roo_id_obs),
     leg = roos_observed$leg,
     time_since_capture = roos_observed$time_since_capture,
     roo_id = roos_observed$roo_id_obs,
     n_known_age = sum(!is.na(roo_obs_ages$age_at_capture)),
     ii_known = which(!is.na(roo_obs_ages$age_at_capture)),
     n_unk_age = sum(is.na(roo_obs_ages$age_at_capture)),
     ii_unobs = which(is.na(roo_obs_ages$age_at_capture)),
     age_at_capture = roo_obs_ages$age_at_capture[which(!is.na(roo_obs_ages$age_at_capture))]
     )

roo_age_post <- roo_age$sample(data = roo_data,
                               parallel_chains = 4, 
                               refresh = 0)
```

## How did we do?

growth rates

```{r}
roo_age_post |> 
  gather_rvars(r[roo])
```

growth rate is consistently an underestimate! Why is that.


```{r}
t0_roos <- gather_rvars(
  roo_age_post,
  t0_param[roo_id_obs_post])

length(roo_data$ii_unobs)
## pull out the true ages using the subscripts

roo_obs_ages[roo_data$ii_unobs,] |> 
  bind_cols(t0_roos) |> 
  ggplot(aes(x = true_age_at_capture, dist = .value)) + 
  stat_pointinterval()


roos_observed |> glimpse()

roos_observed
```

## Back to the drawing board

Simulate one roo and fit a simple model to it

```{r}
time <- 0:13
one_roo_mean <- vb_growth(time = time, r = .3, Lmax = 50)

one_roo_obs <- rnorm(
  n = length(one_roo_mean),
  mean = one_roo_mean,
  sd = 1)

plot(time, one_roo_obs)


```

```{r}
#| class-output: stan
one_roo_age <- cmdstan_model(stan_file = , here::here("posts/2024-03-13-guessing-age/one_roo_age.stan"))

one_roo_age
```

```{r}
one_roo_age_post <- one_roo_age$sample(data = list(
  n = length(time),
  leg = one_roo_obs,
  time_since_capture = time,
  age_at_capture = 0),
  refresh = 0
)

one_roo_age_post |> 
  spread_rvars(pred_leg[time]) |> 
  ggplot(aes(x = time-1, dist = pred_leg)) + 
  stat_lineribbon() + 
  scale_fill_brewer(palette = "Greens", direction = -1) + 
  geom_point(aes(x = time, y = leg),
             data = tibble(time, leg = one_roo_obs), 
             size = 4,
             
             inherit.aes = FALSE, pch = 21, fill = "orange")


```

```{r}
curve(500 * (1 - exp(-.3*x)), xlim = c(0, 13))
curve(500 * (1 - exp(-.3*(x - 2))), xlim = c(0, 13), add = TRUE)
curve(500 * (1 - exp(-.3*(x + 5))), xlim = c(0, 13), add = TRUE)
```


## now try later in life

```{r}

time <- 0:13
## remove the first 3 years of life
time_late <- time[-(1:3)]
age_when_obs <- min(time_late)
time_since_obs <- time_late - age_when_obs

one_roo_mean <- vb_growth(time = time, r = .3, Lmax = 50)

one_roo_obs <- rnorm(
  n = length(one_roo_mean),
  mean = one_roo_mean,
  sd = 1)

one_roo_obs_late <- one_roo_obs[-(1:3)]

plot(time_since_obs, one_roo_obs_late, ylim = c(0, 55), xlim = c(-3, 10))


```


```{r}
one_roo_age_post <- one_roo_age$sample(data = list(
  n = length(time_since_obs),
  leg = one_roo_obs_late,
  time_since_capture = time_since_obs,
  age_at_capture = age_when_obs),
  refresh = 0
)

one_roo_age_post |> 
  spread_rvars(pred_leg[time]) |> 
  ggplot(aes(x = time_since_obs, dist = pred_leg)) + 
  stat_lineribbon() + 
  scale_fill_brewer(palette = "Greens", direction = -1) + 
  geom_point(aes(x = time, y = leg),
             data = tibble(time = time_since_obs, leg = one_roo_obs_late), 
             size = 4,
             
             inherit.aes = FALSE, pch = 21, fill = "orange")

```

if we know the age at the start


## now try with unknown age


```{r}
#| class-output: stan
one_roo_age_unk <- cmdstan_model(stan_file = , here::here("posts/2024-03-13-guessing-age/one_roo_age_unk.stan"))

one_roo_age_unk
```

```{r}
one_roo_age_unk_post <- one_roo_age_unk$sample(data = list(
  n = length(time_since_obs),
  leg = one_roo_obs_late,
  time_since_capture = time_since_obs
  # age_at_capture = age_when_obs
  ),
  refresh = 0)

one_roo_age_unk_post |> 
  spread_rvars(pred_leg[time]) |> 
  ggplot(aes(x = time-1, dist = pred_leg)) + 
  stat_lineribbon() + 
  scale_fill_brewer(palette = "Greens", direction = -1) + 
  geom_point(aes(x = time, y = leg), tibble(time = time_since_obs, leg = one_roo_obs_late), 
             inherit.aes = FALSE, pch = 21, fill = "orange")


```

```{r}
one_roo_age_unk_post
```



## Start size

this could also be done with start size, asking what size is a roo at the end of the first year? this would be the first time measurement of each animal.
to estimate age in the case where starting with start size, I would work on the log scale. then I would just go back 10 years (an oldish roo) from first measuremnet for every roo of unknown age. at every age past the first 2 (becuase these wld be young roos already measured) I would measure the probability of this roo happening on the start_size distribution.





## Age predicts reproductive success


## ordinal regression

```{r}
#| class-output: stan
ordered_logistic <- cmdstan_model(stan_file = , here::here("posts/2024-03-13-guessing-age/ordered_logistic.stan"))

ordered_logistic
```

```{r}
dl <- list(n_cat = 6,
           N = 30,
           n_x = 1,
           x = matrix(runif(30), nrow = 30, ncol = 1))

ordered_logistic_samp <- ordered_logistic$sample(data = dl, chains = 1)

```

```{r}
prior_pred_df <- spread_draws(ordered_logistic_samp, y[i], beta[j], ndraws = 5) |> 
  mutate(x = dl$x[i, ])

ggplot(prior_pred_df, aes(x = x, y = y)) + geom_point() + facet_wrap(~.draw) + 
  stat_function(aes(v = beta), fun = \(x, v) v*x)

```
