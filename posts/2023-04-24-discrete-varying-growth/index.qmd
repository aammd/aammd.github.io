---
title: Discrete growth with variation
author: Andrew MacDonald
description: |
getting bigger but not in the same way
date: 2023-04-26
editor: source
categories: [UdeS, stan]
draft: true
---


## vb growth

```{r}

library(tidyverse)



one_roo <- tibble(age = 0:12,
       has_baby = as.numeric(age > 3),
       size = 0
) 
one_roo$size[1] <- .01

vb_discrete <- function(L_prev, L_max, r, deltat){
  L_now <- L_prev*exp(-r * deltat) + L_max * (1 - exp(-r * deltat))
  return(L_now)
}

loop_down_vb_discrete <- function(size_vec, Lmax, r, deltaT) {
  new_size <- size_vec
  
  for(j in 2:length(new_size)){
    new_size[j] <- vb_discrete(L_prev = new_size[j-1], 
                               L_max = Lmax,
                               r = r, 
                               deltat = deltaT)
  }
  return(new_size)
}



one_roo_obs <- one_roo |> 
  mutate(size = loop_down_vb_discrete(size,
                                      Lmax = 270,
                                      r = .8, deltaT = 1),
         obs = rnorm(n = length(size), mean = size, sd = 1.5))

one_roo_obs |> 
  ggplot(aes(x = age, y = obs)) + 
  geom_point() + 
  geom_line(aes(y = size))

## now to add a cost of reproduction on a log scale.
log(.8)


loop_down_vb_rvec <- function(size_vec, Lmax, rvec, deltaT) {
  new_size <- size_vec
  
  for(j in 2:length(new_size)){
    new_size[j] <- vb_discrete(L_prev = new_size[j-1], 
                               L_max = Lmax, 
                               r = rvec[j], 
                               deltat = deltaT)
  }
  return(new_size)
}

effect_baby <- -.7

one_roo_baby <- one_roo_obs |> 
  mutate(has_baby = as.numeric(age == 4)) |> 
  mutate(log_r = log(.8) + effect_baby * has_baby) |> 
  # rowwise() |> 
  mutate(size = loop_down_vb_rvec(size,
                                  Lmax = 270, 
                                  r = exp(log_r), 
                                  deltaT = 1),
         obs = rnorm(n = length(size), mean = size, sd = 1.5))

one_roo_baby |> 
  ggplot(aes(x = age, y = size)) + 
  geom_line() + 
  geom_point() + 
  geom_vline(xintercept = 3.5)

# also daydreaming about how to include measurement error in this model.. it would be difficult, I think. 
## can you factor out the error from observations somehow? 
## or easier just to have unobserved parameters there
# I guess i'm thinking about marginalization.

# seasonal variation
one_roo_baby_yr <- rerun(.n = 42, {
  one_roo_obs |> 
    mutate(log_r = log(.8) + 
             effect_baby * has_baby + 
             rnorm(n = length(age),
                   mean = 0,
                   sd = .4)) |> 
    mutate(size = loop_down_vb_rvec(size,
                                    Lmax = 270, 
                                    r = exp(log_r), 
                                    deltaT = 1),
           obs = rnorm(n = length(size), mean = size, sd = 1.5))
})
  
one_roo_baby_yr |> bind_rows(.id = "sim") |> glimpse() |> 
  ggplot(aes(x = age, y = size, group = sim)) + 
  geom_line() + 
  geom_vline(xintercept = 3.5)


## can we do it for more than one individual?

# simple scenario: 11 individuals a year, each year for say 12 years

## start with individuals and their birth years
birth_years <- expand_grid(year = 2001:2012,
                           indiv = paste0("_", 1:11)) |> 
  mutate(indiv = paste0(year, indiv)) 


## let each individual age
indiv_ages <- birth_years |> 
  rowwise() |> 
  mutate(age = list(0:11)) |> 
  unnest(age) |> 
  arrange(indiv) |> 
  mutate(year = year + age) 

indiv_ages |> 
  ggplot(aes(x = year, y = age, group = indiv)) + 
  geom_point() + 
  geom_line()

## Two things contribute to variation in growth rates: 
## * year variation
## * individual variation

year_effects <- indiv_ages$year |> 
  n_distinct() |> 
  rnorm(mean= 0, sd = .7) |> 
  set_names(indiv_ages$year |> unique())

indiv_effects <- indiv_ages$indiv |> 
  n_distinct() |> 
  rnorm(mean= 0, sd = .2) |> 
  set_names(indiv_ages$indiv |> unique())

growth_time_id <- indiv_ages |> 
  mutate(r_yr = year_effects[as.character(year)],
         r_id = indiv_effects[indiv],
         r_ln = log(.5) + r_id + r_yr) |> 
  # start the size column for each individual
  mutate(size = 0) |> 
  group_by(indiv) |> 
  mutate(size = if_else(age == 0, 1.1, 0)) |> 
  # let them grow  
  mutate(size = loop_down_vb_rvec(size,
                                  Lmax = 270, 
                                  r = exp(r_ln), 
                                  deltaT = 1)
  ) |> 
  ungroup()

growth_time_id |> 
  ggplot(aes(x = year, y = size, group = indiv)) + 
  geom_line(alpha = .5)

```


```{r}
growth_time_id |> 
  filter(age != 0 )
  group_by()
```



model the start size as unobserved data, as essentially just "missing data" 
should it be hierarchical? what would that mean? that all individuals have a similar difference, variation in early life? begin by modeling it as uncorrelated with other individual effects.

treat missing data the same way:
use a for-loop to find all the impossible (-999 leg lengths or something)
that or write a program that takes as input the location of the NAs
but really struggling with knowing how to get age into this model. 
like we don't know the age of animals, just their age relative to our first measurement of them

really seems like the easiest thing to work with would be those measurements directly -- treat age of first measurement as t = 0, and ask by what it should be offset to fit with the rest of the animals. could model t as exp (mu + N(0, sigma_to))

Then you can fill in the missing observations as well -- times when we don't observe L -- as a vector of missing observations

```{r}
curve(200 * (1 - exp(-0.6*(x - (-.3)))),
      xlim = c(0, 9), ylim = c(0,200))
```

It has to be negative -- or, rearrage (combine -) and make always positive

```{r}
curve(200 * (1 - exp(-0.6*(x + 1))),
      xlim = c(0, 9), ylim = c(0,200))
```

Because the roo is alwasy born BEFORE you see it for the first time! 

### parameter recovery

Can we recover parameters from this dataset, with perhaps just some measurement error

```{r}
library(cmdstanr)

discrete_vb_constant <- cmdstan_model(stan_file = "posts/2023-04-24-discrete-varying-growth/discrete_vb_constant.stan")
```


```{r}
one_roo_list <- one_roo_obs |> 
  filter(age != 0) |> 
  with(list(measure = obs, 
            N = length(obs)))

discrete_vb_constant$sample(data = one_roo_list)

```


## in brms

```{r}
grow_data_lagged <- growth_time_id |> 
  # add measurment error
  mutate(obs = rnorm(length(size), mean = size, sd = 1.3)) |> 
  select(year, indiv, age, obs) |> 
  filter(age != 0) |> 
  mutate(last_obs = lag(obs)) |> 
  # drop first measurement because we can't use it
  filter(!is.na(last_obs))

library(brms)

bf_discr <- bf(obs ~ last_obs * exp(-exp(r)) + Lmax * (1 - exp(-exp(r))),
    r ~ 1 + (1|year) + (1|indiv),
    Lmax ~ 1,
    nl = TRUE)

get_prior(bf_discr, data = grow_data_lagged)



test <- brm(bf_discr, data = grow_data_lagged,
            prior = c(
  prior(exponential(1), class = "sigma"),
  prior(normal(250, 20), nlpar = "Lmax"),
  prior(normal(0,1), nlpar = "r", class = "b"),
  prior(exponential(10), class = "sd", nlpar = "r", group = "indiv"),
  prior(exponential(10), class = "sd", nlpar = "r", group = "year")
))

```

### Stan for the varying effect model

