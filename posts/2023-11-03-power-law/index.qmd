---
title: "Power laws on log-linear plots"
author: "Andrew MacDonald, Am√©lie Morin"
description: |
  how to make decelerating curves with lm.
date: 03 Nov 2023
editor: source
categories: [UdeS, stan]
---

```{r setup, eval=TRUE, message=FALSE, warning=FALSE}
library(tidyverse)
```

## The Math

$$
y = ax^b
$$


$$ 
\ln{y} = \ln{a} + b\ln{x}
$$

## simulate data

```{r}
a <- 11
b <- 0.3
# longeur <- runif(104, min = 2, max = 25)
longeur <- sample(c(2:7, 10, 12, 15, 25), size = 104, replace = TRUE)

moy_bourdons <- a * longeur ^b

plot(longeur, moy_bourdons)
```

simulate observations

```{r}
obs_bourdons <- rpois(104, lambda = moy_bourdons)


tibble(longeur, obs_bourdons) |> 
  ggplot(aes(x = longeur, y = obs_bourdons)) + 
  geom_count()
```



## fit a power law

```{r}
bourdon_data <- tibble(longeur, obs_bourdons)

bourdon_data_log <- bourdon_data |> 
  mutate(log_longeur = log(longeur),
         log_obs_bourdons = log(obs_bourdons))


lm_pwr <- lm(log_obs_bourdons ~ log_longeur, data = bourdon_data_log)

```



## predict

```{r}
new_data <- tibble(log_longeur = log(1:25))

predictions_pwr <- broom::augment(x = lm_pwr,
                                  newdata = new_data,
                                  interval = "confidence") |>
  mutate(across(everything(), exp))

```



## plot

```{r}
predictions_pwr |> 
  ggplot(aes(x = log_longeur, y = .fitted)) + 
  geom_ribbon(
    aes(x = log_longeur,
        ymin = .lower,
        ymax = .upper), 
    inherit.aes = FALSE, fill = "lightgreen") + 
  geom_line() + 
  geom_count(aes(x = longeur, y = obs_bourdons), data = bourdon_data) + 
  geom_vline(xintercept = 12, lty = 2, col = "red")
```

